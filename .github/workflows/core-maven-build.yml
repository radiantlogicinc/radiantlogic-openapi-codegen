name: Maven Build

on:
  workflow_call:
    inputs:
      is_release:
        required: false
        type: boolean
        default: false
        description: If this is being called as part of a release
    outputs:
      project_name:
        description: The name of the project
        value: ${{ jobs.project_info.outputs.project_name }}
      project_version:
        description: The version of the project
        value: ${{ jobs.project_info.outputs.project_version }}

jobs:
  project_info:
    runs-on: ubuntu-latest
    outputs:
      project_version: ${{ steps.maven_project_info.outputs.project_version }}
      project_name: ${{ steps.maven_project_info.outputs.project_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: ./.github/actions/setup-java
        with:
          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
      - id: maven_project_info
        name: Get Project Info
        uses: ./.github/actions/maven-project-info

  build_artifact:
    runs-on: ubuntu-latest
    needs: ['project_info']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: ./.github/actions/setup-java
        with:
          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
      - name: Build Artifact
        run: mvn test-compile package -DskipTests
      - uses: actions/upload-artifact@v4
        with:
          name: project_artifacts
          path: ./codegen-modules/openapi-java-client-codegen/target/*.jar

# TODO restore below
#  run_unit_tests:
#    runs-on: ubuntu-latest
#    needs: ['build_artifact']
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Java
#        uses: ./.github/actions/setup-java
#        with:
#          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
#      - name: Run Unit Tests
#        run: mvn test
#
#  run_pmd:
#    runs-on: ubuntu-latest
#    needs: ['build_artifact']
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Java
#        uses: ./.github/actions/setup-java
#        with:
#          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
#      - name: Run PMD
#        run: mvn pmd:check
#
#  run_spotless:
#    runs-on: ubuntu-latest
#    needs: ['build_artifact']
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Java
#        uses: ./.github/actions/setup-java
#        with:
#          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
#      - name: Run Spotless
#        run: mvn spotless:check

  run_integration_tests:
    runs-on: ubuntu-latest
    needs: ['build_artifact']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: ./.github/actions/setup-java
        with:
          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
      - name: Print PATH
        run: echo $PATH
      - name: Run Integration Tests
        run: mvn integration-test -Dskip.surefire.tests
      - name: Upload Integration Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: integration_test_artifacts
          path: ~/.m2/repository/com/radiantlogic/openapi/generated/**/*

  run_usage_tests:
    runs-on: ubuntu-latest
    needs: ['run_integration_tests']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: ./.github/actions/setup-java
        with:
          pom_artifact_name: ${{ inputs.is_release && 'release_pom_xml' || '' }}
      - name: Download Integration Test Artifacts
        uses: actions/download-artifact@v4
        with:
          name: integration_test_artifacts
          path: ~/.m2/repository/com/radiantlogic/openapi/generated
      - name: Run Usage Tests
        run: mvn -P usage test