openapi: "3.0.2"
info:
  title: Broken Discriminator Test
  description: >-
    A test spec for scenarios involving broken discriminated unions beyond what is available in
    actual specs. The actual specs have enough examples that handling broken discriminators is 
    necessary, however they don't provide enough opportunities to exercise all possible implications
    of the code change.
  version: "1.0.0"
tags:
  - name: request-body
paths:
  /send-union:
    post:
      tags:
        - request-body
      operationId: send-union
      summary: Send a discriminated union
      description: >-
        Make a post request where the body is a broken discriminated union type to ensure 
        that serialization works correctly.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BrokenDiscriminatedUnion"
      responses:
        204:
          description: The operation was a success
components:
  schemas:
    Discriminator:
      type: string
      nullable: false
      enum:
        - FIRST
        - SECOND
        - THIRD
    FirstChild:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Discriminator"
        first:
          type: string
      required:
        - type
    SecondChild:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Discriminator"
        second:
          type: string
      required:
        - type
    ThirdChild:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Discriminator"
        third:
          type: string
      required:
        - type
    BrokenDiscriminatedUnion:
      type: object
      oneOf:
        - $ref: "#/components/schemas/FirstChild"
        - $ref: "#/components/schemas/SecondChild"
        - $ref: "#/components/schemas/ThirdChild"
      discriminator:
        propertyName: type

