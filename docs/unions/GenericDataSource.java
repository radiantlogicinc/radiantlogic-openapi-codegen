/*
 * RadiantOne V8 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8.1.4-beta.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radiantlogic.openapi.generated.radiantonev8api.model;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.radiantlogic.openapi.generated.radiantonev8api.model.CustomDataSource;
import com.radiantlogic.openapi.generated.radiantonev8api.model.DataSourceFailOver;
import com.radiantlogic.openapi.generated.radiantonev8api.model.DatabaseDataSource;
import com.radiantlogic.openapi.generated.radiantonev8api.model.LdapDataSource;
import com.radiantlogic.openapi.generated.radiantonev8api.model.RequiredDataSourceCategory;
import com.radiantlogic.openapi.generated.radiantonev8api.model.SDCMapping;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.radiantlogic.openapi.generated.radiantonev8api.invoker.JacksonConfig;

@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-06-30T12:58:41.011639-04:00[America/New_York]", comments = "Generator version: 7.13.0")
@JsonIgnoreProperties(
  value = "category", // ignore manually set category, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the category to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "category", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = CustomDataSource.class, name = "custom"),
  @JsonSubTypes.Type(value = DatabaseDataSource.class, name = "database"),
  @JsonSubTypes.Type(value = LdapDataSource.class, name = "ldap"),
})

public interface GenericDataSource  {
    RequiredDataSourceCategory getCategory();


}

