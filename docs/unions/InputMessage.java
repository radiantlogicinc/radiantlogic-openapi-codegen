/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * The version of the OpenAPI document: 2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radiantlogic.openapi.generated.openaiapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radiantlogic.openapi.generated.openaiapi.model.InputContent;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.radiantlogic.openapi.generated.openaiapi.invoker.JacksonConfig;

/**
 * A message input to the model with a role indicating instruction following hierarchy. Instructions given with the &#x60;developer&#x60; or &#x60;system&#x60; role take precedence over instructions given with the &#x60;user&#x60; role. 
 */
@JsonPropertyOrder({
  InputMessage.JSON_PROPERTY_TYPE,
  InputMessage.JSON_PROPERTY_ROLE,
  InputMessage.JSON_PROPERTY_STATUS,
  InputMessage.JSON_PROPERTY_CONTENT
})
@javax.annotation.Generated(value = "com.radiantlogic.openapi.codegen.javaclient.generate.codegen.RadiantJavaClientCodegen", date = "2025-06-30T12:58:09.229513-04:00[America/New_York]", comments = "Generator version: 7.13.0")
public class InputMessage implements Item {
  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  protected TypeEnum type;

  public static final String JSON_PROPERTY_ROLE = "role";
  @javax.annotation.Nonnull
  protected RoleEnum role;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  protected StatusEnum status;

  public static final String JSON_PROPERTY_CONTENT = "content";
  @javax.annotation.Nonnull
  protected List<InputContent.Raw> content = new ArrayList<>();

  public InputMessage() {
  }

  public InputMessage type(@javax.annotation.Nullable TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * The type of the message input. Always set to &#x60;message&#x60;. 
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }

  public InputMessage role(@javax.annotation.Nonnull RoleEnum role) {
    
    this.role = role;
    return this;
  }

  /**
   * The role of the message input. One of &#x60;user&#x60;, &#x60;system&#x60;, or &#x60;developer&#x60;. 
   * @return role
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(@javax.annotation.Nonnull RoleEnum role) {
    this.role = role;
  }

  public InputMessage status(@javax.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * The status of item. One of &#x60;in_progress&#x60;, &#x60;completed&#x60;, or &#x60;incomplete&#x60;. Populated when items are returned via API. 
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable StatusEnum status) {
    this.status = status;
  }

  public InputMessage content(@javax.annotation.Nonnull List<InputContent.Raw> content) {
    
    this.content = content;
    return this;
  }

  public InputMessage addContentItem(InputContent.Raw contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<>();
    }
    this.content.add(contentItem);
    return this;
  }

  /**
   * A list of one or many input items to the model, containing different content  types. 
   * @return content
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<InputContent.Raw> getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContent(@javax.annotation.Nonnull List<InputContent.Raw> content) {
    this.content = content;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputMessage inputMessage = (InputMessage) o;
    return Objects.equals(this.type, inputMessage.type) &&
        Objects.equals(this.role, inputMessage.role) &&
        Objects.equals(this.status, inputMessage.status) &&
        Objects.equals(this.content, inputMessage.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, role, status, content);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputMessage {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

