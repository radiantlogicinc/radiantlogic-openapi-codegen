openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API - actions
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
paths:
  /orgs/{org}/actions/cache/usage:
    get:
      summary: Get GitHub Actions cache usage for an organization
      description: >-
        Gets the total GitHub Actions cache usage for an organization.

        The data fetched using this API is refreshed approximately every 5
        minutes, so values returned from this endpoint may take at least 5
        minutes to get updated.


        OAuth tokens and personal access tokens (classic) need the `read:org`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-actions-cache-usage-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#get-github-actions-cache-usage-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-cache-usage-org-enterprise"
              examples:
                default:
                  $ref: "#/components/examples/actions-cache-usage-org-enterprise"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /orgs/{org}/actions/cache/usage-by-repository:
    get:
      summary: List repositories with GitHub Actions cache usage for an organization
      description: >-
        Lists repositories and their GitHub Actions cache usage for an
        organization.

        The data fetched using this API is refreshed approximately every 5
        minutes, so values returned from this endpoint may take at least 5
        minutes to get updated.


        OAuth tokens and personal access tokens (classic) need the `read:org`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-actions-cache-usage-by-repo-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#list-repositories-with-github-actions-cache-usage-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repository_cache_usages
                properties:
                  total_count:
                    type: integer
                  repository_cache_usages:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-cache-usage-by-repository"
              examples:
                default:
                  $ref: "#/components/examples/org-actions-cache-usage-by-repo"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /orgs/{org}/actions/hosted-runners:
    get:
      summary: List GitHub-hosted runners for an organization
      description: >-
        Lists all GitHub-hosted runners configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runner:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-hosted-runners-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#list-github-hosted-runners-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
    post:
      summary: Create a GitHub-hosted runner for an organization
      description: >-
        Creates a GitHub-hosted runner for an organization.

        OAuth tokens and personal access tokens (classic) need the
        `manage_runners:org` scope to use this endpoint.
      operationId: actions/create-hosted-runner-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#create-a-github-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner. Must be between 1 and 64 characters and may
                    only contain upper and lowercase letters a-z, numbers 0-9,
                    '.', '-', and '_'.
                  type: string
                image:
                  description: The image of runner. To list all available images, use `GET
                    /actions/hosted-runners/images/github-owned` or `GET
                    /actions/hosted-runners/images/partner`.
                  type: object
                  properties:
                    id:
                      description: The unique identifier of the runner image.
                      type: string
                    source:
                      description: The source of the runner image.
                      type: string
                      enum:
                        - github
                        - partner
                        - custom
                size:
                  description: The machine size of the runner. To list available sizes, use `GET
                    actions/hosted-runners/machine-sizes`
                  type: string
                runner_group_id:
                  description: The existing runner group to add this runner to.
                  type: integer
                maximum_runners:
                  description: The maximum amount of runners to scale up to. Runners will not
                    auto-scale above this number. Use this setting to limit your
                    cost.
                  type: integer
                enable_static_ip:
                  description: Whether this runner should be created with a static public IP. Note
                    limit on account. To list limits on account, use `GET
                    actions/hosted-runners/limits`
                  type: boolean
              required:
                - name
                - image
                - size
                - runner_group_id
            examples:
              default:
                value:
                  name: My Hosted runner
                  image:
                    id: ubuntu-latest
                    source: github
                  runner_group_id: 1
                  size: 4-core
                  maximum_runners: 50
                  enable_static_ip: false
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/images/github-owned:
    get:
      summary: Get GitHub-owned images for GitHub-hosted runners in an organization
      description: Get the list of GitHub-owned images available for GitHub-hosted
        runners for an organization.
      operationId: actions/get-hosted-runners-github-owned-images-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-github-owned-images-for-github-hosted-runners-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - images
                properties:
                  total_count:
                    type: integer
                  images:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-hosted-runner-image"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-image"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/images/partner:
    get:
      summary: Get partner images for GitHub-hosted runners in an organization
      description: Get the list of partner images available for GitHub-hosted runners
        for an organization.
      operationId: actions/get-hosted-runners-partner-images-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-partner-images-for-github-hosted-runners-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - images
                properties:
                  total_count:
                    type: integer
                  images:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-hosted-runner-image"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-image"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/limits:
    get:
      summary: Get limits on GitHub-hosted runners for an organization
      description: Get the GitHub-hosted runners limits for an organization.
      operationId: actions/get-hosted-runners-limits-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-limits-on-github-hosted-runners-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-hosted-runner-limits"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-limits-default"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/machine-sizes:
    get:
      summary: Get GitHub-hosted runners machine specs for an organization
      description: Get the list of machine specs available for GitHub-hosted runners
        for an organization.
      operationId: actions/get-hosted-runners-machine-specs-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-github-hosted-runners-machine-specs-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - machine_specs
                properties:
                  total_count:
                    type: integer
                  machine_specs:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-hosted-runner-machine-spec"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-machine-spec"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/platforms:
    get:
      summary: Get platforms for GitHub-hosted runners in an organization
      description: Get the list of platforms available for GitHub-hosted runners for
        an organization.
      operationId: actions/get-hosted-runners-platforms-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-platforms-for-github-hosted-runners-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - platforms
                properties:
                  total_count:
                    type: integer
                  platforms:
                    type: array
                    items:
                      type: string
              examples:
                default:
                  value:
                    total_count: 1
                    platforms:
                      - linux-x64
                      - win-x64
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/hosted-runners/{hosted_runner_id}:
    get:
      summary: Get a GitHub-hosted runner for an organization
      description: >-
        Gets a GitHub-hosted runner configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#get-a-github-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hosted-runner-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: hosted-runners
    patch:
      summary: Update a GitHub-hosted runner for an organization
      description: >-
        Updates a GitHub-hosted runner for an organization.

        OAuth app tokens and personal access tokens (classic) need the
        `manage_runners:org` scope to use this endpoint.
      operationId: actions/update-hosted-runner-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#update-a-github-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hosted-runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner. Must be between 1 and 64 characters and may
                    only contain upper and lowercase letters a-z, numbers 0-9,
                    '.', '-', and '_'.
                  type: string
                runner_group_id:
                  description: The existing runner group to add this runner to.
                  type: integer
                maximum_runners:
                  description: The maximum amount of runners to scale up to. Runners will not
                    auto-scale above this number. Use this setting to limit your
                    cost.
                  type: integer
                enable_static_ip:
                  description: Whether this runner should be updated with a static public IP. Note
                    limit on account. To list limits on account, use `GET
                    actions/hosted-runners/limits`
                  type: boolean
            examples:
              default:
                value:
                  name: My larger runner
                  runner_group_id: 1
                  maximum_runners: 50
                  enable_static_ip: false
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: hosted-runners
    delete:
      summary: Delete a GitHub-hosted runner for an organization
      description: Deletes a GitHub-hosted runner for an organization.
      operationId: actions/delete-hosted-runner-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/hosted-runners#delete-a-github-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/hosted-runner-id"
      responses:
        "202":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: hosted-runners
  /orgs/{org}/actions/permissions:
    get:
      summary: Get GitHub Actions permissions for an organization
      description: >-
        Gets the GitHub Actions permissions policy for repositories and allowed
        actions and reusable workflows in an organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/get-github-actions-permissions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-github-actions-permissions-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-organization-permissions"
              examples:
                default:
                  $ref: "#/components/examples/actions-organization-permissions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for an organization
      description: >-
        Sets the GitHub Actions permissions policy for repositories and allowed
        actions and reusable workflows in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-github-actions-permissions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-github-actions-permissions-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "204":
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_repositories:
                  $ref: "#/components/schemas/enabled-repositories"
                allowed_actions:
                  $ref: "#/components/schemas/allowed-actions"
              required:
                - enabled_repositories
            examples:
              default:
                value:
                  enabled_repositories: all
                  allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories:
    get:
      summary: List selected repositories enabled for GitHub Actions in an organization
      description: >-
        Lists the selected repositories that are enabled for GitHub Actions in
        an organization. To use this endpoint, the organization permission
        policy for `enabled_repositories` must be configured to `selected`. For
        more information, see "[Set GitHub Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-selected-repositories-enabled-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#list-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: "#/components/schemas/repository"
              examples:
                default:
                  $ref: "#/components/examples/repository-paginated"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set selected repositories enabled for GitHub Actions in an organization
      description: >-
        Replaces the list of selected repositories that are enabled for GitHub
        Actions in an organization. To use this endpoint, the organization
        permission policy for `enabled_repositories` must be configured to
        `selected`. For more information, see "[Set GitHub Actions permissions
        for an
        organization](#set-github-actions-permissions-for-an-organization)."



        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-selected-repositories-enabled-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "204":
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs to enable for GitHub Actions.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 32
                    - 42
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories/{repository_id}:
    put:
      summary: Enable a selected repository for GitHub Actions in an organization
      description: >-
        Adds a repository to the list of selected repositories that are enabled
        for GitHub Actions in an organization. To use this endpoint, the
        organization permission policy for `enabled_repositories` must be must
        be configured to `selected`. For more information, see "[Set GitHub
        Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/enable-selected-repository-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#enable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/repository-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    delete:
      summary: Disable a selected repository for GitHub Actions in an organization
      description: >-
        Removes a repository from the list of selected repositories that are
        enabled for GitHub Actions in an organization. To use this endpoint, the
        organization permission policy for `enabled_repositories` must be
        configured to `selected`. For more information, see "[Set GitHub Actions
        permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/disable-selected-repository-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#disable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/repository-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/selected-actions:
    get:
      summary: Get allowed actions and reusable workflows for an organization
      description: >-
        Gets the selected actions and reusable workflows that are allowed in an
        organization. To use this endpoint, the organization permission policy
        for `allowed_actions` must be configured to `selected`. For more
        information, see "[Set GitHub Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/get-allowed-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/selected-actions"
              examples:
                default:
                  $ref: "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions and reusable workflows for an organization
      description: >-
        Sets the actions and reusable workflows that are allowed in an
        organization. To use this endpoint, the organization permission policy
        for `allowed_actions` must be configured to `selected`. For more
        information, see "[Set GitHub Actions permissions for an
        organization](#set-github-actions-permissions-for-an-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-allowed-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-allowed-actions-and-reusable-workflows-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "204":
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/selected-actions"
            examples:
              selected_actions:
                $ref: "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/workflow:
    get:
      summary: Get default workflow permissions for an organization
      description: |-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization,
        as well as whether GitHub Actions can submit approving pull request reviews. For more information, see
        "[Setting the permissions of the GITHUB_TOKEN for your organization](https://docs.github.com/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."

        OAuth tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-default-workflow-permissions-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-get-default-workflow-permissions"
              examples:
                default:
                  $ref: "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions for an organization
      description: |-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets if GitHub Actions
        can submit approving pull request reviews. For more information, see
        "[Setting the permissions of the GITHUB_TOKEN for your organization](https://docs.github.com/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#setting-the-permissions-of-the-github_token-for-your-organization)."

        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-default-workflow-permissions-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "204":
          description: Success response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/actions-set-default-workflow-permissions"
            examples:
              default:
                $ref: "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/runner-groups:
    get:
      summary: List self-hosted runner groups for an organization
      description: >-
        Lists all self-hosted runner groups configured in an organization and
        inherited from an enterprise.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runner-groups-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#list-self-hosted-runner-groups-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/visible-to-repository"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runner_groups
                properties:
                  total_count:
                    type: number
                  runner_groups:
                    type: array
                    items:
                      $ref: "#/components/schemas/runner-groups-org"
              examples:
                default:
                  $ref: "#/components/examples/runner-groups-org"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    post:
      summary: Create a self-hosted runner group for an organization
      description: >-
        Creates a new self-hosted runner group for an organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/create-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#create-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: Visibility of a runner group. You can select all repositories,
                    select individual repositories, or limit access to private
                    repositories.
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                  default: all
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
                allows_public_repositories:
                  description: Whether the runner group can be used by `public` repositories.
                  type: boolean
                  default: false
                restricted_to_workflows:
                  description: If `true`, the runner group will be restricted to running only the
                    workflows specified in the `selected_workflows` array.
                  type: boolean
                  default: false
                selected_workflows:
                  description: List of workflows the runner group should be allowed to run. This
                    setting will be ignored unless `restricted_to_workflows` is
                    set to `true`.
                  type: array
                  items:
                    type: string
                    description: Name of workflow the runner group should be allowed to run. Note
                      that a ref, tag, or long SHA is required.
                    example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
                network_configuration_id:
                  description: The identifier of a hosted compute network configuration.
                  type: string
              required:
                - name
            examples:
              default:
                value:
                  name: Expensive hardware runners
                  visibility: selected
                  selected_repository_ids:
                    - 32
                    - 91
                  runners:
                    - 9
                    - 2
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/runner-groups-org"
              examples:
                default:
                  $ref: "#/components/examples/runner-group"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}:
    get:
      summary: Get a self-hosted runner group for an organization
      description: >-
        Gets a specific self-hosted runner group for an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/get-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#get-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/runner-groups-org"
              examples:
                default:
                  $ref: "#/components/examples/runner-group-item"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    patch:
      summary: Update a self-hosted runner group for an organization
      description: >-
        Updates the `name` and `visibility` of a self-hosted runner group in an
        organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/update-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#update-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: Visibility of a runner group. You can select all repositories,
                    select individual repositories, or all private repositories.
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                allows_public_repositories:
                  description: Whether the runner group can be used by `public` repositories.
                  type: boolean
                  default: false
                restricted_to_workflows:
                  description: If `true`, the runner group will be restricted to running only the
                    workflows specified in the `selected_workflows` array.
                  type: boolean
                  default: false
                selected_workflows:
                  description: List of workflows the runner group should be allowed to run. This
                    setting will be ignored unless `restricted_to_workflows` is
                    set to `true`.
                  type: array
                  items:
                    type: string
                    description: Name of workflow the runner group should be allowed to run. Note
                      that a ref, tag, or long SHA is required.
                    example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
                network_configuration_id:
                  description: The identifier of a hosted compute network configuration.
                  type: string
                  nullable: true
              required:
                - name
            examples:
              default:
                value:
                  name: Expensive hardware runners
                  visibility: selected
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/runner-groups-org"
              examples:
                default:
                  $ref: "#/components/examples/runner-group"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Delete a self-hosted runner group from an organization
      description: >-
        Deletes a self-hosted runner group for an organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/delete-self-hosted-runner-group-from-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#delete-a-self-hosted-runner-group-from-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners:
    get:
      summary: List GitHub-hosted runners in a group for an organization
      description: >-
        Lists the GitHub-hosted runners in an organization group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-github-hosted-runners-in-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#list-github-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: number
                  runners:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-hosted-runner"
              examples:
                default:
                  $ref: "#/components/examples/actions-hosted-runner-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories:
    get:
      summary: List repository access to a self-hosted runner group in an organization
      description: >-
        Lists the repositories with access to a self-hosted runner group
        configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per-page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: "#/components/schemas/minimal-repository"
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-paginated"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set repository access for a self-hosted runner group in an organization
      description: >-
        Replaces the list of repositories that have access to a self-hosted
        runner group configured in an organization.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#set-repository-access-for-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 32
                    - 91
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}:
    put:
      summary: Add repository access to a self-hosted runner group in an organization
      description: >-
        Adds a repository to the list of repositories that can access a
        self-hosted runner group. The runner group must have `visibility` set to
        `selected`. For more information, see "[Create a self-hosted runner
        group for an
        organization](#create-a-self-hosted-runner-group-for-an-organization)."


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#add-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/repository-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Remove repository access to a self-hosted runner group in an organization
      description: >-
        Removes a repository from the list of selected repositories that can
        access a self-hosted runner group. The runner group must have
        `visibility` set to `selected`. For more information, see "[Create a
        self-hosted runner group for an
        organization](#create-a-self-hosted-runner-group-for-an-organization)."


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/remove-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/repository-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners:
    get:
      summary: List self-hosted runners in a group for an organization
      description: >-
        Lists self-hosted runners that are in a specific organization group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runners-in-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#list-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: number
                  runners:
                    type: array
                    items:
                      $ref: "#/components/schemas/runner"
              examples:
                default:
                  $ref: "#/components/examples/runner-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set self-hosted runners in a group for an organization
      description: >-
        Replaces the list of self-hosted runners that are part of an
        organization runner group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/set-self-hosted-runners-in-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#set-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
              required:
                - runners
            examples:
              default:
                value:
                  runners:
                    - 9
                    - 2
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}:
    put:
      summary: Add a self-hosted runner to a group for an organization
      description: >-
        Adds a self-hosted runner to a runner group configured in an
        organization.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-self-hosted-runner-to-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#add-a-self-hosted-runner-to-a-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Remove a self-hosted runner from a group for an organization
      description: >-
        Removes a self-hosted runner from a group configured in an organization.
        The runner is then returned to the default group.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.
      operationId: actions/remove-self-hosted-runner-from-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runner-groups#remove-a-self-hosted-runner-from-a-group-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-group-id"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "204":
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runners:
    get:
      summary: List self-hosted runners for an organization
      description: >-
        Lists all self-hosted runners configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-self-hosted-runners-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization
      parameters:
        - name: name
          description: The name of a self-hosted runner.
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: "#/components/schemas/runner"
              examples:
                default:
                  $ref: "#/components/examples/runner-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/downloads:
    get:
      summary: List runner applications for an organization
      description: >-
        Lists binaries for the runner application that you can download and run.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint.  If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-runner-applications-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/runner-application"
              examples:
                default:
                  $ref: "#/components/examples/runner-application-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/generate-jitconfig:
    post:
      summary: Create configuration for a just-in-time runner for an organization
      description: >-
        Generates a configuration that can be passed to the runner application
        at startup.


        The authenticated user must have admin access to the organization.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/generate-runner-jitconfig-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - runner_group_id
                - labels
              properties:
                name:
                  type: string
                  description: The name of the new runner.
                runner_group_id:
                  type: integer
                  description: The ID of the runner group to register the runner to.
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    type: string
                  description: "The names of the custom labels to add to the runner. **Minimum
                    items**: 1. **Maximum items**: 100."
                work_folder:
                  type: string
                  description: The working directory to be used for job execution, relative to the
                    runner install directory.
                  default: _work
            examples:
              default:
                value:
                  name: New runner
                  runner_group_id: 1
                  labels:
                    - self-hosted
                    - X64
                    - macOS
                    - no-gpu
                  work_folder: _work
      responses:
        "201":
          $ref: "#/components/responses/actions_runner_jitconfig"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/registration-token:
    post:
      summary: Create a registration token for an organization
      description: >-
        Returns a token that you can pass to the `config` script. The token
        expires after one hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to configure your
        self-hosted runner:


        ```

        ./config.sh --url https://github.com/octo-org --token TOKEN

        ```


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/create-registration-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authentication-token"
              examples:
                default:
                  $ref: "#/components/examples/authentication-token"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/remove-token:
    post:
      summary: Create a remove token for an organization
      description: >-
        Returns a token that you can pass to the `config` script to remove a
        self-hosted runner from an organization. The token expires after one
        hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to remove your self-hosted
        runner from an organization:


        ```

        ./config.sh remove --token TOKEN

        ```


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/create-remove-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authentication-token"
              examples:
                default:
                  $ref: "#/components/examples/authentication-token-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}:
    get:
      summary: Get a self-hosted runner for an organization
      description: >-
        Gets a specific self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/get-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/runner"
              examples:
                default:
                  $ref: "#/components/examples/runner"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from an organization
      description: >-
        Forces the removal of a self-hosted runner from an organization. You can
        use this endpoint to completely remove the runner when the machine you
        were using no longer exists.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/delete-self-hosted-runner-from-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels:
    get:
      summary: List labels for a self-hosted runner for an organization
      description: >-
        Lists all labels for a self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for an organization
      description: >-
        Adds custom labels to a self-hosted runner configured in an
        organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for an organization
      description: >-
        Remove all previous custom labels and set the new custom labels for a
        specific

        self-hosted runner configured in an organization.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner. You can pass
                    an empty array to remove all custom labels.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for an organization
      description: >-
        Remove all custom labels from a self-hosted runner configured in an

        organization. Returns the remaining read-only labels from the runner.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-all-custom-labels-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels_readonly"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels/{name}:
    delete:
      summary: Remove a custom label from a self-hosted runner for an organization
      description: >-
        Remove a custom label from a self-hosted runner configured

        in an organization. Returns the remaining labels from the runner.


        This endpoint returns a `404 Not Found` status if the custom label is
        not

        present on the runner.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/runner-id"
        - $ref: "#/components/parameters/runner-label-name"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/secrets:
    get:
      summary: List organization secrets
      description: >-
        Lists all secrets available in an organization without revealing their

        encrypted values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-org-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-organization-secrets
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: "#/components/schemas/organization-actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/organization-actions-secret-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/public-key:
    get:
      summary: Get an organization public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to

        encrypt a secret before you can create or update secrets.


        The authenticated user must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/get-org-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-organization-public-key
      parameters:
        - $ref: "#/components/parameters/org"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-public-key"
              examples:
                default:
                  $ref: "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}:
    get:
      summary: Get an organization secret
      description: >-
        Gets a single organization secret without revealing its encrypted value.


        The authenticated user must have collaborator access to a repository to
        create, update, or read secrets


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/get-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organization-actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/organization-actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: |-
        Creates or updates an organization secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth tokens and personal access tokens (classic) need the`admin:org` scope to use this endpoint. If the repository is private, OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with
                    [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an organization
                    public
                    key](https://docs.github.com/rest/actions/secrets#get-an-organization-public-key)
                    endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: Which type of organization repositories have access to the
                    organization secret. `selected` means only the repositories
                    specified by `selected_repository_ids` can access the
                    secret.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization secret.
                    You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can manage the list
                    of selected repositories using the [List selected
                    repositories for an organization
                    secret](https://docs.github.com/rest/actions/secrets#list-selected-repositories-for-an-organization-secret),
                    [Set selected repositories for an organization
                    secret](https://docs.github.com/rest/actions/secrets#set-selected-repositories-for-an-organization-secret),
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
                - encrypted_value
                - key_id
                - visibility
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: "012345678912345678"
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        "201":
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "204":
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: >-
        Deletes a secret in an organization using the secret name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/delete-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories:
    get:
      summary: List selected repositories for an organization secret
      description: >-
        Lists all repositories that have been selected when the `visibility`

        for repository access to a secret is set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per-page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: "#/components/schemas/minimal-repository"
              examples:
                default:
                  $ref: "#/components/examples/public-repository-paginated"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: |-
        Replaces all repositories for an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you [Create
        or update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint. If the repository is private, the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#set-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization secret.
                    You can only provide a list of repository ids when the
                    `visibility` is set to `selected`. You can add and remove
                    individual repositories using the [Add selected repository
                    to an organization
                    secret](https://docs.github.com/rest/actions/secrets#add-selected-repository-to-an-organization-secret)
                    and [Remove selected repository from an organization
                    secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret)
                    endpoints.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 64780797
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization secret
      description: |-
        Adds a repository to an organization secret when the `visibility` for
        repository access is set to `selected`. For more information about setting the visibility, see [Create or
        update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint. If the repository is private, OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#add-selected-repository-to-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content when repository was added to the selected list
        "409":
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: |-
        Removes a repository from an organization secret when the `visibility`
        for repository access is set to `selected`. The visibility is set when you [Create
        or update an organization secret](https://docs.github.com/rest/actions/secrets#create-or-update-an-organization-secret).

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint. If the repository is private, the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/secret-name"
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Response when repository was removed from the selected list
        "409":
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/variables:
    get:
      summary: List organization variables
      description: >-
        Lists all organization variables.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-org-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-organization-variables
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variables-per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: "#/components/schemas/organization-actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/organization-actions-variables-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create an organization variable
      description: >-
        Creates an organization variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/create-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: The type of repositories in the organization that can access the
                    variable. `selected` means only the repositories specified
                    by `selected_repository_ids` can access the variable.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`.
                  items:
                    type: integer
              required:
                - name
                - value
                - visibility
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        "201":
          description: Response when creating a variable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}:
    get:
      summary: Get an organization variable
      description: >-
        Gets a specific variable in an organization.


        The authenticated user must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/get-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organization-actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/organization-actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update an organization variable
      description: >-
        Updates an organization variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/update-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
                visibility:
                  type: string
                  description: The type of repositories in the organization that can access the
                    variable. `selected` means only the repositories specified
                    by `selected_repository_ids` can access the variable.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization
                    variable. You can only provide a list of repository ids when
                    the `visibility` is set to `selected`.
                  items:
                    type: integer
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
                  visibility: selected
                  selected_repository_ids:
                    - 1296269
                    - 1296280
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete an organization variable
      description: >-
        Deletes an organization variable using the variable name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the`admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/delete-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}/repositories:
    get:
      summary: List selected repositories for an organization variable
      description: >-
        Lists all repositories that can access an organization variable

        that is available to selected repositories.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/list-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-selected-repositories-for-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per-page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: "#/components/schemas/minimal-repository"
              examples:
                default:
                  $ref: "#/components/examples/public-repository-paginated"
        "409":
          description: Response when the visibility of the variable is not set to `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    put:
      summary: Set selected repositories for an organization variable
      description: >-
        Replaces all repositories for an organization variable that is available

        to selected repositories. Organization variables that are available to
        selected

        repositories have their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/set-selected-repos-for-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#set-selected-repositories-for-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: The IDs of the repositories that can access the organization
                    variable.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            examples:
              default:
                value:
                  selected_repository_ids:
                    - 64780797
      responses:
        "204":
          description: Response
        "409":
          description: Response when the visibility of the variable is not set to `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /orgs/{org}/actions/variables/{name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization variable
      description: >-
        Adds a repository to an organization variable that is available to
        selected repositories.

        Organization variables that are available to selected repositories have
        their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `admin:org`
        scope to use this endpoint. If the repository is private, OAuth tokens
        and personal access tokens (classic) need the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/add-selected-repo-to-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#add-selected-repository-to-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Response
        "409":
          description: Response when the visibility of the variable is not set to `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Remove selected repository from an organization variable
      description: >-
        Removes a repository from an organization variable that is

        available to selected repositories. Organization variables that are
        available to

        selected repositories have their `visibility` field set to `selected`.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the
        `admin:org` scope to use this endpoint. If the repository is private,
        the `repo` scope is also required.
      tags:
        - actions
      operationId: actions/remove-selected-repo-from-org-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#remove-selected-repository-from-an-organization-variable
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/variable-name"
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Response
        "409":
          description: Response when the visibility of the variable is not set to `selected`
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /repos/{owner}/{repo}/actions/artifacts:
    get:
      summary: List artifacts for a repository
      description: >-
        Lists all artifacts for a repository.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/list-artifacts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#list-artifacts-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/artifact-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - artifacts
                properties:
                  total_count:
                    type: integer
                  artifacts:
                    type: array
                    items:
                      $ref: "#/components/schemas/artifact"
              examples:
                default:
                  $ref: "#/components/examples/artifact-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}:
    get:
      summary: Get an artifact
      description: >-
        Gets a specific artifact for a workflow run.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#get-an-artifact
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/artifact-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/artifact"
              examples:
                default:
                  $ref: "#/components/examples/artifact"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
    delete:
      summary: Delete an artifact
      description: >-
        Deletes an artifact for a workflow run.

        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#delete-an-artifact
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/artifact-id"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}:
    get:
      summary: Download an artifact
      description: >-
        Gets a redirect URL to download an archive for a repository. This URL
        expires after 1 minute. Look for `Location:` in

        the response header to find the URL for the download. The
        `:archive_format` must be `zip`.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/download-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#download-an-artifact
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/artifact-id"
        - name: archive_format
          in: path
          required: true
          schema:
            type: string
      responses:
        "302":
          description: Response
          headers:
            Location:
              $ref: "#/components/headers/location"
        "410":
          $ref: "#/components/responses/gone"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/cache/usage:
    get:
      summary: Get GitHub Actions cache usage for a repository
      description: >-
        Gets GitHub Actions cache usage for a repository.

        The data fetched using this API is refreshed approximately every 5
        minutes, so values returned from this endpoint may take at least 5
        minutes to get updated.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-actions-cache-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#get-github-actions-cache-usage-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-cache-usage-by-repository"
              examples:
                default:
                  $ref: "#/components/examples/actions-cache-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /repos/{owner}/{repo}/actions/caches:
    get:
      summary: List GitHub Actions caches for a repository
      description: >-
        Lists the GitHub Actions caches for a repository.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/get-actions-cache-list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#list-github-actions-caches-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/actions-cache-git-ref-full"
        - $ref: "#/components/parameters/actions-cache-key"
        - $ref: "#/components/parameters/actions-cache-list-sort"
        - $ref: "#/components/parameters/direction"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-cache-list"
              examples:
                default:
                  $ref: "#/components/examples/actions-cache-list"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: cache
    delete:
      summary: Delete GitHub Actions caches for a repository (using a cache key)
      description: >-
        Deletes one or more GitHub Actions caches for a repository, using a
        complete cache key. By default, all caches that match the provided key
        are deleted, but you can optionally provide a Git ref to restrict
        deletions to caches that match both the provided key and the Git ref.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-actions-cache-by-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#delete-github-actions-caches-for-a-repository-using-a-cache-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/actions-cache-key-required"
        - $ref: "#/components/parameters/actions-cache-git-ref-full"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-cache-list"
              examples:
                default:
                  $ref: "#/components/examples/actions-cache-list"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /repos/{owner}/{repo}/actions/caches/{cache_id}:
    delete:
      summary: Delete a GitHub Actions cache for a repository (using a cache ID)
      description: >-
        Deletes a GitHub Actions cache for a repository, using a cache ID.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-actions-cache-by-id
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/cache#delete-a-github-actions-cache-for-a-repository-using-a-cache-id
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/cache-id"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: cache
  /repos/{owner}/{repo}/actions/jobs/{job_id}:
    get:
      summary: Get a job for a workflow run
      description: >-
        Gets a specific job in a workflow run.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-job-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#get-a-job-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/job-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/job"
              examples:
                default:
                  $ref: "#/components/examples/job"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/jobs/{job_id}/logs:
    get:
      summary: Download job logs for a workflow run
      description: >-
        Gets a redirect URL to download a plain text file of logs for a workflow
        job. This link expires after 1 minute. Look

        for `Location:` in the response header to find the URL for the download.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/download-job-logs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#download-job-logs-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/job-id"
      responses:
        "302":
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/jobs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun:
    post:
      summary: Re-run a job from a workflow run
      description: >-
        Re-run a job and its dependent jobs in a workflow run.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/re-run-job-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-a-job-from-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/job-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default:
                value: null
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/oidc/customization/sub:
    get:
      summary: Get the customization template for an OIDC subject claim for a repository
      description: >-
        Gets the customization template for an OpenID Connect (OIDC) subject
        claim.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/get-custom-oidc-sub-claim-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oidc-custom-sub-repo"
              examples:
                default:
                  $ref: "#/components/examples/oidc-custom-sub-repo"
        "400":
          $ref: "#/components/responses/bad_request"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
    put:
      summary: Set the customization template for an OIDC subject claim for a repository
      description: >-
        Sets the customization template and `opt-in` or `opt-out` flag for an
        OpenID Connect (OIDC) subject claim for a repository.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-custom-oidc-sub-claim-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/oidc#set-the-customization-template-for-an-oidc-subject-claim-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Actions OIDC subject customization for a repository
              description: Actions OIDC subject customization for a repository
              type: object
              required:
                - use_default
              properties:
                use_default:
                  description: Whether to use the default template or not. If `true`, the
                    `include_claim_keys` field is ignored.
                  type: boolean
                include_claim_keys:
                  description: Array of unique strings. Each claim key can only contain
                    alphanumeric characters and underscores.
                  type: array
                  items:
                    type: string
            examples:
              default:
                value:
                  use_default: false
                  include_claim_keys:
                    - repo
                    - context
      responses:
        "201":
          description: Empty response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "400":
          $ref: "#/components/responses/bad_request"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: oidc
  /repos/{owner}/{repo}/actions/organization-secrets:
    get:
      summary: List repository organization secrets
      description: >-
        Lists all organization secrets shared with a repository without
        revealing their encrypted

        values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-organization-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-repository-organization-secrets
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/organization-variables:
    get:
      summary: List repository organization variables
      description: >-
        Lists all organization variables shared with a repository.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-organization-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-repository-organization-variables
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variables-per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /repos/{owner}/{repo}/actions/permissions:
    get:
      summary: Get GitHub Actions permissions for a repository
      description: >-
        Gets the GitHub Actions permissions policy for a repository, including
        whether GitHub Actions is enabled and the actions and reusable workflows
        allowed to run in the repository.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      operationId: actions/get-github-actions-permissions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-github-actions-permissions-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-repository-permissions"
              examples:
                default:
                  $ref: "#/components/examples/actions-repository-permissions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for a repository
      description: >-
        Sets the GitHub Actions permissions policy for enabling GitHub Actions
        and allowed actions and reusable workflows in the repository.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      operationId: actions/set-github-actions-permissions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-github-actions-permissions-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  $ref: "#/components/schemas/actions-enabled"
                allowed_actions:
                  $ref: "#/components/schemas/allowed-actions"
              required:
                - enabled
            examples:
              default:
                value:
                  enabled: true
                  allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/permissions/access:
    get:
      summary: Get the level of access for workflows outside of the repository
      description: |-
        Gets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.
        This endpoint only applies to private repositories.
        For more information, see "[Allowing access to components in a private repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)."

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow-access-to-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-the-level-of-access-for-workflows-outside-of-the-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-workflow-access-to-repository"
              examples:
                default:
                  $ref: "#/components/examples/actions-workflow-access-to-repository"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: permissions
    put:
      summary: Set the level of access for workflows outside of the repository
      description: |-
        Sets the level of access that workflows outside of the repository have to actions and reusable workflows in the repository.
        This endpoint only applies to private repositories.
        For more information, see "[Allowing access to components in a private repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#allowing-access-to-components-in-a-private-repository)".

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-workflow-access-to-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-the-level-of-access-for-workflows-outside-of-the-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/actions-workflow-access-to-repository"
            examples:
              default:
                $ref: "#/components/examples/actions-workflow-access-to-repository"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/permissions/selected-actions:
    get:
      summary: Get allowed actions and reusable workflows for a repository
      description: >-
        Gets the settings for selected actions and reusable workflows that are
        allowed in a repository. To use this endpoint, the repository policy for
        `allowed_actions` must be configured to `selected`. For more
        information, see "[Set GitHub Actions permissions for a
        repository](#set-github-actions-permissions-for-a-repository)."


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      operationId: actions/get-allowed-actions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-allowed-actions-and-reusable-workflows-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/selected-actions"
              examples:
                default:
                  $ref: "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions and reusable workflows for a repository
      description: >-
        Sets the actions and reusable workflows that are allowed in a
        repository. To use this endpoint, the repository permission policy for
        `allowed_actions` must be configured to `selected`. For more
        information, see "[Set GitHub Actions permissions for a
        repository](#set-github-actions-permissions-for-a-repository)."


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      operationId: actions/set-allowed-actions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-allowed-actions-and-reusable-workflows-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/selected-actions"
            examples:
              selected_actions:
                $ref: "#/components/examples/selected-actions"
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/permissions/workflow:
    get:
      summary: Get default workflow permissions for a repository
      description: |-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository,
        as well as if GitHub Actions can submit approving pull request reviews.
        For more information, see "[Setting the permissions of the GITHUB_TOKEN for your repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#setting-the-permissions-of-the-github_token-for-your-repository)."

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-github-actions-default-workflow-permissions-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#get-default-workflow-permissions-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-get-default-workflow-permissions"
              examples:
                default:
                  $ref: "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions for a repository
      description: |-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in a repository, and sets if GitHub Actions
        can submit approving pull request reviews.
        For more information, see "[Setting the permissions of the GITHUB_TOKEN for your repository](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#setting-the-permissions-of-the-github_token-for-your-repository)."

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-github-actions-default-workflow-permissions-repository
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/permissions#set-default-workflow-permissions-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Success response
        "409":
          description: Conflict response when changing a setting is prevented by the
            owning organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/actions-set-default-workflow-permissions"
            examples:
              default:
                $ref: "#/components/examples/actions-default-workflow-permissions"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/runners:
    get:
      summary: List self-hosted runners for a repository
      description: >-
        Lists all self-hosted runners configured in a repository.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-self-hosted-runners-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-self-hosted-runners-for-a-repository
      parameters:
        - name: name
          description: The name of a self-hosted runner.
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: "#/components/schemas/runner"
              examples:
                default:
                  $ref: "#/components/examples/runner-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/downloads:
    get:
      summary: List runner applications for a repository
      description: >-
        Lists binaries for the runner application that you can download and run.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-runner-applications-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-runner-applications-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/runner-application"
              examples:
                default:
                  $ref: "#/components/examples/runner-application-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/generate-jitconfig:
    post:
      summary: Create configuration for a just-in-time runner for a repository
      description: >-
        Generates a configuration that can be passed to the runner application
        at startup.


        The authenticated user must have admin access to the repository.


        OAuth tokens and personal access tokens (classic) need the`repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/generate-runner-jitconfig-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - runner_group_id
                - labels
              properties:
                name:
                  type: string
                  description: The name of the new runner.
                runner_group_id:
                  type: integer
                  description: The ID of the runner group to register the runner to.
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    type: string
                  description: "The names of the custom labels to add to the runner. **Minimum
                    items**: 1. **Maximum items**: 100."
                work_folder:
                  type: string
                  description: The working directory to be used for job execution, relative to the
                    runner install directory.
                  default: _work
            examples:
              default:
                value:
                  name: New runner
                  runner_group_id: 1
                  labels:
                    - self-hosted
                    - X64
                    - macOS
                    - no-gpu
                  work_folder: _work
      responses:
        "201":
          $ref: "#/components/responses/actions_runner_jitconfig"
        "404":
          $ref: "#/components/responses/not_found"
        "409":
          $ref: "#/components/responses/conflict"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/registration-token:
    post:
      summary: Create a registration token for a repository
      description: >-
        Returns a token that you can pass to the `config` script. The token
        expires after one hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to configure your
        self-hosted runner:


        ```

        ./config.sh --url https://github.com/octo-org --token TOKEN

        ```


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/create-registration-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-registration-token-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authentication-token"
              examples:
                default:
                  $ref: "#/components/examples/authentication-token"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/remove-token:
    post:
      summary: Create a remove token for a repository
      description: >-
        Returns a token that you can pass to the `config` script to remove a
        self-hosted runner from an repository. The token expires after one hour.


        For example, you can replace `TOKEN` in the following example with the
        registration token provided by this endpoint to remove your self-hosted
        runner from an organization:


        ```

        ./config.sh remove --token TOKEN

        ```


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/create-remove-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#create-a-remove-token-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authentication-token"
              examples:
                default:
                  $ref: "#/components/examples/authentication-token-2"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}:
    get:
      summary: Get a self-hosted runner for a repository
      description: >-
        Gets a specific self-hosted runner configured in a repository.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/runner"
              examples:
                default:
                  $ref: "#/components/examples/runner"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from a repository
      description: >-
        Forces the removal of a self-hosted runner from a repository. You can
        use this endpoint to completely remove the runner when the machine you
        were using no longer exists.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-self-hosted-runner-from-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "204":
          description: Response
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}/labels:
    get:
      summary: List labels for a self-hosted runner for a repository
      description: >-
        Lists all labels for a self-hosted runner configured in a repository.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for a repository
      description: >-
        Adds custom labels to a self-hosted runner configured in a repository.


        Authenticated users must have admin access to the organization to use
        this endpoint.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for a repository
      description: >-
        Remove all previous custom labels and set the new custom labels for a
        specific

        self-hosted runner configured in a repository.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner. You can pass
                    an empty array to remove all custom labels.
                  items:
                    type: string
            examples:
              default:
                value:
                  labels:
                    - gpu
                    - accelerated
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for a repository
      description: >-
        Remove all custom labels from a self-hosted runner configured in a

        repository. Returns the remaining read-only labels from the runner.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-all-custom-labels-from-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels_readonly"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}:
    delete:
      summary: Remove a custom label from a self-hosted runner for a repository
      description: >-
        Remove a custom label from a self-hosted runner configured

        in a repository. Returns the remaining labels from the runner.


        This endpoint returns a `404 Not Found` status if the custom label is
        not

        present on the runner.


        Authenticated users must have admin access to the repository to use this
        endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/runner-id"
        - $ref: "#/components/parameters/runner-label-name"
      responses:
        "200":
          $ref: "#/components/responses/actions_runner_labels"
        "404":
          $ref: "#/components/responses/not_found"
        "422":
          $ref: "#/components/responses/validation_failed_simple"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runs:
    get:
      summary: List workflow runs for a repository
      description: |-
        Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint.

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.

        This endpoint will return up to 1,000 results for each search when using the following parameters: `actor`, `branch`, `check_suite_id`, `created`, `event`, `head_sha`, `status`.
      tags:
        - actions
      operationId: actions/list-workflow-runs-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#list-workflow-runs-for-a-repository
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/actor"
        - $ref: "#/components/parameters/workflow-run-branch"
        - $ref: "#/components/parameters/event"
        - $ref: "#/components/parameters/workflow-run-status"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/created"
        - $ref: "#/components/parameters/exclude-pull-requests"
        - $ref: "#/components/parameters/workflow-run-check-suite-id"
        - $ref: "#/components/parameters/workflow-run-head-sha"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflow_runs
                properties:
                  total_count:
                    type: integer
                  workflow_runs:
                    type: array
                    items:
                      $ref: "#/components/schemas/workflow-run"
              examples:
                default:
                  $ref: "#/components/examples/workflow-run-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}:
    get:
      summary: Get a workflow run
      description: >-
        Gets a specific workflow run.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - $ref: "#/components/parameters/exclude-pull-requests"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflow-run"
              examples:
                default:
                  $ref: "#/components/examples/workflow-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete a workflow run
      description: >-
        Deletes a specific workflow run.


        Anyone with write access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      operationId: actions/delete-workflow-run
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#delete-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/approvals:
    get:
      summary: Get the review history for a workflow run
      description: >-
        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-reviews-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-the-review-history-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/environment-approvals"
              examples:
                default:
                  $ref: "#/components/examples/environment-approvals-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/approve:
    post:
      summary: Approve a workflow run for a fork pull request
      description: |-
        Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see ["Approving workflow runs from public forks](https://docs.github.com/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks)."

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/approve-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#approve-a-workflow-run-for-a-fork-pull-request
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts:
    get:
      summary: List workflow run artifacts
      description: >-
        Lists artifacts for a workflow run.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/list-workflow-run-artifacts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/artifacts#list-workflow-run-artifacts
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/artifact-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - artifacts
                properties:
                  total_count:
                    type: integer
                  artifacts:
                    type: array
                    items:
                      $ref: "#/components/schemas/artifact"
              examples:
                default:
                  $ref: "#/components/examples/artifact-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}:
    get:
      summary: Get a workflow run attempt
      description: >-
        Gets a specific workflow run attempt.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-a-workflow-run-attempt
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - $ref: "#/components/parameters/attempt-number"
        - $ref: "#/components/parameters/exclude-pull-requests"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflow-run"
              examples:
                default:
                  $ref: "#/components/examples/workflow-run"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs:
    get:
      summary: List jobs for a workflow run attempt
      description: |-
        Lists jobs for a specific workflow run attempt. You can use parameters to narrow the list of results. For more information
        about using parameters, see [Parameters](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint.

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint  with a private repository.
      tags:
        - actions
      operationId: actions/list-jobs-for-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run-attempt
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - $ref: "#/components/parameters/attempt-number"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - jobs
                properties:
                  total_count:
                    type: integer
                  jobs:
                    type: array
                    items:
                      $ref: "#/components/schemas/job"
              examples:
                default:
                  $ref: "#/components/examples/job-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs:
    get:
      summary: Download workflow run attempt logs
      description: >-
        Gets a redirect URL to download an archive of log files for a specific
        workflow run attempt. This link expires after

        1 minute. Look for `Location:` in the response header to find the URL
        for the download.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/download-workflow-run-attempt-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#download-workflow-run-attempt-logs
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - $ref: "#/components/parameters/attempt-number"
      responses:
        "302":
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/cancel:
    post:
      summary: Cancel a workflow run
      description: >-
        Cancels a workflow run using its `id`.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/cancel-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#cancel-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "202":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "409":
          $ref: "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule:
    post:
      summary: Review custom deployment protection rules for a workflow run
      description: |-
        Approve or reject custom deployment protection rules provided by a GitHub App for a workflow run. For more information, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment)."

        > [!NOTE]
        > GitHub Apps can only review their own custom deployment protection rules. To approve or reject pending deployments that are waiting for review from a specific person or team, see [`POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments`](/rest/actions/workflow-runs#review-pending-deployments-for-a-workflow-run).

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/review-custom-gates-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#review-custom-deployment-protection-rules-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: "#/components/schemas/review-custom-gates-comment-required"
                - $ref: "#/components/schemas/review-custom-gates-state-required"
            examples:
              default:
                value:
                  environment_name: prod-eus
                  state: approved
                  comment: All health checks passed.
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel:
    post:
      summary: Force cancel a workflow run
      description: |-
        Cancels a workflow run and bypasses conditions that would otherwise cause a workflow execution to continue, such as an `always()` condition on a job.
        You should only use this endpoint to cancel a workflow run when the workflow run is not responding to [`POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel`](/rest/actions/workflow-runs#cancel-a-workflow-run).

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/force-cancel-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#force-cancel-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "202":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "409":
          $ref: "#/components/responses/conflict"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/jobs:
    get:
      summary: List jobs for a workflow run
      description: |-
        Lists jobs for a workflow run. You can use parameters to narrow the list of results. For more information
        about using parameters, see [Parameters](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint.

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/list-jobs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
        - name: filter
          description: Filters jobs by their `completed_at` timestamp. `latest` returns
            jobs from the most recent execution of the workflow run. `all`
            returns all jobs for a workflow run, including from old executions
            of the workflow run.
          in: query
          required: false
          schema:
            type: string
            enum:
              - latest
              - all
            default: latest
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - jobs
                properties:
                  total_count:
                    type: integer
                  jobs:
                    type: array
                    items:
                      $ref: "#/components/schemas/job"
              examples:
                default:
                  $ref: "#/components/examples/job-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/runs/{run_id}/logs:
    get:
      summary: Download workflow run logs
      description: >-
        Gets a redirect URL to download an archive of log files for a workflow
        run. This link expires after 1 minute. Look for

        `Location:` in the response header to find the URL for the download.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/download-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#download-workflow-run-logs
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "302":
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete workflow run logs
      description: >-
        Deletes all logs for a workflow run.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#delete-workflow-run-logs
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "204":
          description: Response
        "403":
          $ref: "#/components/responses/forbidden"
        "500":
          $ref: "#/components/responses/internal_error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments:
    get:
      summary: Get pending deployments for a workflow run
      description: >-
        Get all deployment environments for a workflow run that are waiting for
        protection rules to pass.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-pending-deployments-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/pending-deployment"
              examples:
                default:
                  $ref: "#/components/examples/pending-deployment-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    post:
      summary: Review pending deployments for a workflow run
      description: >-
        Approve or reject pending deployments that are waiting on approval by a
        required reviewer.


        Required reviewers with read access to the repository contents and
        deployments can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/review-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#review-pending-deployments-for-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                environment_ids:
                  type: array
                  description: The list of environment ids to approve or reject
                  example:
                    - 161171787
                    - 161171795
                  items:
                    type: integer
                    example: 161171787
                state:
                  type: string
                  description: Whether to approve or reject deployment to the specified
                    environments.
                  enum:
                    - approved
                    - rejected
                  example: approved
                comment:
                  type: string
                  description: A comment to accompany the deployment review
                  example: Ship it!
              required:
                - environment_ids
                - state
                - comment
            examples:
              default:
                value:
                  environment_ids:
                    - 161171787
                  state: approved
                  comment: Ship it!
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/deployment"
              examples:
                default:
                  $ref: "#/components/examples/deployment-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/rerun:
    post:
      summary: Re-run a workflow
      description: >-
        Re-runs your workflow run using its `id`.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/re-run-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-a-workflow
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default:
                value: null
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs:
    post:
      summary: Re-run failed jobs from a workflow run
      description: >-
        Re-run all of the failed jobs and their dependent jobs in a workflow run
        using the `id` of the workflow run.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/re-run-workflow-failed-jobs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#re-run-failed-jobs-from-a-workflow-run
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                enable_debug_logging:
                  type: boolean
                  default: false
                  description: Whether to enable debug logging for the re-run.
            examples:
              default:
                value: null
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/timing:
    get:
      summary: Get workflow run usage
      description: |-
        > [!WARNING]  
        > This endpoint is in the process of closing down. Refer to "[Actions Get workflow usage and Get workflow run usage endpoints closing down](https://github.blog/changelog/2025-02-02-actions-get-workflow-usage-and-get-workflow-run-usage-endpoints-closing-down/)" for more information.

        Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        Anyone with read access to the repository can use this endpoint.

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-workflow-run-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#get-workflow-run-usage
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/run-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflow-run-usage"
              examples:
                default:
                  $ref: "#/components/examples/workflow-run-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/secrets:
    get:
      summary: List repository secrets
      description: >-
        Lists all secrets available in a repository without revealing their
        encrypted

        values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-repository-secrets
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/secrets/public-key:
    get:
      summary: Get a repository public key
      description: >-
        Gets your public key, which you need to encrypt secrets. You need to

        encrypt a secret before you can create or update secrets.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-a-repository-public-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-public-key"
              examples:
                default:
                  $ref: "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/secrets/{secret_name}:
    get:
      summary: Get a repository secret
      description: >-
        Gets a single repository secret without revealing its encrypted value.


        The authenticated user must have collaborator access to the repository
        to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-a-repository-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-a-repository-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with
                    [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get a repository
                    public
                    key](https://docs.github.com/rest/actions/secrets#get-a-repository-public-key)
                    endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
              required:
                - encrypted_value
                - key_id
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: "012345678912345678"
      responses:
        "201":
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "204":
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete a repository secret
      description: >-
        Deletes a secret in a repository using the secret name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-a-repository-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/variables:
    get:
      summary: List repository variables
      description: >-
        Lists all repository variables.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-repository-variables
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variables-per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create a repository variable
      description: >-
        Creates a repository variable that you can reference in a GitHub Actions
        workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/create-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-a-repository-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
              required:
                - name
                - value
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /repos/{owner}/{repo}/actions/variables/{name}:
    get:
      summary: Get a repository variable
      description: >-
        Gets a specific variable in a repository.


        The authenticated user must have collaborator access to the repository
        to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-a-repository-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variable-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update a repository variable
      description: >-
        Updates a repository variable that you can reference in a GitHub Actions
        workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/update-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-a-repository-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variable-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete a repository variable
      description: >-
        Deletes a repository variable using the variable name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-repo-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-a-repository-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variable-name"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /repos/{owner}/{repo}/actions/workflows:
    get:
      summary: List repository workflows
      description: >-
        Lists the workflows in a repository.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/list-repo-workflows
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#list-repository-workflows
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflows
                properties:
                  total_count:
                    type: integer
                  workflows:
                    type: array
                    items:
                      $ref: "#/components/schemas/workflow"
              examples:
                default:
                  $ref: "#/components/examples/workflow-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}:
    get:
      summary: Get a workflow
      description: >-
        Gets a specific workflow. You can replace `workflow_id` with the
        workflow

        file name. For example, you could use `main.yaml`.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#get-a-workflow
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflow"
              examples:
                default:
                  $ref: "#/components/examples/workflow"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable:
    put:
      summary: Disable a workflow
      description: >-
        Disables a workflow and sets the `state` of the workflow to
        `disabled_manually`. You can replace `workflow_id` with the workflow
        file name. For example, you could use `main.yaml`.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/disable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#disable-a-workflow
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches:
    post:
      summary: Create a workflow dispatch event
      description: |-
        You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see "[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      operationId: actions/create-workflow-dispatch
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#create-a-workflow-dispatch-event
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
      responses:
        "204":
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The git reference for the workflow. The reference can be a branch
                    or tag name.
                inputs:
                  type: object
                  description: Input keys and values configured in the workflow file. The maximum
                    number of properties is 10. Any default properties
                    configured in the workflow file will be used when `inputs`
                    are omitted.
                  additionalProperties: true
                  maxProperties: 10
              required:
                - ref
            examples:
              default:
                value:
                  ref: topic-branch
                  inputs:
                    name: Mona the Octocat
                    home: San Francisco, CA
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable:
    put:
      summary: Enable a workflow
      description: >-
        Enables a workflow and sets the `state` of the workflow to `active`. You
        can replace `workflow_id` with the workflow file name. For example, you
        could use `main.yaml`.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/enable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#enable-a-workflow
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs:
    get:
      summary: List workflow runs for a workflow
      description: |-
        List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.

        This endpoint will return up to 1,000 results for each search when using the following parameters: `actor`, `branch`, `check_suite_id`, `created`, `event`, `head_sha`, `status`.
      tags:
        - actions
      operationId: actions/list-workflow-runs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflow-runs#list-workflow-runs-for-a-workflow
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
        - $ref: "#/components/parameters/actor"
        - $ref: "#/components/parameters/workflow-run-branch"
        - $ref: "#/components/parameters/event"
        - $ref: "#/components/parameters/workflow-run-status"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/created"
        - $ref: "#/components/parameters/exclude-pull-requests"
        - $ref: "#/components/parameters/workflow-run-check-suite-id"
        - $ref: "#/components/parameters/workflow-run-head-sha"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflow_runs
                properties:
                  total_count:
                    type: integer
                  workflow_runs:
                    type: array
                    items:
                      $ref: "#/components/schemas/workflow-run"
              examples:
                default:
                  $ref: "#/components/examples/workflow-run-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing:
    get:
      summary: Get workflow usage
      description: |-
        > [!WARNING]  
        > This endpoint is in the process of closing down. Refer to "[Actions Get workflow usage and Get workflow run usage endpoints closing down](https://github.blog/changelog/2025-02-02-actions-get-workflow-usage-and-get-workflow-run-usage-endpoints-closing-down/)" for more information.

        Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        Anyone with read access to the repository can use this endpoint.

        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.
      tags:
        - actions
      operationId: actions/get-workflow-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/workflows#get-workflow-usage
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/workflow-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workflow-usage"
              examples:
                default:
                  $ref: "#/components/examples/workflow-usage"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/environments/{environment_name}/secrets:
    get:
      summary: List environment secrets
      description: >-
        Lists all secrets available in an environment without revealing their

        encrypted values.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-environment-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#list-environment-secrets
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/actions-secret-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key:
    get:
      summary: Get an environment public key
      description: >-
        Get the public key for an environment, which you need to encrypt
        environment

        secrets. You need to encrypt a secret before you can create or update
        secrets.


        Anyone with read access to the repository can use this endpoint.


        If the repository is private, OAuth tokens and personal access tokens
        (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-environment-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-environment-public-key
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-public-key"
              examples:
                default:
                  $ref: "#/components/examples/actions-public-key"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}:
    get:
      summary: Get an environment secret
      description: >-
        Gets a single environment secret without revealing its encrypted value.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/get-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#get-an-environment-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-secret"
              examples:
                default:
                  $ref: "#/components/examples/actions-secret"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an environment secret
      description: |-
        Creates or updates an environment secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). For more information, see "[Encrypting secrets for the REST API](https://docs.github.com/rest/guides/encrypting-secrets-for-the-rest-api)."

        Authenticated users must have collaborator access to a repository to create, update, or read secrets.

        OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/create-or-update-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#create-or-update-an-environment-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/secret-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with
                    [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages)
                    using the public key retrieved from the [Get an environment
                    public
                    key](https://docs.github.com/rest/actions/secrets#get-an-environment-public-key)
                    endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
              required:
                - encrypted_value
                - key_id
            examples:
              default:
                value:
                  encrypted_value: c2VjcmV0
                  key_id: "012345678912345678"
      responses:
        "201":
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
        "204":
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an environment secret
      description: >-
        Deletes a secret in an environment using the secret name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read secrets.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/secrets#delete-an-environment-secret
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/secret-name"
      responses:
        "204":
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/environments/{environment_name}/variables:
    get:
      summary: List environment variables
      description: >-
        Lists all environment variables.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-environment-variables
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#list-environment-variables
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/variables-per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - variables
                properties:
                  total_count:
                    type: integer
                  variables:
                    type: array
                    items:
                      $ref: "#/components/schemas/actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/actions-variables-paginated"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    post:
      summary: Create an environment variable
      description: >-
        Create an environment variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/create-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#create-an-environment-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
              required:
                - name
                - value
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        "201":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty-object"
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
  /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}:
    get:
      summary: Get an environment variable
      description: >-
        Gets a specific variable in an environment.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/get-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#get-an-environment-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/environment-name"
        - $ref: "#/components/parameters/variable-name"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions-variable"
              examples:
                default:
                  $ref: "#/components/examples/actions-variable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    patch:
      summary: Update an environment variable
      description: >-
        Updates an environment variable that you can reference in a GitHub
        Actions workflow.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth app tokens and personal access tokens (classic) need the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/update-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#update-an-environment-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variable-name"
        - $ref: "#/components/parameters/environment-name"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the variable.
                value:
                  type: string
                  description: The value of the variable.
            examples:
              default:
                value:
                  name: USERNAME
                  value: octocat
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
    delete:
      summary: Delete an environment variable
      description: >-
        Deletes an environment variable using the variable name.


        Authenticated users must have collaborator access to a repository to
        create, update, or read variables.


        OAuth tokens and personal access tokens (classic) need the `repo` scope
        to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-environment-variable
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/actions/variables#delete-an-environment-variable
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/variable-name"
        - $ref: "#/components/parameters/environment-name"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: variables
components:
  schemas:
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: "#/components/schemas/nullable-license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated
            hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to
            generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: "The repository visibility: public, private, or internal."
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: 2011-01-26T19:06:43Z
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2011-01-26T19:01:12Z
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: 2011-01-26T19:14:43Z
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base
            branch can always be updated even if it is not required to be up to
            date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as
            default. **This property is closing down. Please use
            `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
            - PR_TITLE
            - COMMIT_OR_PR_TITLE
          description: >-
            The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request's title.

            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one
            commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
            - PR_BODY
            - COMMIT_MESSAGES
            - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
            - PR_TITLE
            - MERGE_MESSAGE
          description: >-
            The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request's title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message
            (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
            - PR_BODY
            - PR_TITLE
            - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated
            hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: 2011-01-26T19:06:43Z
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2011-01-26T19:01:12Z
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: 2011-01-26T19:14:43Z
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: "#/components/schemas/security-and-analysis"
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The
            keys are the custom property names, and the values are the
            corresponding custom property values.
          additionalProperties: true
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
    actions-cache-usage-org-enterprise:
      type: object
      properties:
        total_active_caches_count:
          type: integer
          description: The count of active caches across all repositories of an enterprise
            or an organization.
        total_active_caches_size_in_bytes:
          type: integer
          description: The total size in bytes of all active cache items across all
            repositories of an enterprise or an organization.
      required:
        - total_active_caches_count
        - total_active_caches_size_in_bytes
    actions-cache-usage-by-repository:
      title: Actions Cache Usage by repository
      description: GitHub Actions Cache Usage by repository.
      type: object
      properties:
        full_name:
          description: The repository owner and name for the cache usage being shown.
          type: string
          example: octo-org/Hello-World
        active_caches_size_in_bytes:
          description: The sum of the size in bytes of all the active cache items in the
            repository.
          type: integer
          example: 2322142
        active_caches_count:
          description: The number of active caches in the repository.
          type: integer
          example: 3
      required:
        - full_name
        - active_caches_size_in_bytes
        - active_caches_count
    actions-hosted-runner-machine-spec:
      title: Github-owned VM details.
      description: Provides details of a particular machine spec.
      type: object
      properties:
        id:
          description: The ID used for the `size` parameter when creating a new runner.
          type: string
          example: 8-core
        cpu_cores:
          description: The number of cores.
          type: integer
          example: 8
        memory_gb:
          description: The available RAM for the machine spec.
          type: integer
          example: 32
        storage_gb:
          description: The available SSD storage for the machine spec.
          type: integer
          example: 300
      required:
        - id
        - cpu_cores
        - memory_gb
        - storage_gb
    actions-hosted-runner:
      title: GitHub-hosted hosted runner
      description: A Github-hosted hosted runner.
      type: object
      properties:
        id:
          description: The unique identifier of the hosted runner.
          type: integer
          example: 5
        name:
          description: The name of the hosted runner.
          type: string
          example: my-github-hosted-runner
        runner_group_id:
          description: The unique identifier of the group that the hosted runner belongs to.
          type: integer
          example: 2
        image_details:
          $ref: "#/components/schemas/nullable-actions-hosted-runner-pool-image"
        machine_size_details:
          $ref: "#/components/schemas/actions-hosted-runner-machine-spec"
        status:
          description: The status of the runner.
          type: string
          example: Ready
          enum:
            - Ready
            - Provisioning
            - Shutdown
            - Deleting
            - Stuck
        platform:
          description: The operating system of the image.
          type: string
          example: linux-x64
        maximum_runners:
          description: The maximum amount of hosted runners. Runners will not scale
            automatically above this number. Use this setting to limit your
            cost.
          type: integer
          default: 10
          example: 5
        public_ip_enabled:
          description: Whether public IP is enabled for the hosted runners.
          type: boolean
          example: true
        public_ips:
          description: The public IP ranges when public IP is enabled for the hosted
            runners.
          type: array
          items:
            $ref: "#/components/schemas/public-ip"
        last_active_on:
          description: The time at which the runner was last used, in ISO 8601 format.
          type: string
          format: date-time
          example: 2022-10-09T23:39:01Z
          nullable: true
      required:
        - id
        - name
        - image_details
        - machine_size_details
        - status
        - public_ip_enabled
        - platform
    actions-hosted-runner-image:
      title: GitHub-hosted runner image details.
      description: Provides details of a hosted runner image
      type: object
      properties:
        id:
          description: The ID of the image. Use this ID for the `image` parameter when
            creating a new larger runner.
          type: string
          example: ubuntu-20.04
        platform:
          description: The operating system of the image.
          type: string
          example: linux-x64
        size_gb:
          description: Image size in GB.
          type: integer
          example: 86
        display_name:
          description: Display name for this image.
          type: string
          example: 20.04
        source:
          description: The image provider.
          type: string
          enum:
            - github
            - partner
            - custom
      required:
        - id
        - platform
        - size_gb
        - display_name
        - source
    actions-hosted-runner-limits:
      type: object
      properties:
        public_ips:
          title: Static public IP Limits for GitHub-hosted Hosted Runners.
          description: Provides details of static public IP limits for GitHub-hosted
            Hosted Runners
          type: object
          properties:
            maximum:
              type: integer
              description: The maximum number of static public IP addresses that can be used
                for Hosted Runners.
              example: 50
            current_usage:
              type: integer
              description: The current number of static public IP addresses in use by Hosted
                Runners.
              example: 17
          required:
            - maximum
            - current_usage
      required:
        - public_ips
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    enabled-repositories:
      type: string
      description: The policy that controls the repositories in the organization that
        are allowed to run GitHub Actions.
      enum:
        - all
        - none
        - selected
    allowed-actions:
      type: string
      description: The permissions policy that controls the actions and reusable
        workflows that are allowed to run.
      enum:
        - all
        - local_only
        - selected
    actions-organization-permissions:
      type: object
      properties:
        enabled_repositories:
          $ref: "#/components/schemas/enabled-repositories"
        selected_repositories_url:
          type: string
          description: The API URL to use to get or set the selected repositories that are
            allowed to run GitHub Actions, when `enabled_repositories` is set to
            `selected`.
        allowed_actions:
          $ref: "#/components/schemas/allowed-actions"
        selected_actions_url:
          $ref: "#/components/schemas/selected-actions-url"
      required:
        - enabled_repositories
    selected-actions:
      type: object
      properties:
        github_owned_allowed:
          type: boolean
          description: Whether GitHub-owned actions are allowed. For example, this
            includes the actions in the `actions` organization.
        verified_allowed:
          type: boolean
          description: Whether actions from GitHub Marketplace verified creators are
            allowed. Set to `true` to allow all actions by GitHub Marketplace
            verified creators.
        patterns_allowed:
          type: array
          description: >-
            Specifies a list of string-matching patterns to allow specific
            action(s) and reusable workflow(s). Wildcards, tags, and SHAs are
            allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`,
            `monalisa/*`.


            > [!NOTE]

            > The `patterns_allowed` setting only applies to public
            repositories.
          items:
            type: string
    actions-get-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          $ref: "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          $ref: "#/components/schemas/actions-can-approve-pull-request-reviews"
      required:
        - default_workflow_permissions
        - can_approve_pull_request_reviews
    actions-set-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          $ref: "#/components/schemas/actions-default-workflow-permissions"
        can_approve_pull_request_reviews:
          $ref: "#/components/schemas/actions-can-approve-pull-request-reviews"
    runner-groups-org:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        visibility:
          type: string
        default:
          type: boolean
        selected_repositories_url:
          description: Link to the selected repositories resource for this runner group.
            Not present unless visibility was set to `selected`
          type: string
        runners_url:
          type: string
        hosted_runners_url:
          type: string
        network_configuration_id:
          description: The identifier of a hosted compute network configuration.
          type: string
        inherited:
          type: boolean
        inherited_allows_public_repositories:
          type: boolean
        allows_public_repositories:
          type: boolean
        workflow_restrictions_read_only:
          description: If `true`, the `restricted_to_workflows` and `selected_workflows`
            fields cannot be modified.
          type: boolean
          default: false
        restricted_to_workflows:
          description: If `true`, the runner group will be restricted to running only the
            workflows specified in the `selected_workflows` array.
          type: boolean
          default: false
        selected_workflows:
          description: List of workflows the runner group should be allowed to run. This
            setting will be ignored unless `restricted_to_workflows` is set to
            `true`.
          type: array
          items:
            type: string
            description: Name of workflow the runner group should be allowed to run. Note
              that a ref, tag, or long SHA is required.
            example: octo-org/octo-repo/.github/workflows/deploy.yaml@main
      required:
        - id
        - name
        - visibility
        - default
        - runners_url
        - inherited
        - allows_public_repositories
    runner:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      properties:
        id:
          description: The ID of the runner.
          type: integer
          example: 5
        runner_group_id:
          description: The ID of the runner group.
          type: integer
          example: 1
        name:
          description: The name of the runner.
          type: string
          example: iMac
        os:
          description: The Operating System of the runner.
          type: string
          example: macos
        status:
          description: The status of the runner.
          type: string
          example: online
        busy:
          type: boolean
        labels:
          type: array
          items:
            $ref: "#/components/schemas/runner-label"
        ephemeral:
          type: boolean
      required:
        - id
        - name
        - os
        - status
        - busy
        - labels
    runner-application:
      title: Runner Application
      description: Runner Application
      type: object
      properties:
        os:
          type: string
        architecture:
          type: string
        download_url:
          type: string
        filename:
          type: string
        temp_download_token:
          description: A short lived bearer token used to download the runner, if needed.
          type: string
        sha256_checksum:
          type: string
      required:
        - os
        - architecture
        - download_url
        - filename
    authentication-token:
      title: Authentication Token
      description: Authentication Token
      type: object
      properties:
        token:
          description: The token used for authentication
          type: string
          example: v1.1f699f1069f60xxx
        expires_at:
          description: The time this token expires
          type: string
          format: date-time
          example: 2016-07-11T22:14:10Z
        permissions:
          type: object
          example:
            issues: read
            deployments: write
        repositories:
          description: The repositories this token has access to
          type: array
          items:
            $ref: "#/components/schemas/repository"
        single_file:
          type: string
          example: config.yaml
          nullable: true
        repository_selection:
          description: Describe whether all repositories have been selected or there's a
            selection involved
          type: string
          enum:
            - all
            - selected
      required:
        - token
        - expires_at
    organization-actions-secret:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/secrets/my_secret/repositories
      required:
        - name
        - created_at
        - updated_at
        - visibility
    actions-public-key:
      title: ActionsPublicKey
      description: The public key used for setting Actions Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: "1234567"
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: 2011-01-26T19:01:12Z
      required:
        - key_id
        - key
    organization-actions-variable:
      title: Actions Variable for an Organization
      description: Organization variable for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          example: 2019-01-24T22:45:36.000Z
          type: string
          format: date-time
        updated_at:
          description: The date and time at which the variable was last updated, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          example: 2019-01-24T22:45:36.000Z
          type: string
          format: date-time
        visibility:
          description: Visibility of a variable
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/variables/USERNAME/repositories
      required:
        - name
        - value
        - created_at
        - updated_at
        - visibility
    artifact:
      title: Artifact
      description: An artifact
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        name:
          description: The name of the artifact.
          type: string
          example: AdventureWorks.Framework
        size_in_bytes:
          description: The size in bytes of the artifact.
          type: integer
          example: 12345
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5
        archive_download_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip
        expired:
          description: Whether or not the artifact has expired.
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        digest:
          type: string
          description: The SHA256 digest of the artifact. This field will only be
            populated on artifacts uploaded with upload-artifact v4 or newer.
            For older versions, this field will be null.
          nullable: true
          example: sha256:cfc3236bdad15b5898bca8408945c9e19e1917da8704adc20eaa618444290a8c
        workflow_run:
          type: object
          nullable: true
          properties:
            id:
              example: 10
              type: integer
            repository_id:
              example: 42
              type: integer
            head_repository_id:
              example: 42
              type: integer
            head_branch:
              example: main
              type: string
            head_sha:
              example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
              type: string
      required:
        - id
        - node_id
        - name
        - size_in_bytes
        - url
        - archive_download_url
        - expired
        - created_at
        - expires_at
        - updated_at
    actions-cache-list:
      title: Repository actions caches
      description: Repository actions caches
      type: object
      properties:
        total_count:
          description: Total number of caches
          type: integer
          example: 2
        actions_caches:
          description: Array of caches
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 2
              ref:
                type: string
                example: refs/heads/main
              key:
                type: string
                example: Linux-node-958aff96db2d75d67787d1e634ae70b659de937b
              version:
                type: string
                example: 73885106f58cc52a7df9ec4d4a5622a5614813162cb516c759a30af6bf56e6f0
              last_accessed_at:
                type: string
                format: date-time
                example: 2019-01-24T22:45:36.000Z
              created_at:
                type: string
                format: date-time
                example: 2019-01-24T22:45:36.000Z
              size_in_bytes:
                type: integer
                example: 1024
      required:
        - total_count
        - actions_caches
    job:
      title: Job
      description: Information of a job execution in a workflow run
      type: object
      properties:
        id:
          description: The id of the job.
          example: 21
          type: integer
        run_id:
          description: The id of the associated workflow run.
          example: 5
          type: integer
        run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        run_attempt:
          type: integer
          description: Attempt number of the associated workflow run, 1 for first attempt
            and higher if the workflow was re-run.
          example: 1
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        head_sha:
          description: The SHA of the commit that is being run.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/jobs/21
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        status:
          description: The phase of the lifecycle that the job is currently in.
          example: queued
          type: string
          enum:
            - queued
            - in_progress
            - completed
            - waiting
            - requested
            - pending
        conclusion:
          description: The outcome of the job.
          example: success
          type: string
          nullable: true
          enum:
            - success
            - failure
            - neutral
            - cancelled
            - skipped
            - timed_out
            - action_required
        created_at:
          description: The time that the job created, in ISO 8601 format.
          example: 2019-08-08T08:00:00-07:00
          format: date-time
          type: string
        started_at:
          description: The time that the job started, in ISO 8601 format.
          example: 2019-08-08T08:00:00-07:00
          format: date-time
          type: string
        completed_at:
          description: The time that the job finished, in ISO 8601 format.
          example: 2019-08-08T08:00:00-07:00
          format: date-time
          type: string
          nullable: true
        name:
          description: The name of the job.
          example: test-coverage
          type: string
        steps:
          description: Steps in this job.
          type: array
          items:
            type: object
            required:
              - name
              - status
              - conclusion
              - number
            properties:
              status:
                description: The phase of the lifecycle that the job is currently in.
                example: queued
                type: string
                enum:
                  - queued
                  - in_progress
                  - completed
              conclusion:
                description: The outcome of the job.
                example: success
                type: string
                nullable: true
              name:
                description: The name of the job.
                example: test-coverage
                type: string
              number:
                type: integer
                example: 1
              started_at:
                description: The time that the step started, in ISO 8601 format.
                example: 2019-08-08T08:00:00-07:00
                format: date-time
                type: string
                nullable: true
              completed_at:
                description: The time that the job finished, in ISO 8601 format.
                example: 2019-08-08T08:00:00-07:00
                format: date-time
                type: string
                nullable: true
        check_run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        labels:
          type: array
          items:
            type: string
          description: Labels for the workflow job. Specified by the "runs_on" attribute
            in the action's workflow file.
          example:
            - self-hosted
            - foo
            - bar
        runner_id:
          type: integer
          nullable: true
          example: 1
          description: The ID of the runner to which this job has been assigned. (If a
            runner hasn't yet been assigned, this will be null.)
        runner_name:
          type: string
          nullable: true
          example: my runner
          description: The name of the runner to which this job has been assigned. (If a
            runner hasn't yet been assigned, this will be null.)
        runner_group_id:
          type: integer
          nullable: true
          example: 2
          description: The ID of the runner group to which this job has been assigned. (If
            a runner hasn't yet been assigned, this will be null.)
        runner_group_name:
          type: string
          nullable: true
          example: my runner group
          description: The name of the runner group to which this job has been assigned.
            (If a runner hasn't yet been assigned, this will be null.)
        workflow_name:
          type: string
          description: The name of the workflow.
          nullable: true
          example: Build
        head_branch:
          type: string
          description: The name of the current branch.
          nullable: true
          example: main
      required:
        - id
        - node_id
        - run_id
        - run_url
        - head_sha
        - workflow_name
        - head_branch
        - name
        - url
        - html_url
        - status
        - conclusion
        - started_at
        - completed_at
        - check_run_url
        - labels
        - runner_id
        - runner_name
        - runner_group_id
        - runner_group_name
        - created_at
    oidc-custom-sub-repo:
      title: Actions OIDC subject customization for a repository
      description: Actions OIDC subject customization for a repository
      type: object
      properties:
        use_default:
          description: Whether to use the default template or not. If `true`, the
            `include_claim_keys` field is ignored.
          type: boolean
        include_claim_keys:
          description: Array of unique strings. Each claim key can only contain
            alphanumeric characters and underscores.
          type: array
          items:
            type: string
      required:
        - use_default
    actions-secret:
      title: Actions Secret
      description: Set secrets for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - created_at
        - updated_at
    actions-variable:
      title: Actions Variable
      type: object
      properties:
        name:
          description: The name of the variable.
          example: USERNAME
          type: string
        value:
          description: The value of the variable.
          example: octocat
          type: string
        created_at:
          description: The date and time at which the variable was created, in ISO 8601
            format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: 2019-01-24T22:45:36.000Z
        updated_at:
          description: The date and time at which the variable was last updated, in ISO
            8601 format':' YYYY-MM-DDTHH:MM:SSZ.
          type: string
          format: date-time
          example: 2019-01-24T22:45:36.000Z
      required:
        - name
        - value
        - created_at
        - updated_at
    actions-enabled:
      type: boolean
      description: Whether GitHub Actions is enabled on the repository.
    actions-repository-permissions:
      type: object
      properties:
        enabled:
          $ref: "#/components/schemas/actions-enabled"
        allowed_actions:
          $ref: "#/components/schemas/allowed-actions"
        selected_actions_url:
          $ref: "#/components/schemas/selected-actions-url"
      required:
        - enabled
    actions-workflow-access-to-repository:
      type: object
      properties:
        access_level:
          type: string
          description: >-
            Defines the level of access that workflows outside of the repository
            have to actions and reusable workflows within the

            repository.


            `none` means the access is only possible from workflows in this
            repository. `user` level access allows sharing across user owned
            private repositories only. `organization` level access allows
            sharing across the organization.
          enum:
            - none
            - user
            - organization
      required:
        - access_level
    workflow-run:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      properties:
        id:
          type: integer
          description: The ID of the workflow run.
          example: 5
        name:
          type: string
          description: The name of the workflow run.
          nullable: true
          example: Build
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        check_suite_id:
          type: integer
          description: The ID of the associated check suite.
          example: 42
        check_suite_node_id:
          type: string
          description: The node ID of the associated check suite.
          example: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch:
          type: string
          nullable: true
          example: master
        head_sha:
          description: The SHA of the head commit that points to the version of the
            workflow being run.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        path:
          description: The full path of the workflow
          example: octocat/octo-repo/.github/workflows/ci.yml@main
          type: string
        run_number:
          type: integer
          description: The auto incrementing run number for the workflow run.
          example: 106
        run_attempt:
          type: integer
          description: Attempt number of the run, 1 for first attempt and higher if the
            workflow was re-run.
          example: 1
        referenced_workflows:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/referenced-workflow"
        event:
          type: string
          example: push
        status:
          type: string
          nullable: true
          example: completed
        conclusion:
          type: string
          nullable: true
          example: neutral
        workflow_id:
          type: integer
          description: The ID of the parent workflow.
          example: 5
        url:
          type: string
          description: The URL to the workflow run.
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        html_url:
          type: string
          example: https://github.com/github/hello-world/suites/4
        pull_requests:
          description: Pull requests that are open with a `head_sha` or `head_branch` that
            matches the workflow run. The returned pull requests do not
            necessarily indicate pull requests that triggered the run.
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/pull-request-minimal"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        actor:
          $ref: "#/components/schemas/simple-user"
        triggering_actor:
          $ref: "#/components/schemas/simple-user"
        run_started_at:
          type: string
          format: date-time
          description: The start time of the latest run. Resets on re-run.
        jobs_url:
          description: The URL to the jobs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
        logs_url:
          description: The URL to download the logs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
        check_suite_url:
          description: The URL to the associated check suite.
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/12
        artifacts_url:
          description: The URL to the artifacts for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
        cancel_url:
          description: The URL to cancel the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
        rerun_url:
          description: The URL to rerun the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
        previous_attempt_url:
          nullable: true
          description: The URL to the previous attempted run of this workflow, if one
            exists.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
        workflow_url:
          description: The URL to the workflow.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
        head_commit:
          $ref: "#/components/schemas/nullable-simple-commit"
        repository:
          $ref: "#/components/schemas/minimal-repository"
        head_repository:
          $ref: "#/components/schemas/minimal-repository"
        head_repository_id:
          type: integer
          example: 5
        display_title:
          type: string
          example: Simple Workflow
          description: The event-specific title associated with the run or the run-name if
            set, or the value of `run-name` if it is set in the workflow.
      required:
        - id
        - node_id
        - head_branch
        - run_number
        - display_title
        - event
        - status
        - conclusion
        - head_sha
        - path
        - workflow_id
        - url
        - html_url
        - created_at
        - updated_at
        - head_commit
        - head_repository
        - repository
        - jobs_url
        - logs_url
        - check_suite_url
        - cancel_url
        - rerun_url
        - artifacts_url
        - workflow_url
        - pull_requests
    environment-approvals:
      title: Environment Approval
      description: An entry in the reviews log for environment deployments
      type: object
      properties:
        environments:
          description: The list of environments that were approved or rejected
          type: array
          items:
            type: object
            properties:
              id:
                description: The id of the environment.
                example: 56780428
                type: integer
              node_id:
                type: string
                example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
              name:
                description: The name of the environment.
                example: staging
                type: string
              url:
                type: string
                example: https://api.github.com/repos/github/hello-world/environments/staging
              html_url:
                type: string
                example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at:
                description: The time that the environment was created, in ISO 8601 format.
                example: 2020-11-23T22:00:40Z
                format: date-time
                type: string
              updated_at:
                description: The time that the environment was last updated, in ISO 8601 format.
                example: 2020-11-23T22:00:40Z
                format: date-time
                type: string
        state:
          description: Whether deployment to the environment(s) was approved or rejected
            or pending (with comments)
          enum:
            - approved
            - rejected
            - pending
          example: approved
          type: string
        user:
          $ref: "#/components/schemas/simple-user"
        comment:
          type: string
          description: The comment submitted with the deployment review
          example: Ship it!
      required:
        - environments
        - state
        - user
        - comment
    review-custom-gates-comment-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        comment:
          type: string
          description: Comment associated with the pending deployment protection rule.
            **Required when state is not provided.**
      required:
        - environment_name
        - comment
    review-custom-gates-state-required:
      type: object
      properties:
        environment_name:
          type: string
          description: The name of the environment to approve or reject.
        state:
          type: string
          description: Whether to approve or reject deployment to the specified
            environments.
          enum:
            - approved
            - rejected
        comment:
          type: string
          description: Optional comment to include with the review.
      required:
        - environment_name
        - state
    pending-deployment:
      title: Pending Deployment
      description: Details of a deployment that is waiting for protection rules to pass
      type: object
      properties:
        environment:
          type: object
          properties:
            id:
              description: The id of the environment.
              type: integer
              format: int64
              example: 56780428
            node_id:
              type: string
              example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
            name:
              description: The name of the environment.
              example: staging
              type: string
            url:
              type: string
              example: https://api.github.com/repos/github/hello-world/environments/staging
            html_url:
              type: string
              example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        wait_timer:
          type: integer
          description: The set duration of the wait timer
          example: 30
        wait_timer_started_at:
          description: The time that the wait timer began.
          example: 2020-11-23T22:00:40Z
          format: date-time
          type: string
          nullable: true
        current_user_can_approve:
          description: Whether the currently authenticated user can approve the deployment
          type: boolean
          example: true
        reviewers:
          type: array
          description: The people or teams that may approve jobs that reference the
            environment. You can list up to six users or teams as reviewers. The
            reviewers must have at least read access to the repository. Only one
            of the required reviewers needs to approve the job for it to
            proceed.
          items:
            type: object
            properties:
              type:
                $ref: "#/components/schemas/deployment-reviewer-type"
              reviewer:
                anyOf:
                  - $ref: "#/components/schemas/simple-user"
                  - $ref: "#/components/schemas/team"
      required:
        - environment
        - wait_timer
        - wait_timer_started_at
        - current_user_can_approve
        - reviewers
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          type: integer
          format: int64
          example: 42
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
            - type: object
              additionalProperties: true
            - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          $ref: "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: 2012-07-20T01:19:13Z
        updated_at:
          type: string
          format: date-time
          example: 2012-07-20T01:19:13Z
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: "Specifies if the given environment is will no longer exist at some
            point in the future. Default: false."
          example: true
          type: boolean
        production_environment:
          description: "Specifies if the given environment is one that end-users directly
            interact with. Default: false."
          example: true
          type: boolean
        performed_via_github_app:
          $ref: "#/components/schemas/nullable-integration"
      required:
        - id
        - node_id
        - sha
        - ref
        - task
        - environment
        - creator
        - payload
        - description
        - statuses_url
        - repository_url
        - url
        - created_at
        - updated_at
    workflow-run-usage:
      title: Workflow Run Usage
      description: Workflow Run Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            MACOS:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            WINDOWS:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
        run_duration_ms:
          type: integer
      required:
        - billable
    workflow:
      title: Workflow
      description: A GitHub Actions workflow
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDg6V29ya2Zsb3cxMg==
        name:
          type: string
          example: CI
        path:
          type: string
          example: ruby.yaml
        state:
          type: string
          example: active
          enum:
            - active
            - deleted
            - disabled_fork
            - disabled_inactivity
            - disabled_manually
        created_at:
          type: string
          format: date-time
          example: 2019-12-06T14:20:20.000Z
        updated_at:
          type: string
          format: date-time
          example: 2019-12-06T14:20:20.000Z
        url:
          type: string
          example: https://api.github.com/repos/actions/setup-ruby/workflows/5
        html_url:
          type: string
          example: https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml
        badge_url:
          type: string
          example: https://github.com/actions/setup-ruby/workflows/CI/badge.svg
        deleted_at:
          type: string
          format: date-time
          example: 2019-12-06T14:20:20.000Z
      required:
        - id
        - node_id
        - name
        - path
        - state
        - url
        - html_url
        - badge_url
        - created_at
        - updated_at
    workflow-usage:
      title: Workflow Usage
      description: Workflow Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              properties:
                total_ms:
                  type: integer
            MACOS:
              type: object
              properties:
                total_ms:
                  type: integer
            WINDOWS:
              type: object
              properties:
                total_ms:
                  type: integer
      required:
        - billable
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to
        specific repositories. They come with granular permissions and built-in
        webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
            - $ref: "#/components/schemas/simple-user"
            - $ref: "#/components/schemas/enterprise"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: 2017-07-08T16:18:44-04:00
        updated_at:
          type: string
          format: date-time
          example: 2017-07-08T16:18:44-04:00
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the
            `installation_target`, `security_advisory`, and `meta` events are
            not included because they are global events and not specific to an
            installation.
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only
            returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the
                repository.
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
    nullable-actions-hosted-runner-pool-image:
      title: GitHub-hosted runner image details.
      description: Provides details of a hosted runner image
      type: object
      properties:
        id:
          description: The ID of the image. Use this ID for the `image` parameter when
            creating a new larger runner.
          type: string
          example: ubuntu-20.04
        size_gb:
          description: Image size in GB.
          type: integer
          example: 86
        display_name:
          description: Display name for this image.
          type: string
          example: 20.04
        source:
          description: The image provider.
          type: string
          enum:
            - github
            - partner
            - custom
      required:
        - id
        - size_gb
        - display_name
        - source
      nullable: true
    public-ip:
      title: Public IP for a GitHub-hosted larger runners.
      description: Provides details of Public IP for a GitHub-hosted larger runners
      type: object
      properties:
        enabled:
          description: Whether public IP is enabled.
          type: boolean
          example: true
        prefix:
          description: The prefix for the public IP.
          type: string
          example: 20.80.208.150
        length:
          description: The length of the IP prefix.
          type: integer
          example: 28
    selected-actions-url:
      type: string
      description: The API URL to use to get or set the actions and reusable workflows
        that are allowed to run, when `allowed_actions` is set to `selected`.
    actions-default-workflow-permissions:
      type: string
      description: The default workflow permissions granted to the GITHUB_TOKEN when
        running workflows.
      enum:
        - read
        - write
    actions-can-approve-pull-request-reviews:
      type: boolean
      description: Whether GitHub Actions can approve pull requests. Enabling this can
        be a security risk.
    runner-label:
      title: Self hosted runner label
      description: A label for a self hosted runner
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the label.
        name:
          type: string
          description: Name of the label.
        type:
          type: string
          description: The type of label. Read-only labels are applied automatically when
            the runner is configured.
          enum:
            - read-only
            - custom
      required:
        - name
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - triage
            - push
            - maintain
            - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: "#/components/schemas/nullable-team-simple"
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - parent
    referenced-workflow:
      title: Referenced workflow
      description: A workflow referenced/reused by the initial caller workflow
      type: object
      properties:
        path:
          type: string
        sha:
          type: string
        ref:
          type: string
      required:
        - path
        - sha
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
      required:
        - id
        - number
        - url
        - head
        - base
    nullable-simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: "Fix #42"
          type: string
        timestamp:
          description: Timestamp of the commit
          example: 2014-08-09T08:02:04+12:00
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
            - name
            - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
            - name
            - email
          nullable: true
      required:
        - id
        - tree_id
        - message
        - timestamp
        - author
        - committer
      nullable: true
    deployment-reviewer-type:
      type: string
      description: The type of reviewer.
      enum:
        - User
        - Team
      example: User
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: 2019-01-26T19:01:12Z
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: 2019-01-26T19:14:43Z
        avatar_url:
          type: string
          format: uri
      required:
        - id
        - node_id
        - name
        - slug
        - html_url
        - created_at
        - updated_at
        - avatar_url
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified
        repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      nullable: true
  examples:
    actions-cache-usage-org-enterprise:
      value:
        total_active_caches_size_in_bytes: 3344284
        total_active_caches_count: 5
    org-actions-cache-usage-by-repo:
      value:
        total_count: 2
        repository_cache_usages:
          - full_name: octo-org/Hello-World
            active_caches_size_in_bytes: 2322142
            active_caches_count: 3
          - full_name: octo-org/server
            active_caches_size_in_bytes: 1022142
            active_caches_count: 2
    actions-hosted-runner-paginated:
      value:
        total_count: 2
        runners:
          - id: 5
            name: My hosted ubuntu runner
            runner_group_id: 2
            platform: linux-x64
            image:
              id: ubuntu-20.04
              size: 86
            machine_size_details:
              id: 4-core
              cpu_cores: 4
              memory_gb: 16
              storage_gb: 150
            status: Ready
            maximum_runners: 10
            public_ip_enabled: true
            public_ips:
              - enabled: true
                prefix: 20.80.208.150
                length: 31
            last_active_on: 2022-10-09T23:39:01Z
          - id: 7
            name: My hosted Windows runner
            runner_group_id: 2
            platform: win-x64
            image:
              id: windows-latest
              size: 256
            machine_size_details:
              id: 8-core
              cpu_cores: 8
              memory_gb: 32
              storage_gb: 300
            status: Ready
            maximum_runners: 20
            public_ip_enabled: false
            public_ips: []
            last_active_on: 2023-04-26T15:23:37Z
    actions-hosted-runner:
      value:
        id: 5
        name: My hosted ubuntu runner
        runner_group_id: 2
        platform: linux-x64
        image:
          id: ubuntu-20.04
          size: 86
        machine_size_details:
          id: 4-core
          cpu_cores: 4
          memory_gb: 16
          storage_gb: 150
        status: Ready
        maximum_runners: 10
        public_ip_enabled: true
        public_ips:
          - enabled: true
            prefix: 20.80.208.150
            length: 31
        last_active_on: 2022-10-09T23:39:01Z
    actions-hosted-runner-image:
      value:
        id: ubuntu-20.04
        platform: linux-x64
        size_gb: 86
        display_name: "20.04"
        source: github
    actions-hosted-runner-limits-default:
      value:
        public_ips:
          current_usage: 17
          maximum: 50
    actions-hosted-runner-machine-spec:
      value:
        id: 4-core
        cpu_cores: 4
        memory_gb: 16
        storage_gb: 150
    actions-organization-permissions:
      value:
        enabled_repositories: all
        allowed_actions: selected
        selected_actions_url: https://api.github.com/organizations/42/actions/permissions/selected-actions
    repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: 2011-01-26T19:06:43Z
            created_at: 2011-01-26T19:01:12Z
            updated_at: 2011-01-26T19:14:43Z
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
    selected-actions:
      value:
        github_owned_allowed: true
        verified_allowed: false
        patterns_allowed:
          - monalisa/octocat@*
          - docker/*
    actions-default-workflow-permissions:
      summary: Give read-only permission, and allow approving PRs.
      value:
        default_workflow_permissions: read
        can_approve_pull_request_reviews: true
    runner-groups-org:
      value:
        total_count: 3
        runner_groups:
          - id: 1
            name: Default
            visibility: all
            default: true
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners
            inherited: false
            allows_public_repositories: true
            restricted_to_workflows: false
            selected_workflows: []
            workflow_restrictions_read_only: false
          - id: 2
            name: octo-runner-group
            visibility: selected
            default: false
            selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
            inherited: true
            allows_public_repositories: true
            restricted_to_workflows: true
            selected_workflows:
              - octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main
            workflow_restrictions_read_only: true
          - id: 3
            name: expensive-hardware
            visibility: private
            default: false
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners
            inherited: false
            allows_public_repositories: true
            restricted_to_workflows: false
            selected_workflows:
              - octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main
            workflow_restrictions_read_only: false
    runner-group:
      value:
        id: 2
        name: octo-runner-group
        visibility: selected
        default: false
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories
        runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
        hosted_runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/hosted-runners
        network_configuration_id: EC486D5D793175D7E3B29C27318D5C1AAE49A7833FC85F2E82C3D2C54AC7D3BA
        inherited: false
        allows_public_repositories: true
        restricted_to_workflows: true
        selected_workflows:
          - octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main
        workflow_restrictions_read_only: false
    runner-group-item:
      value:
        id: 2
        name: octo-runner-group
        visibility: selected
        default: false
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories
        runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
        hosted_runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/hosted-runners
        network_configuration_id: EC486D5D793175D7E3B29C27318D5C1AAE49A7833FC85F2E82C3D2C54AC7D3BA
        inherited: false
        allows_public_repositories: true
        restricted_to_workflows: true
        selected_workflows:
          - octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main
        workflow_restrictions_read_only: false
    minimal-repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: 2011-01-26T19:06:43Z
            created_at: 2011-01-26T19:01:12Z
            updated_at: 2011-01-26T19:14:43Z
            permissions:
              admin: false
              push: false
              pull: true
            template_repository:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ""
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              clone_url: https://github.com/octocat/Hello-World.git
              mirror_url: git:git.example.com/octocat/Hello-World
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              svn_url: https://svn.github.com/octocat/Hello-World
              homepage: https://github.com
              organization: null
              language: null
              forks: 9
              forks_count: 9
              stargazers_count: 80
              watchers_count: 80
              watchers: 80
              size: 108
              default_branch: master
              open_issues: 0
              open_issues_count: 0
              is_template: true
              license:
                key: mit
                name: MIT License
                url: https://api.github.com/licenses/mit
                spdx_id: MIT
                node_id: MDc6TGljZW5zZW1pdA==
                html_url: https://api.github.com/licenses/mit
              topics:
                - octocat
                - atom
                - electron
                - api
              has_issues: true
              has_projects: true
              has_wiki: true
              has_pages: false
              has_downloads: true
              archived: false
              disabled: false
              visibility: public
              pushed_at: 2011-01-26T19:06:43Z
              created_at: 2011-01-26T19:01:12Z
              updated_at: 2011-01-26T19:14:43Z
              permissions:
                admin: false
                push: false
                pull: true
              allow_rebase_merge: true
              template_repository: null
              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
              allow_squash_merge: true
              allow_auto_merge: false
              delete_branch_on_merge: true
              allow_merge_commit: true
              subscribers_count: 42
              network_count: 0
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            delete_branch_on_merge: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            forks: 1
            open_issues: 1
            watchers: 1
    runner-paginated:
      value:
        total_count: 2
        runners:
          - id: 23
            name: linux_runner
            os: linux
            status: online
            busy: true
            ephemeral: false
            labels:
              - id: 5
                name: self-hosted
                type: read-only
              - id: 7
                name: X64
                type: read-only
              - id: 11
                name: Linux
                type: read-only
          - id: 24
            name: mac_runner
            os: macos
            status: offline
            busy: false
            ephemeral: false
            labels:
              - id: 5
                name: self-hosted
                type: read-only
              - id: 7
                name: X64
                type: read-only
              - id: 20
                name: macOS
                type: read-only
              - id: 21
                name: no-gpu
                type: custom
    runner-application-items:
      value:
        - os: osx
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz
          filename: actions-runner-osx-x64-2.164.0.tar.gz
        - os: linux
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz
          filename: actions-runner-linux-x64-2.164.0.tar.gz
        - os: linux
          architecture: arm
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz
          filename: actions-runner-linux-arm-2.164.0.tar.gz
        - os: win
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip
          filename: actions-runner-win-x64-2.164.0.zip
        - os: linux
          architecture: arm64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz
          filename: actions-runner-linux-arm64-2.164.0.tar.gz
    authentication-token:
      value:
        token: LLBF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: 2020-01-22T12:13:35.123-08:00
    authentication-token-2:
      value:
        token: AABF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: 2020-01-29T12:13:35.123-08:00
    runner:
      value:
        id: 23
        name: MBP
        os: macos
        status: online
        busy: true
        ephemeral: false
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
    organization-actions-secret-paginated:
      value:
        total_count: 3
        secrets:
          - name: GIST_ID
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: private
          - name: DEPLOY_TOKEN
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: all
          - name: GH_TOKEN
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: selected
            selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    actions-public-key:
      value:
        key_id: "012345678912345678"
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    organization-actions-secret:
      value:
        name: GH_TOKEN
        created_at: 2019-08-10T14:59:22Z
        updated_at: 2020-01-10T14:59:22Z
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    public-repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    organization-actions-variables-paginated:
      value:
        total_count: 3
        variables:
          - name: USERNAME
            value: octocat
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: private
          - name: ACTIONS_RUNNER_DEBUG
            value: true
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: all
          - name: ADMIN_EMAIL
            value: octocat@github.com
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
            visibility: selected
            selected_repositories_url: https://api.github.com/orgs/octo-org/actions/variables/ADMIN_EMAIL/repositories
    organization-actions-variable:
      value:
        name: USERNAME
        value: octocat
        created_at: 2019-08-10T14:59:22Z
        updated_at: 2020-01-10T14:59:22Z
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/variables/USERNAME/repositories
    artifact-paginated:
      value:
        total_count: 2
        artifacts:
          - id: 11
            node_id: MDg6QXJ0aWZhY3QxMQ==
            name: Rails
            size_in_bytes: 556
            url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
            archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
            expired: false
            created_at: 2020-01-10T14:59:22Z
            expires_at: 2020-03-21T14:59:22Z
            updated_at: 2020-02-21T14:59:22Z
            digest: sha256:cfc3236bdad15b5898bca8408945c9e19e1917da8704adc20eaa618444290a8c
            workflow_run:
              id: 2332938
              repository_id: 1296269
              head_repository_id: 1296269
              head_branch: main
              head_sha: 328faa0536e6fef19753d9d91dc96a9931694ce3
          - id: 13
            node_id: MDg6QXJ0aWZhY3QxMw==
            name: Test output
            size_in_bytes: 453
            url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13
            archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip
            expired: false
            created_at: 2020-01-10T14:59:22Z
            expires_at: 2020-03-21T14:59:22Z
            updated_at: 2020-02-21T14:59:22Z
            digest: sha256:cfc3236bdad15b5898bca8408945c9e19e1917da8704adc20eaa618444290a8c
            workflow_run:
              id: 2332942
              repository_id: 1296269
              head_repository_id: 1296269
              head_branch: main
              head_sha: 178f4f6090b3fccad4a65b3e83d076a622d59652
    artifact:
      value:
        id: 11
        node_id: MDg6QXJ0aWZhY3QxMQ==
        name: Rails
        size_in_bytes: 556
        url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
        archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
        expired: false
        created_at: 2020-01-10T14:59:22Z
        expires_at: 2020-01-21T14:59:22Z
        updated_at: 2020-01-21T14:59:22Z
        digest: sha256:cfc3236bdad15b5898bca8408945c9e19e1917da8704adc20eaa618444290a8c
        workflow_run:
          id: 2332938
          repository_id: 1296269
          head_repository_id: 1296269
          head_branch: main
          head_sha: 328faa0536e6fef19753d9d91dc96a9931694ce3
    actions-cache-usage:
      value:
        full_name: octo-org/Hello-World
        active_caches_size_in_bytes: 2322142
        active_caches_count: 3
    actions-cache-list:
      value:
        total_count: 1
        actions_caches:
          - id: 505
            ref: refs/heads/main
            key: Linux-node-958aff96db2d75d67787d1e634ae70b659de937b
            version: 73885106f58cc52a7df9ec4d4a5622a5614813162cb516c759a30af6bf56e6f0
            last_accessed_at: 2019-01-24T22:45:36.000Z
            created_at: 2019-01-24T22:45:36.000Z
            size_in_bytes: 1024
    job:
      value:
        id: 399444496
        run_id: 29679449
        run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
        node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
        head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
        url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
        html_url: https://github.com/octo-org/octo-repo/runs/29679449/jobs/399444496
        status: completed
        conclusion: success
        started_at: 2020-01-20T17:42:40Z
        completed_at: 2020-01-20T17:44:39Z
        name: build
        steps:
          - name: Set up job
            status: completed
            conclusion: success
            number: 1
            started_at: 2020-01-20T09:42:40.000-08:00
            completed_at: 2020-01-20T09:42:41.000-08:00
          - name: Run actions/checkout@v2
            status: completed
            conclusion: success
            number: 2
            started_at: 2020-01-20T09:42:41.000-08:00
            completed_at: 2020-01-20T09:42:45.000-08:00
          - name: Set up Ruby
            status: completed
            conclusion: success
            number: 3
            started_at: 2020-01-20T09:42:45.000-08:00
            completed_at: 2020-01-20T09:42:45.000-08:00
          - name: Run actions/cache@v3
            status: completed
            conclusion: success
            number: 4
            started_at: 2020-01-20T09:42:45.000-08:00
            completed_at: 2020-01-20T09:42:48.000-08:00
          - name: Install Bundler
            status: completed
            conclusion: success
            number: 5
            started_at: 2020-01-20T09:42:48.000-08:00
            completed_at: 2020-01-20T09:42:52.000-08:00
          - name: Install Gems
            status: completed
            conclusion: success
            number: 6
            started_at: 2020-01-20T09:42:52.000-08:00
            completed_at: 2020-01-20T09:42:53.000-08:00
          - name: Run Tests
            status: completed
            conclusion: success
            number: 7
            started_at: 2020-01-20T09:42:53.000-08:00
            completed_at: 2020-01-20T09:42:59.000-08:00
          - name: Deploy to Heroku
            status: completed
            conclusion: success
            number: 8
            started_at: 2020-01-20T09:42:59.000-08:00
            completed_at: 2020-01-20T09:44:39.000-08:00
          - name: Post actions/cache@v3
            status: completed
            conclusion: success
            number: 16
            started_at: 2020-01-20T09:44:39.000-08:00
            completed_at: 2020-01-20T09:44:39.000-08:00
          - name: Complete job
            status: completed
            conclusion: success
            number: 17
            started_at: 2020-01-20T09:44:39.000-08:00
            completed_at: 2020-01-20T09:44:39.000-08:00
        check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
        labels:
          - self-hosted
          - foo
          - bar
        runner_id: 1
        runner_name: my runner
        runner_group_id: 2
        runner_group_name: my runner group
        workflow_name: CI
        head_branch: main
    oidc-custom-sub-repo:
      value:
        use_default: false
        include_claim_keys:
          - repo
          - context
    actions-secret-paginated:
      value:
        total_count: 2
        secrets:
          - name: GH_TOKEN
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
          - name: GIST_ID
            created_at: 2020-01-10T10:59:22Z
            updated_at: 2020-01-11T11:59:22Z
    actions-variables-paginated:
      value:
        total_count: 2
        variables:
          - name: USERNAME
            value: octocat
            created_at: 2019-08-10T14:59:22Z
            updated_at: 2020-01-10T14:59:22Z
          - name: EMAIL
            value: octocat@github.com
            created_at: 2020-01-10T10:59:22Z
            updated_at: 2020-01-11T11:59:22Z
    actions-repository-permissions:
      value:
        enabled: true
        allowed_actions: selected
        selected_actions_url: https://api.github.com/repositories/42/actions/permissions/selected-actions
    actions-workflow-access-to-repository:
      value:
        access_level: organization
    workflow-run-paginated:
      value:
        total_count: 1
        workflow_runs:
          - id: 30433642
            name: Build
            node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
            check_suite_id: 42
            check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
            head_branch: master
            head_sha: acb5820ced9479c074f688cc328bf03f341a511d
            path: .github/workflows/build.yml@main
            run_number: 562
            event: push
            display_title: Update README.md
            status: queued
            conclusion: null
            workflow_id: 159038
            url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
            html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
            pull_requests: []
            created_at: 2020-01-22T19:33:08Z
            updated_at: 2020-01-22T19:33:08Z
            actor:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            run_attempt: 1
            run_started_at: 2020-01-22T19:33:08Z
            triggering_actor:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
            logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
            check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
            artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
            cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
            rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
            workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
            head_commit:
              id: acb5820ced9479c074f688cc328bf03f341a511d
              tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
              message: Create linter.yaml
              timestamp: 2020-01-22T19:33:05Z
              author:
                name: Octo Cat
                email: octocat@github.com
              committer:
                name: GitHub
                email: noreply@github.com
            repository:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ""
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
            head_repository:
              id: 217723378
              node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
              name: octo-repo
              full_name: octo-org/octo-repo
              private: true
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ""
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              html_url: https://github.com/octo-org/octo-repo
              description: null
              fork: false
              url: https://api.github.com/repos/octo-org/octo-repo
              forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
              keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
              collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
              teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
              hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
              issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
              events_url: https://api.github.com/repos/octo-org/octo-repo/events
              assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
              branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
              tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
              blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
              git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
              git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
              trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
              statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
              languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
              stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
              contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
              subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
              subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
              commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
              git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
              comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
              issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
              contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
              compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
              merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
              archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
              downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
              issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
              pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
              milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
              notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
              labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
              releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
              deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    workflow-run:
      value:
        id: 30433642
        name: Build
        node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
        check_suite_id: 42
        check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch: main
        head_sha: acb5820ced9479c074f688cc328bf03f341a511d
        path: .github/workflows/build.yml@main
        run_number: 562
        event: push
        display_title: Update README.md
        status: queued
        conclusion: null
        workflow_id: 159038
        url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
        html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
        pull_requests: []
        created_at: 2020-01-22T19:33:08Z
        updated_at: 2020-01-22T19:33:08Z
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ""
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        run_attempt: 1
        referenced_workflows:
          - path: octocat/Hello-World/.github/workflows/deploy.yml@main
            sha: 86e8bc9ecf7d38b1ed2d2cfb8eb87ba9b35b01db
            ref: refs/heads/main
          - path: octo-org/octo-repo/.github/workflows/report.yml@v2
            sha: 79e9790903e1c3373b1a3e3a941d57405478a232
            ref: refs/tags/v2
          - path: octo-org/octo-repo/.github/workflows/secure.yml@1595d4b6de6a9e9751fb270a41019ce507d4099e
            sha: 1595d4b6de6a9e9751fb270a41019ce507d4099e
        run_started_at: 2020-01-22T19:33:08Z
        triggering_actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ""
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
        logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
        check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
        artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
        cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
        rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
        previous_attempt_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/attempts/1
        workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
        head_commit:
          id: acb5820ced9479c074f688cc328bf03f341a511d
          tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
          message: Create linter.yaml
          timestamp: 2020-01-22T19:33:05Z
          author:
            name: Octo Cat
            email: octocat@github.com
          committer:
            name: GitHub
            email: noreply@github.com
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        head_repository:
          id: 217723378
          node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
          name: octo-repo
          full_name: octo-org/octo-repo
          private: true
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/octo-org/octo-repo
          description: null
          fork: false
          url: https://api.github.com/repos/octo-org/octo-repo
          forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
          keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
          hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
          issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
          events_url: https://api.github.com/repos/octo-org/octo-repo/events
          assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
          branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
          tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
          blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
          trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
          languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
          stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
          contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
          subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
          subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
          commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
          git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
          comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
          issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
          contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
          compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
          archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
          issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
          pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
          milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
          releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
          deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    environment-approvals-items:
      value:
        - state: approved
          comment: Ship it!
          environments:
            - id: 161088068
              node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
              name: staging
              url: https://api.github.com/repos/github/hello-world/environments/staging
              html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at: 2020-11-23T22:00:40Z
              updated_at: 2020-11-23T22:00:40Z
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    job-paginated:
      value:
        total_count: 1
        jobs:
          - id: 399444496
            run_id: 29679449
            run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
            node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
            head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
            url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
            html_url: https://github.com/octo-org/octo-repo/runs/29679449/jobs/399444496
            status: completed
            conclusion: success
            started_at: 2020-01-20T17:42:40Z
            completed_at: 2020-01-20T17:44:39Z
            name: build
            steps:
              - name: Set up job
                status: completed
                conclusion: success
                number: 1
                started_at: 2020-01-20T09:42:40.000-08:00
                completed_at: 2020-01-20T09:42:41.000-08:00
              - name: Run actions/checkout@v2
                status: completed
                conclusion: success
                number: 2
                started_at: 2020-01-20T09:42:41.000-08:00
                completed_at: 2020-01-20T09:42:45.000-08:00
              - name: Set up Ruby
                status: completed
                conclusion: success
                number: 3
                started_at: 2020-01-20T09:42:45.000-08:00
                completed_at: 2020-01-20T09:42:45.000-08:00
              - name: Run actions/cache@v3
                status: completed
                conclusion: success
                number: 4
                started_at: 2020-01-20T09:42:45.000-08:00
                completed_at: 2020-01-20T09:42:48.000-08:00
              - name: Install Bundler
                status: completed
                conclusion: success
                number: 5
                started_at: 2020-01-20T09:42:48.000-08:00
                completed_at: 2020-01-20T09:42:52.000-08:00
              - name: Install Gems
                status: completed
                conclusion: success
                number: 6
                started_at: 2020-01-20T09:42:52.000-08:00
                completed_at: 2020-01-20T09:42:53.000-08:00
              - name: Run Tests
                status: completed
                conclusion: success
                number: 7
                started_at: 2020-01-20T09:42:53.000-08:00
                completed_at: 2020-01-20T09:42:59.000-08:00
              - name: Deploy to Heroku
                status: completed
                conclusion: success
                number: 8
                started_at: 2020-01-20T09:42:59.000-08:00
                completed_at: 2020-01-20T09:44:39.000-08:00
              - name: Post actions/cache@v3
                status: completed
                conclusion: success
                number: 16
                started_at: 2020-01-20T09:44:39.000-08:00
                completed_at: 2020-01-20T09:44:39.000-08:00
              - name: Complete job
                status: completed
                conclusion: success
                number: 17
                started_at: 2020-01-20T09:44:39.000-08:00
                completed_at: 2020-01-20T09:44:39.000-08:00
            check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
            labels:
              - self-hosted
              - foo
              - bar
            runner_id: 1
            runner_name: my runner
            runner_group_id: 2
            runner_group_name: my runner group
            workflow_name: CI
            head_branch: main
    pending-deployment-items:
      value:
        - environment:
            id: 161088068
            node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
            name: staging
            url: https://api.github.com/repos/github/hello-world/environments/staging
            html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
          wait_timer: 30
          wait_timer_started_at: 2020-11-23T22:00:40Z
          current_user_can_approve: true
          reviewers:
            - type: User
              reviewer:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ""
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            - type: Team
              reviewer:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://github.com/orgs/github/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                notification_setting: notifications_enabled
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
    deployment-items:
      value:
        - url: https://api.github.com/repos/octocat/example/deployments/1
          id: 1
          node_id: MDEwOkRlcGxveW1lbnQx
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          ref: topic-branch
          task: deploy
          payload: {}
          original_environment: staging
          environment: production
          description: Deploy request from hubot
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: 2012-07-20T01:19:13Z
          updated_at: 2012-07-20T01:19:13Z
          statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
          repository_url: https://api.github.com/repos/octocat/example
          transient_environment: false
          production_environment: true
    workflow-run-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
            jobs: 1
            job_runs:
              - job_id: 1
                duration_ms: 180000
          MACOS:
            total_ms: 240000
            jobs: 4
            job_runs:
              - job_id: 2
                duration_ms: 60000
              - job_id: 3
                duration_ms: 60000
              - job_id: 4
                duration_ms: 60000
              - job_id: 5
                duration_ms: 60000
          WINDOWS:
            total_ms: 300000
            jobs: 2
            job_runs:
              - job_id: 6
                duration_ms: 150000
              - job_id: 7
                duration_ms: 150000
        run_duration_ms: 500000
    actions-secret:
      value:
        name: GH_TOKEN
        created_at: 2019-08-10T14:59:22Z
        updated_at: 2020-01-10T14:59:22Z
    actions-variable:
      value:
        name: USERNAME
        value: octocat
        created_at: 2021-08-10T14:59:22Z
        updated_at: 2022-01-10T14:59:22Z
    workflow-paginated:
      value:
        total_count: 2
        workflows:
          - id: 161335
            node_id: MDg6V29ya2Zsb3cxNjEzMzU=
            name: CI
            path: .github/workflows/blank.yaml
            state: active
            created_at: 2020-01-08T23:48:37.000-08:00
            updated_at: 2020-01-08T23:50:21.000-08:00
            url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
            html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
            badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
          - id: 269289
            node_id: MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==
            name: Linter
            path: .github/workflows/linter.yaml
            state: active
            created_at: 2020-01-08T23:48:37.000-08:00
            updated_at: 2020-01-08T23:50:21.000-08:00
            url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289
            html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289
            badge_url: https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg
    workflow:
      value:
        id: 161335
        node_id: MDg6V29ya2Zsb3cxNjEzMzU=
        name: CI
        path: .github/workflows/blank.yaml
        state: active
        created_at: 2020-01-08T23:48:37.000-08:00
        updated_at: 2020-01-08T23:50:21.000-08:00
        url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
        html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
        badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
    workflow-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
          MACOS:
            total_ms: 240000
          WINDOWS:
            total_ms: 300000
    runner-jitconfig:
      value:
        runner:
          id: 23
          name: New runner
          os: unknown
          status: offline
          busy: false
          labels:
            - id: 5
              name: self-hosted
              type: read-only
            - id: 7
              name: X64
              type: read-only
            - id: 20
              name: macOS
              type: read-only
            - id: 21
              name: no-gpu
              type: custom
        encoded_jit_config: abc123
    runner-labels:
      value:
        total_count: 4
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
    runner-labels-readonly:
      value:
        total_count: 3
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
  parameters:
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see
        "[Using pagination in the REST
        API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see
        "[Using pagination in the REST
        API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name
        is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    hosted-runner-id:
      name: hosted_runner_id
      description: Unique identifier of the GitHub-hosted runner.
      in: path
      required: true
      schema:
        type: integer
    repository-id:
      name: repository_id
      description: The unique identifier of the repository.
      in: path
      required: true
      schema:
        type: integer
    visible-to-repository:
      name: visible_to_repository
      description: Only return runner groups that are allowed to be used by this repository.
      in: query
      required: false
      schema:
        type: string
    runner-group-id:
      name: runner_group_id
      description: Unique identifier of the self-hosted runner group.
      in: path
      required: true
      schema:
        type: integer
    runner-id:
      name: runner_id
      description: Unique identifier of the self-hosted runner.
      in: path
      required: true
      schema:
        type: integer
    runner-label-name:
      name: name
      description: The name of a self-hosted runner's custom label.
      in: path
      required: true
      schema:
        type: string
    secret-name:
      name: secret_name
      description: The name of the secret.
      in: path
      required: true
      schema:
        type: string
    variables-per-page:
      name: per_page
      description: The number of results per page (max 30). For more information, see
        "[Using pagination in the REST
        API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 10
    variable-name:
      name: name
      description: The name of the variable.
      in: path
      required: true
      schema:
        type: string
    artifact-name:
      name: name
      description: The name field of an artifact. When specified, only artifacts with
        this name will be returned.
      in: query
      required: false
      schema:
        type: string
    artifact-id:
      name: artifact_id
      description: The unique identifier of the artifact.
      in: path
      required: true
      schema:
        type: integer
    actions-cache-git-ref-full:
      name: ref
      description: The full Git reference for narrowing down the cache. The `ref` for
        a branch should be formatted as `refs/heads/<branch name>`. To reference
        a pull request use `refs/pull/<number>/merge`.
      in: query
      required: false
      schema:
        type: string
    actions-cache-key:
      name: key
      description: An explicit key or prefix for identifying the cache
      in: query
      required: false
      schema:
        type: string
    actions-cache-list-sort:
      name: sort
      description: The property to sort the results by. `created_at` means when the
        cache was created. `last_accessed_at` means when the cache was last
        accessed. `size_in_bytes` is the size of the cache in bytes.
      in: query
      required: false
      schema:
        type: string
        enum:
          - created_at
          - last_accessed_at
          - size_in_bytes
        default: last_accessed_at
    actions-cache-key-required:
      name: key
      description: A key for identifying the cache.
      in: query
      required: true
      schema:
        type: string
    cache-id:
      name: cache_id
      description: The unique identifier of the GitHub Actions cache.
      in: path
      required: true
      schema:
        type: integer
    job-id:
      name: job_id
      description: The unique identifier of the job.
      in: path
      required: true
      schema:
        type: integer
    actor:
      name: actor
      description: Returns someone's workflow runs. Use the login for the user who
        created the `push` associated with the check suite or workflow run.
      in: query
      required: false
      schema:
        type: string
    workflow-run-branch:
      name: branch
      description: Returns workflow runs associated with a branch. Use the name of the
        branch of the `push`.
      in: query
      required: false
      schema:
        type: string
    event:
      name: event
      description: Returns workflow run triggered by the event you specify. For
        example, `push`, `pull_request` or `issue`. For more information, see
        "[Events that trigger
        workflows](https://docs.github.com/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
      in: query
      required: false
      schema:
        type: string
    workflow-run-status:
      name: status
      description: Returns workflow runs with the check run `status` or `conclusion`
        that you specify. For example, a conclusion can be `success` or a status
        can be `in_progress`. Only GitHub Actions can set a status of `waiting`,
        `pending`, or `requested`.
      in: query
      required: false
      schema:
        type: string
        enum:
          - completed
          - action_required
          - cancelled
          - failure
          - neutral
          - skipped
          - stale
          - success
          - timed_out
          - in_progress
          - queued
          - requested
          - waiting
          - pending
    created:
      name: created
      description: Returns workflow runs created within the given date-time range. For
        more information on the syntax, see "[Understanding the search
        syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    exclude-pull-requests:
      name: exclude_pull_requests
      description: If `true` pull requests are omitted from the response (empty array).
      in: query
      required: false
      schema:
        type: boolean
        default: false
    workflow-run-check-suite-id:
      name: check_suite_id
      description: Returns workflow runs with the `check_suite_id` that you specify.
      in: query
      schema:
        type: integer
    workflow-run-head-sha:
      name: head_sha
      description: Only returns workflow runs that are associated with the specified
        `head_sha`.
      in: query
      required: false
      schema:
        type: string
    run-id:
      name: run_id
      description: The unique identifier of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    attempt-number:
      name: attempt_number
      description: The attempt number of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    workflow-id:
      name: workflow_id
      in: path
      description: The ID of the workflow. You can also pass the workflow file name as
        a string.
      required: true
      schema:
        oneOf:
          - type: integer
          - type: string
    environment-name:
      name: environment_name
      in: path
      required: true
      description: The name of the environment. The name must be URL encoded. For
        example, any slashes in the name must be replaced with `%2F`.
      schema:
        type: string
  responses:
    validation_failed_simple:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/validation-error-simple"
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
        application/scim+json:
          schema:
            $ref: "#/components/schemas/scim-error"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    actions_runner_jitconfig:
      description: Response
      content:
        application/json:
          schema:
            type: object
            required:
              - runner
              - encoded_jit_config
            properties:
              runner:
                $ref: "#/components/schemas/runner"
              encoded_jit_config:
                type: string
                description: The base64 encoded runner configuration.
          examples:
            default:
              $ref: "#/components/examples/runner-jitconfig"
    actions_runner_labels:
      description: Response
      content:
        application/json:
          schema:
            type: object
            required:
              - total_count
              - labels
            properties:
              total_count:
                type: integer
              labels:
                type: array
                items:
                  $ref: "#/components/schemas/runner-label"
          examples:
            default:
              $ref: "#/components/examples/runner-labels"
    actions_runner_labels_readonly:
      description: Response
      content:
        application/json:
          schema:
            type: object
            required:
              - total_count
              - labels
            properties:
              total_count:
                type: integer
              labels:
                type: array
                items:
                  $ref: "#/components/schemas/runner-label"
          examples:
            default:
              $ref: "#/components/examples/runner-labels-readonly"
    gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next",
        <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
    location:
      example: https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D
      schema:
        type: string
