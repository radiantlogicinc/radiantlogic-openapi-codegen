openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API - activity
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
tags:
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and
      timelines.
paths:
  /events:
    get:
      summary: List public events
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-public-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/public-events-items"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "503":
          $ref: "#/components/responses/service_unavailable"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /feeds:
    get:
      summary: Get feeds
      description: |-
        Lists the feeds available to the authenticated user. The response provides a URL for each feed. You can then get a specific feed by sending a request to one of the feed URLs.

        *   **Timeline**: The GitHub global public timeline
        *   **User**: The public timeline for any user, using `uri_template`. For more information, see "[Hypermedia](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#hypermedia)."
        *   **Current user public**: The public timeline for the authenticated user
        *   **Current user**: The private timeline for the authenticated user
        *   **Current user actor**: The private timeline for activity created by the authenticated user
        *   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.
        *   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.

        By default, timeline resources are returned in JSON. You can specify the `application/atom+xml` type in the `Accept` header to return timeline resources in Atom format. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

        > [!NOTE]
        > Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/rest/authentication/authenticating-to-the-rest-api#using-basic-authentication) since current feed URIs use the older, non revocable auth tokens.
      tags:
        - activity
      operationId: activity/get-feeds
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/feeds#get-feeds
      parameters: []
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/feed"
              examples:
                default:
                  $ref: "#/components/examples/feed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: feeds
  /networks/{owner}/{repo}/events:
    get:
      summary: List public events for a network of repositories
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-public-events-for-repo-network
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-for-a-network-of-repositories
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/public-repo-events-items"
        "301":
          $ref: "#/components/responses/moved_permanently"
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /notifications:
    get:
      summary: List notifications for the authenticated user
      description: List all notifications for the current user, sorted by most
        recently updated.
      tags:
        - activity
      operationId: activity/list-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/all"
        - $ref: "#/components/parameters/participating"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/before"
        - $ref: "#/components/parameters/page"
        - name: per_page
          description: The number of results per page (max 50). For more information, see
            "[Using pagination in the REST
            API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
          in: query
          schema:
            type: integer
            default: 50
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/thread"
              examples:
                default:
                  $ref: "#/components/examples/thread-items"
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "422":
          $ref: "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Mark notifications as read
      description: Marks all notifications as "read" for the current user. If the
        number of notifications is too large to complete in one request, you
        will receive a `202 Accepted` status and GitHub will run an asynchronous
        process to mark notifications as "read." To check whether any "unread"
        notifications remain, you can use the [List notifications for the
        authenticated
        user](https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
        - activity
      operationId: activity/mark-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-notifications-as-read
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  description: "Describes the last point that notifications were checked. Anything
                    updated since this time will not be marked as read. If you
                    omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp."
                  type: string
                  format: date-time
                read:
                  description: Whether the notification has been read.
                  type: boolean
            examples:
              default:
                value:
                  last_read_at: 2022-06-10T00:00:00Z
                  read: true
      responses:
        "202":
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                default:
                  $ref: "#/components/examples/notifications-mark-read"
        "205":
          description: Reset Content
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  /notifications/threads/{thread_id}:
    get:
      summary: Get a thread
      description: Gets information about a notification thread.
      tags:
        - activity
      operationId: activity/get-thread
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#get-a-thread
      parameters:
        - $ref: "#/components/parameters/thread-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thread"
              examples:
                default:
                  $ref: "#/components/examples/thread"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    patch:
      summary: Mark a thread as read
      description: 'Marks a thread as "read." Marking a thread as "read" is equivalent
        to clicking a notification in your notification inbox on GitHub:
        https://github.com/notifications.'
      tags:
        - activity
      operationId: activity/mark-thread-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-a-thread-as-read
      parameters:
        - $ref: "#/components/parameters/thread-id"
      responses:
        "205":
          description: Reset Content
        "304":
          $ref: "#/components/responses/not_modified"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    delete:
      summary: Mark a thread as done
      description: 'Marks a thread as "done." Marking a thread as "done" is equivalent
        to marking a notification in your notification inbox on GitHub as done:
        https://github.com/notifications.'
      tags:
        - activity
      operationId: activity/mark-thread-as-done
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-a-thread-as-done
      parameters:
        - $ref: "#/components/parameters/thread-id"
      responses:
        "204":
          description: No content
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  /notifications/threads/{thread_id}/subscription:
    get:
      summary: Get a thread subscription for the authenticated user
      description: |-
        This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/rest/activity/watching#get-a-repository-subscription).

        Note that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.
      tags:
        - activity
      operationId: activity/get-thread-subscription-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#get-a-thread-subscription-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/thread-id"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thread-subscription"
              examples:
                default:
                  $ref: "#/components/examples/thread-subscription"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Set a thread subscription
      description: |-
        If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.

        You can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.

        Unsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/rest/activity/notifications#delete-a-thread-subscription) endpoint.
      tags:
        - activity
      operationId: activity/set-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#set-a-thread-subscription
      parameters:
        - $ref: "#/components/parameters/thread-id"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                ignored:
                  description: Whether to block all notifications from a thread.
                  default: false
                  type: boolean
              type: object
            examples:
              default:
                value:
                  ignored: false
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thread-subscription"
              examples:
                default:
                  $ref: "#/components/examples/thread-subscription"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    delete:
      summary: Delete a thread subscription
      description: Mutes all future notifications for a conversation until you comment
        on the thread or get an **@mention**. If you are watching the repository
        of the thread, you will still receive notifications. To ignore future
        notifications for a repository you are watching, use the [Set a thread
        subscription](https://docs.github.com/rest/activity/notifications#set-a-thread-subscription)
        endpoint and set `ignore` to `true`.
      tags:
        - activity
      operationId: activity/delete-thread-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#delete-a-thread-subscription
      parameters:
        - $ref: "#/components/parameters/thread-id"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  /orgs/{org}/events:
    get:
      summary: List public organization events
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-public-org-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-organization-events
      parameters:
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                200-response:
                  $ref: "#/components/examples/public-org-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /repos/{owner}/{repo}/events:
    get:
      summary: List repository events
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-repo-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-repository-events
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                200-response:
                  $ref: "#/components/examples/repo-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /repos/{owner}/{repo}/notifications:
    get:
      summary: List repository notifications for the authenticated user
      description: Lists all notifications for the current user in the specified repository.
      tags:
        - activity
      operationId: activity/list-repo-notifications-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#list-repository-notifications-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/all"
        - $ref: "#/components/parameters/participating"
        - $ref: "#/components/parameters/since"
        - $ref: "#/components/parameters/before"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/thread"
              examples:
                default:
                  $ref: "#/components/examples/thread-items"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
    put:
      summary: Mark repository notifications as read
      description: Marks all notifications in a repository as "read" for the current
        user. If the number of notifications is too large to complete in one
        request, you will receive a `202 Accepted` status and GitHub will run an
        asynchronous process to mark notifications as "read." To check whether
        any "unread" notifications remain, you can use the [List repository
        notifications for the authenticated
        user](https://docs.github.com/rest/activity/notifications#list-repository-notifications-for-the-authenticated-user)
        endpoint and pass the query parameter `all=false`.
      tags:
        - activity
      operationId: activity/mark-repo-notifications-as-read
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/notifications#mark-repository-notifications-as-read
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_read_at:
                  type: string
                  format: date-time
                  description: "Describes the last point that notifications were checked. Anything
                    updated since this time will not be marked as read. If you
                    omit this parameter, all notifications are marked as read.
                    This is a timestamp in [ISO
                    8601](https://en.wikipedia.org/wiki/ISO_8601) format:
                    `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp."
            examples:
              default:
                value:
                  last_read_at: 2019-01-01T00:00:00Z
      responses:
        "202":
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              examples:
                default:
                  value:
                    message: Unread notifications couldn't be marked in a single request.
                      Notifications are being marked as read in the background.
        "205":
          description: Reset Content
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: notifications
  /repos/{owner}/{repo}/stargazers:
    get:
      summary: List stargazers
      description: |-
        Lists the people that have starred the repository.

        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

        - **`application/vnd.github.star+json`**: Includes a timestamp of when the star was created.
      tags:
        - activity
      operationId: activity/list-stargazers-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-stargazers
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/simple-user"
                  - type: array
                    items:
                      $ref: "#/components/schemas/stargazer"
              examples:
                default-response:
                  $ref: "#/components/examples/simple-user-items-default-response"
                alternative-response-with-star-creation-timestamps:
                  $ref: "#/components/examples/stargazer-items-alternative-response-with-star-cre\
                    ation-timestamps"
          headers:
            Link:
              $ref: "#/components/headers/link"
        "422":
          $ref: "#/components/responses/validation_failed"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: starring
  /repos/{owner}/{repo}/subscribers:
    get:
      summary: List watchers
      description: Lists the people watching the specified repository.
      tags:
        - activity
      operationId: activity/list-watchers-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-watchers
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/simple-user"
              examples:
                default:
                  $ref: "#/components/examples/simple-user-items"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: watching
  /repos/{owner}/{repo}/subscription:
    get:
      summary: Get a repository subscription
      description: Gets information about whether the authenticated user is subscribed
        to the repository.
      tags:
        - activity
      operationId: activity/get-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#get-a-repository-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "200":
          description: if you subscribe to the repository
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/repository-subscription"
              examples:
                response-if-you-subscribe-to-the-repository:
                  $ref: "#/components/examples/repository-subscription-response-if-you-subscribe-\
                    to-the-repository"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          description: Not Found if you don't subscribe to the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
    put:
      summary: Set a repository subscription
      description: If you would like to watch a repository, set `subscribed` to
        `true`. If you would like to ignore notifications made within a
        repository, set `ignored` to `true`. If you would like to stop watching
        a repository, [delete the repository's
        subscription](https://docs.github.com/rest/activity/watching#delete-a-repository-subscription)
        completely.
      tags:
        - activity
      operationId: activity/set-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#set-a-repository-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribed:
                  type: boolean
                  description: Determines if notifications should be received from this
                    repository.
                ignored:
                  type: boolean
                  description: Determines if all notifications should be blocked from this
                    repository.
            examples:
              default:
                value:
                  subscribed: true
                  ignored: false
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/repository-subscription"
              examples:
                default:
                  $ref: "#/components/examples/repository-subscription"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
    delete:
      summary: Delete a repository subscription
      description: This endpoint should only be used to stop watching a repository. To
        control whether or not you wish to receive notifications from a
        repository, [set the repository's subscription
        manually](https://docs.github.com/rest/activity/watching#set-a-repository-subscription).
      tags:
        - activity
      operationId: activity/delete-repo-subscription
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#delete-a-repository-subscription
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
  /user/starred:
    get:
      summary: List repositories starred by the authenticated user
      description: |-
        Lists repositories the authenticated user has starred.

        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

        - **`application/vnd.github.star+json`**: Includes a timestamp of when the star was created.
      tags:
        - activity
      operationId: activity/list-repos-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-repositories-starred-by-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/sort-starred"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/repository"
              examples:
                default-response:
                  $ref: "#/components/examples/repository-items-default-response"
            application/vnd.github.v3.star+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/starred-repository"
              examples:
                alternative-response-with-star-creation-timestamps:
                  $ref: "#/components/examples/starred-repository-items-alternative-response-with\
                    -star-creation-timestamps"
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  /user/starred/{owner}/{repo}:
    get:
      summary: Check if a repository is starred by the authenticated user
      description: Whether the authenticated user has starred the repository.
      tags:
        - activity
      operationId: activity/check-repo-is-starred-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#check-if-a-repository-is-starred-by-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response if this repository is starred by you
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          description: Not Found if this repository is not starred by you
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/basic-error"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    put:
      summary: Star a repository for the authenticated user
      description: Note that you'll need to set `Content-Length` to zero when calling
        out to this endpoint. For more information, see "[HTTP
        method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."
      tags:
        - activity
      operationId: activity/star-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#star-a-repository-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
    delete:
      summary: Unstar a repository for the authenticated user
      description: Unstar a repository that the authenticated user has previously starred.
      tags:
        - activity
      operationId: activity/unstar-repo-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#unstar-a-repository-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/owner"
        - $ref: "#/components/parameters/repo"
      responses:
        "204":
          description: Response
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/not_found"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: starring
  /user/subscriptions:
    get:
      summary: List repositories watched by the authenticated user
      description: Lists repositories the authenticated user is watching.
      tags:
        - activity
      operationId: activity/list-watched-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-repositories-watched-by-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/minimal-repository"
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
          headers:
            Link:
              $ref: "#/components/headers/link"
        "304":
          $ref: "#/components/responses/not_modified"
        "401":
          $ref: "#/components/responses/requires_authentication"
        "403":
          $ref: "#/components/responses/forbidden"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: watching
  /users/{username}/events:
    get:
      summary: List events for the authenticated user
      description: >-
        If you are authenticated as the given user, you will see your private
        events. Otherwise, you'll only see public events. _Optional_: use the
        fine-grained token with following permission set to view private events:
        "Events" user permissions (read).


        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-events-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/user-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/events/orgs/{org}:
    get:
      summary: List organization events for the authenticated user
      description: >-
        This is the user's organization dashboard. You must be authenticated as
        the user to view this.


        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-org-events-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-organization-events-for-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/org"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/user-org-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: activity
        subcategory: events
  /users/{username}/events/public:
    get:
      summary: List public events for a user
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-for-a-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/user-public-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/received_events:
    get:
      summary: List events received by the authenticated user
      description: >-
        These are events that you've received by watching repositories and
        following users. If you are authenticated as the

        given user, you will see private events. Otherwise, you'll only see
        public events.


        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-received-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-events-received-by-the-authenticated-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/user-received-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/received_events/public:
    get:
      summary: List public events received by a user
      description: >-
        > [!NOTE]

        > This API is not built to serve real-time use cases. Depending on the
        time of day, event latency can be anywhere from 30s to 6h.
      tags:
        - activity
      operationId: activity/list-received-public-events-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/events#list-public-events-received-by-a-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/event"
              examples:
                default:
                  $ref: "#/components/examples/user-received-public-events-items"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: events
  /users/{username}/starred:
    get:
      summary: List repositories starred by a user
      description: |-
        Lists repositories a user has starred.

        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."

        - **`application/vnd.github.star+json`**: Includes a timestamp of when the star was created.
      tags:
        - activity
      operationId: activity/list-repos-starred-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/starring#list-repositories-starred-by-a-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/sort-starred"
        - $ref: "#/components/parameters/direction"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/starred-repository"
                  - type: array
                    items:
                      $ref: "#/components/schemas/repository"
              examples:
                default-response:
                  $ref: "#/components/examples/repository-items-default-response"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: starring
  /users/{username}/subscriptions:
    get:
      summary: List repositories watched by a user
      description: Lists repositories a user is watching.
      tags:
        - activity
      operationId: activity/list-repos-watched-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/activity/watching#list-repositories-watched-by-a-user
      parameters:
        - $ref: "#/components/parameters/username"
        - $ref: "#/components/parameters/per-page"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/minimal-repository"
              examples:
                default:
                  $ref: "#/components/examples/minimal-repository-items"
          headers:
            Link:
              $ref: "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: activity
        subcategory: watching
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: "#/components/schemas/nullable-license-simple"
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: "#/components/schemas/simple-user"
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated
            hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to
            generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: "The repository visibility: public, private, or internal."
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: 2011-01-26T19:06:43Z
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2011-01-26T19:01:12Z
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: 2011-01-26T19:14:43Z
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base
            branch can always be updated even if it is not required to be up to
            date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as
            default. **This property is closing down. Please use
            `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
            - PR_TITLE
            - COMMIT_OR_PR_TITLE
          description: >-
            The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request's title.

            - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one
            commit) or the pull request's title (when more than one commit).
        squash_merge_commit_message:
          type: string
          enum:
            - PR_BODY
            - COMMIT_MESSAGES
            - BLANK
          description: |-
            The default value for a squash merge commit message:

            - `PR_BODY` - default to the pull request's body.
            - `COMMIT_MESSAGES` - default to the branch's commit messages.
            - `BLANK` - default to a blank commit message.
        merge_commit_title:
          type: string
          enum:
            - PR_TITLE
            - MERGE_MESSAGE
          description: >-
            The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request's title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message
            (e.g., Merge pull request #123 from branch-name).
        merge_commit_message:
          type: string
          enum:
            - PR_BODY
            - PR_TITLE
            - BLANK
          description: |-
            The default value for a merge commit message.

            - `PR_TITLE` - default to the pull request's title.
            - `PR_BODY` - default to the pull request's body.
            - `BLANK` - default to a blank commit message.
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    event:
      title: Event
      description: Event
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          nullable: true
        actor:
          $ref: "#/components/schemas/actor"
        repo:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - id
            - name
            - url
        org:
          $ref: "#/components/schemas/actor"
        payload:
          type: object
          properties:
            action:
              type: string
            issue:
              $ref: "#/components/schemas/issue"
            comment:
              $ref: "#/components/schemas/issue-comment"
            pages:
              type: array
              items:
                type: object
                properties:
                  page_name:
                    type: string
                  title:
                    type: string
                  summary:
                    type: string
                    nullable: true
                  action:
                    type: string
                  sha:
                    type: string
                  html_url:
                    type: string
        public:
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - type
        - actor
        - repo
        - payload
        - public
        - created_at
    feed:
      title: Feed
      description: Feed
      type: object
      properties:
        timeline_url:
          type: string
          example: https://github.com/timeline
        user_url:
          type: string
          example: https://github.com/{user}
        current_user_public_url:
          type: string
          example: https://github.com/octocat
        current_user_url:
          type: string
          example: https://github.com/octocat.private?token=abc123
        current_user_actor_url:
          type: string
          example: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url:
          type: string
          example: https://github.com/octocat-org
        current_user_organization_urls:
          type: array
          example:
            - https://github.com/organizations/github/octocat.private.atom?token=abc123
          items:
            type: string
            format: uri
        security_advisories_url:
          type: string
          example: https://github.com/security-advisories
        repository_discussions_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions
          description: A feed of discussions for a given repository.
        repository_discussions_category_url:
          type: string
          example: https://github.com/{user}/{repo}/discussions/categories/{category}
          description: A feed of discussions for a given repository and category.
        _links:
          type: object
          properties:
            timeline:
              $ref: "#/components/schemas/link-with-type"
            user:
              $ref: "#/components/schemas/link-with-type"
            security_advisories:
              $ref: "#/components/schemas/link-with-type"
            current_user:
              $ref: "#/components/schemas/link-with-type"
            current_user_public:
              $ref: "#/components/schemas/link-with-type"
            current_user_actor:
              $ref: "#/components/schemas/link-with-type"
            current_user_organization:
              $ref: "#/components/schemas/link-with-type"
            current_user_organizations:
              type: array
              items:
                $ref: "#/components/schemas/link-with-type"
            repository_discussions:
              $ref: "#/components/schemas/link-with-type"
            repository_discussions_category:
              $ref: "#/components/schemas/link-with-type"
          required:
            - timeline
            - user
      required:
        - _links
        - timeline_url
        - user_url
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated
            hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: 2011-01-26T19:06:43Z
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2011-01-26T19:01:12Z
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: 2011-01-26T19:14:43Z
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: "#/components/schemas/security-and-analysis"
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The
            keys are the custom property names, and the values are the
            corresponding custom property values.
          additionalProperties: true
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
    thread:
      title: Thread
      description: Thread
      type: object
      properties:
        id:
          type: string
        repository:
          $ref: "#/components/schemas/minimal-repository"
        subject:
          type: object
          properties:
            title:
              type: string
            url:
              type: string
            latest_comment_url:
              type: string
            type:
              type: string
          required:
            - title
            - url
            - latest_comment_url
            - type
        reason:
          type: string
        unread:
          type: boolean
        updated_at:
          type: string
        last_read_at:
          type: string
          nullable: true
        url:
          type: string
        subscription_url:
          type: string
          example: https://api.github.com/notifications/threads/2/subscription
      required:
        - id
        - unread
        - reason
        - updated_at
        - last_read_at
        - subject
        - repository
        - url
        - subscription_url
    thread-subscription:
      title: Thread Subscription
      description: Thread Subscription
      type: object
      properties:
        subscribed:
          type: boolean
          example: true
        ignored:
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2012-10-06T21:34:12Z
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1/subscription
        thread_url:
          type: string
          format: uri
          example: https://api.github.com/notifications/threads/1
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/1
      required:
        - created_at
        - ignored
        - reason
        - url
        - subscribed
    stargazer:
      title: Stargazer
      description: Stargazer
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/nullable-simple-user"
      required:
        - starred_at
        - user
    repository-subscription:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        subscribed:
          description: Determines if notifications should be received from this repository.
          type: boolean
          example: true
        ignored:
          description: Determines if all notifications should be blocked from this
            repository.
          type: boolean
        reason:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          example: 2012-10-06T21:34:12Z
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/subscription
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
      required:
        - created_at
        - ignored
        - reason
        - subscribed
        - url
        - repository_url
    starred-repository:
      title: Starred Repository
      description: Starred Repository
      type: object
      properties:
        starred_at:
          type: string
          format: date-time
        repo:
          $ref: "#/components/schemas/repository"
      required:
        - starred_at
        - repo
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    actor:
      title: Actor
      description: Actor
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        display_login:
          type: string
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        avatar_url:
          type: string
          format: uri
      required:
        - id
        - login
        - gravatar_id
        - url
        - avatar_url
    issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and
        bugs for your projects.
      type: object
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        state_reason:
          description: The reason for the current state
          example: not_planned
          type: string
          nullable: true
          enum:
            - completed
            - reopened
            - not_planned
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try and
            create the widget, Safari crashes. This is reproducible on 10.8, but
            not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          $ref: "#/components/schemas/nullable-simple-user"
        labels:
          description: Labels to associate with this issue; pass one or more label names
            to replace the set of labels on this issue; send an empty array to
            clear all labels from the issue; note that the labels are silently
            dropped for users without push access to the repository
          example:
            - bug
            - registration
          type: array
          items:
            oneOf:
              - type: string
              - type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  node_id:
                    type: string
                  url:
                    type: string
                    format: uri
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  color:
                    type: string
                    nullable: true
                  default:
                    type: boolean
        assignee:
          $ref: "#/components/schemas/nullable-simple-user"
        assignees:
          type: array
          items:
            $ref: "#/components/schemas/simple-user"
          nullable: true
        milestone:
          $ref: "#/components/schemas/nullable-milestone"
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
            - diff_url
            - html_url
            - patch_url
            - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          $ref: "#/components/schemas/nullable-simple-user"
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        type:
          $ref: "#/components/schemas/issue-type"
        repository:
          $ref: "#/components/schemas/repository"
        performed_via_github_app:
          $ref: "#/components/schemas/nullable-integration"
        author_association:
          $ref: "#/components/schemas/author-association"
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
        sub_issues_summary:
          $ref: "#/components/schemas/sub-issues-summary"
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
    issue-comment:
      title: Issue Comment
      description: Comments provide a way for people to collaborate on an issue.
      type: object
      properties:
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          $ref: "#/components/schemas/nullable-simple-user"
        created_at:
          type: string
          format: date-time
          example: 2011-04-14T16:00:49Z
        updated_at:
          type: string
          format: date-time
          example: 2011-04-14T16:00:49Z
        issue_url:
          type: string
          format: uri
        author_association:
          $ref: "#/components/schemas/author-association"
        performed_via_github_app:
          $ref: "#/components/schemas/nullable-integration"
        reactions:
          $ref: "#/components/schemas/reaction-rollup"
      required:
        - id
        - node_id
        - html_url
        - issue_url
        - author_association
        - user
        - url
        - created_at
        - updated_at
    link-with-type:
      title: Link With Type
      description: Hypermedia Link with Type
      type: object
      properties:
        href:
          type: string
        type:
          type: string
      required:
        - href
        - type
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the
                repository.
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
            - open
            - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: "#/components/schemas/nullable-simple-user"
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: 2011-04-10T20:09:31Z
        updated_at:
          type: string
          format: date-time
          example: 2014-03-03T18:58:10Z
        closed_at:
          type: string
          format: date-time
          example: 2013-02-12T13:22:01Z
          nullable: true
        due_on:
          type: string
          format: date-time
          example: 2012-10-09T23:39:01Z
          nullable: true
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
      nullable: true
    issue-type:
      title: Issue Type
      description: The type of issue.
      type: object
      nullable: true
      properties:
        id:
          type: integer
          description: The unique identifier of the issue type.
        node_id:
          type: string
          description: The node identifier of the issue type.
        name:
          type: string
          description: The name of the issue type.
        description:
          type: string
          description: The description of the issue type.
          nullable: true
        color:
          type: string
          description: The color of the issue type.
          enum:
            - gray
            - blue
            - green
            - yellow
            - orange
            - red
            - pink
            - purple
          nullable: true
        created_at:
          type: string
          description: The time the issue type created.
          format: date-time
        updated_at:
          type: string
          description: The time the issue type last updated.
          format: date-time
        is_enabled:
          type: boolean
          description: The enabled state of the issue type.
      required:
        - id
        - node_id
        - name
        - description
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed
        directly on organizations and user accounts and granted access to
        specific repositories. They come with granular permissions and built-in
        webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
            - $ref: "#/components/schemas/simple-user"
            - $ref: "#/components/schemas/enterprise"
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: 2017-07-08T16:18:44-04:00
        updated_at:
          type: string
          format: date-time
          example: 2017-07-08T16:18:44-04:00
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the
            `installation_target`, `security_advisory`, and `meta` events are
            not included because they are global events and not specific to an
            installation.
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only
            returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        "+1":
          type: integer
        "-1":
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
        - url
        - total_count
        - "+1"
        - "-1"
        - laugh
        - confused
        - heart
        - hooray
        - eyes
        - rocket
    sub-issues-summary:
      title: Sub-issues Summary
      type: object
      properties:
        total:
          type: integer
        completed:
          type: integer
        percent_completed:
          type: integer
      required:
        - total
        - completed
        - percent_completed
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: 2019-01-26T19:01:12Z
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: 2019-01-26T19:14:43Z
        avatar_url:
          type: string
          format: uri
      required:
        - id
        - node_id
        - name
        - slug
        - html_url
        - created_at
        - updated_at
        - avatar_url
  examples:
    public-events-items:
      value:
        - id: "22249084947"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            action: started
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-07T07:50:26Z
    feed:
      value:
        timeline_url: https://github.com/timeline
        user_url: https://github.com/{user}
        current_user_public_url: https://github.com/octocat
        current_user_url: https://github.com/octocat.private?token=abc123
        current_user_actor_url: https://github.com/octocat.private.actor?token=abc123
        current_user_organization_url: ""
        current_user_organization_urls:
          - https://github.com/organizations/github/octocat.private.atom?token=abc123
        security_advisories_url: https://github.com/security-advisories
        _links:
          timeline:
            href: https://github.com/timeline
            type: application/atom+xml
          user:
            href: https://github.com/{user}
            type: application/atom+xml
          current_user_public:
            href: https://github.com/octocat
            type: application/atom+xml
          current_user:
            href: https://github.com/octocat.private?token=abc123
            type: application/atom+xml
          current_user_actor:
            href: https://github.com/octocat.private.actor?token=abc123
            type: application/atom+xml
          current_user_organization:
            href: ""
            type: ""
          current_user_organizations:
            - href: https://github.com/organizations/github/octocat.private.atom?token=abc123
              type: application/atom+xml
          security_advisories:
            href: https://github.com/security-advisories
            type: application/atom+xml
    public-repo-events-items:
      value:
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22237752260"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/rrubenich
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            action: started
          public: true
          created_at: 2022-06-08T23:29:25Z
    thread-items:
      value:
        - id: "1"
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ""
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
          subject:
            title: Greetings
            url: https://api.github.com/repos/octokit/octokit.rb/issues/123
            latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
            type: Issue
          reason: subscribed
          unread: true
          updated_at: 2014-11-07T22:01:45Z
          last_read_at: 2014-11-07T22:01:45Z
          url: https://api.github.com/notifications/threads/1
          subscription_url: https://api.github.com/notifications/threads/1/subscription
    notifications-mark-read:
      value:
        message: Unread notifications couldn't be marked in a single request.
          Notifications are being marked as read in the background.
    thread:
      value:
        id: "1"
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        subject:
          title: Greetings
          url: https://api.github.com/repos/octokit/octokit.rb/issues/123
          latest_comment_url: https://api.github.com/repos/octokit/octokit.rb/issues/comments/123
          type: Issue
        reason: subscribed
        unread: true
        updated_at: 2014-11-07T22:01:45Z
        last_read_at: 2014-11-07T22:01:45Z
        url: https://api.github.com/notifications/threads/1
        subscription_url: https://api.github.com/notifications/threads/1/subscription
    thread-subscription:
      value:
        subscribed: true
        ignored: false
        reason: null
        created_at: 2012-10-06T21:34:12Z
        url: https://api.github.com/notifications/threads/1/subscription
        thread_url: https://api.github.com/notifications/threads/1
    simple-user-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ""
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    public-org-events-items:
      value:
        - id: "22237752260"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octo-org/octo-repo
            url: https://api.github.com/repos/octo-org/octo-repo
          payload:
            action: started
          public: true
          created_at: 2022-06-08T23:29:25Z
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octo-org/octo-repo
            url: https://api.github.com/repos/octo-org/oct-repo
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octo-org/oct-repo/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-09T12:47:28Z
    minimal-repository-items:
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          has_discussions: false
          archived: false
          disabled: false
          visibility: public
          pushed_at: 2011-01-26T19:06:43Z
          created_at: 2011-01-26T19:01:12Z
          updated_at: 2011-01-26T19:14:43Z
          permissions:
            admin: false
            push: false
            pull: true
          security_and_analysis:
            advanced_security:
              status: enabled
            secret_scanning:
              status: enabled
            secret_scanning_push_protection:
              status: disabled
            secret_scanning_non_provider_patterns:
              status: disabled
    repo-events-items:
      value:
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22237752260"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            action: started
          public: true
          created_at: 2022-06-08T23:29:25Z
    simple-user-items-default-response:
      summary: Default response
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ""
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    repository-subscription:
      value:
        subscribed: true
        ignored: false
        reason: null
        created_at: 2012-10-06T21:34:12Z
        url: https://api.github.com/repos/octocat/example/subscription
        repository_url: https://api.github.com/repos/octocat/example
    repository-items-default-response:
      summary: Default response
      value:
        - id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
            - octocat
            - atom
            - electron
            - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: 2011-01-26T19:06:43Z
          created_at: 2011-01-26T19:01:12Z
          updated_at: 2011-01-26T19:14:43Z
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          template_repository: null
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    user-events-items:
      value:
        - id: "22249084947"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            action: started
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: false
          created_at: 2022-06-07T07:50:26Z
    user-org-events-items:
      value:
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: false
          created_at: 2022-06-09T12:47:28Z
        - id: "22196946742"
          type: CreateEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            ref: null
            ref_type: repository
            master_branch: master
            description: null
            pusher_type: user
          public: false
          created_at: 2022-06-07T07:50:26Z
          org:
            id: 9919
            login: github
            gravatar_id: ""
            url: https://api.github.com/orgs/github
            avatar_url: https://avatars.githubusercontent.com/u/9919?
    user-public-events-items:
      value:
        - id: "22249084947"
          type: WatchEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            action: started
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-08T23:29:25Z
    user-received-events-items:
      value:
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22196946742"
          type: CreateEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            ref: null
            ref_type: repository
            master_branch: master
            description: null
            pusher_type: user
          public: false
          created_at: 2022-06-07T07:50:26Z
          org:
            id: 9919
            login: github
            gravatar_id: ""
            url: https://api.github.com/orgs/github
            avatar_url: https://avatars.githubusercontent.com/u/9919?
    user-received-public-events-items:
      value:
        - id: "22249084964"
          type: PushEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            push_id: 10115855396
            size: 1
            distinct_size: 1
            ref: refs/heads/master
            head: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
            before: 883efe034920928c47fe18598c01249d1a9fdabd
            commits:
              - sha: 7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
                author:
                  email: octocat@github.com
                  name: Monalisa Octocat
                message: commit
                distinct: true
                url: https://api.github.com/repos/octocat/Hello-World/commits/7a8f3ac80e2ad2f6842cb86f576d4bfe2c03e300
          public: true
          created_at: 2022-06-09T12:47:28Z
        - id: "22196946742"
          type: CreateEvent
          actor:
            id: 583231
            login: octocat
            display_login: octocat
            gravatar_id: ""
            url: https://api.github.com/users/octocat
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
          repo:
            id: 1296269
            name: octocat/Hello-World
            url: https://api.github.com/repos/octocat/Hello-World
          payload:
            ref: null
            ref_type: repository
            master_branch: master
            description: null
            pusher_type: user
          public: false
          created_at: 2022-06-07T07:50:26Z
          org:
            id: 9919
            login: github
            gravatar_id: ""
            url: https://api.github.com/orgs/github
            avatar_url: https://avatars.githubusercontent.com/u/9919?
  parameters:
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see
        "[Using pagination in the REST
        API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see
        "[Using pagination in the REST
        API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    since:
      name: since
      description: "Only show results that were last updated after the given time.
        This is a timestamp in [ISO
        8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name
        is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    all:
      name: all
      description: If `true`, show notifications marked as read.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    participating:
      name: participating
      description: If `true`, only shows notifications in which the user is directly
        participating or mentioned.
      in: query
      required: false
      schema:
        type: boolean
        default: false
    before:
      name: before
      description: "Only show notifications updated before the given time. This is a
        timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
        `YYYY-MM-DDTHH:MM:SSZ`."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    thread-id:
      name: thread_id
      description: The unique identifier of the notification thread. This corresponds
        to the value returned in the `id` field when you retrieve notifications
        (for example with the [`GET /notifications`
        operation](https://docs.github.com/rest/activity/notifications#list-notifications-for-the-authenticated-user)).
      in: path
      required: true
      schema:
        type: integer
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    username:
      name: username
      description: The handle for the GitHub user account.
      in: path
      required: true
      schema:
        type: string
    sort-starred:
      name: sort
      description: The property to sort the results by. `created` means when the
        repository was starred. `updated` means when the repository was last
        pushed to.
      in: query
      required: false
      schema:
        type: string
        enum:
          - created
          - updated
        default: created
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/validation-error"
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/basic-error"
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next",
        <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
