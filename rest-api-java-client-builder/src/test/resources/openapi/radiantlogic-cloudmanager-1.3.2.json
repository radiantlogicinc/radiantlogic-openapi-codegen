{
  "openapi": "3.0.0",
  "paths": {
    "/eoc-backend/settings": {
      "get": {
        "operationId": "SystemSettingsController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemSettingsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "SystemSettingsController_updateSetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/settings/crons": {
      "get": {
        "operationId": "SystemSettingsController_getCronsDetails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulerDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchedulerDetailsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/settings/manual-update": {
      "post": {
        "operationId": "SystemSettingsController_manualUpdate",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/settings/cron-update": {
      "post": {
        "operationId": "SystemSettingsController_updateCronJob",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCronJobDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates a cron job by name with the specified action and/or cron expression"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid cron expression or action"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "Cron job not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/app-images": {
      "get": {
        "operationId": "AppImageController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "appVersion",
                "helmChartVersion",
                "name",
                "createdAt",
                "isEnabled",
                "releaseChannel"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "app-images"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/app-images/versions": {
      "get": {
        "operationId": "AppImageController_getAppVersionsForCreate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppImageDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "app-images"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/app-images/{appImageId}": {
      "get": {
        "operationId": "AppImageController_getAppImageById",
        "parameters": [
          {
            "name": "appImageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppImageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "app-images"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/app-images/{appImageId}/enabled": {
      "patch": {
        "operationId": "AppImageController_updateIsEnabled",
        "parameters": [
          {
            "name": "appImageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppImageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "app-images"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/release-channel": {
      "get": {
        "operationId": "ReleaseChannelController_getReleaseChannels",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseChannelDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "release-channel"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations": {
      "get": {
        "operationId": "IntegrationController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "name",
                "templateName"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "IntegrationController_postIntegration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations/test-connection": {
      "post": {
        "operationId": "IntegrationController_testIntegrationConnection",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations/{integrationId}": {
      "delete": {
        "operationId": "IntegrationController_deleteIntegrationById",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "IntegrationController_patchIntegrationById",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations/user/{userId}": {
      "get": {
        "operationId": "IntegrationController_getIntegrationsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations/templates": {
      "get": {
        "operationId": "IntegrationTemplateController_getIntegrationTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationTemplateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/integrations/templates/{templateId}": {
      "get": {
        "operationId": "IntegrationTemplateController_getIntegrationTemplateById",
        "parameters": [
          {
            "name": "templateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTemplateDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/metrics": {
      "get": {
        "operationId": "MetricsController_getMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "metrics"
        ]
      }
    },
    "/eoc-backend/metrics/keys": {
      "get": {
        "operationId": "MetricsController_getMetricsKeys",
        "parameters": [
          {
            "name": "templateName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "metrics"
        ]
      }
    },
    "/eoc-backend/metrics/labels": {
      "get": {
        "operationId": "MetricsController_getMetricsLabels",
        "parameters": [
          {
            "name": "metricName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "metrics"
        ]
      }
    },
    "/eoc-backend/metrics/metadata": {
      "get": {
        "operationId": "MetricsController_getMetricsMetadata",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "metrics"
        ]
      }
    },
    "/eoc-backend/metrics/live": {
      "get": {
        "operationId": "MetricsController_getLiveMetrics",
        "parameters": [
          {
            "name": "envName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "metrics"
        ]
      }
    },
    "/eoc-backend/alerts": {
      "get": {
        "operationId": "AlertsController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "alertName",
                "createdAt",
                "alertName",
                "description",
                "severity",
                "channels"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "AlertWebhook_createAlert",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ]
      }
    },
    "/eoc-backend/alerts/rules/{alertId}": {
      "get": {
        "operationId": "AlertsController_getEnvironmentAlertsByRuleId",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertApplicationViewDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/alerts/unread/{environmentAppId}": {
      "get": {
        "operationId": "AlertsController_getUnreadEnvironmentAlertsByEnvironmentId",
        "parameters": [
          {
            "name": "environmentAppId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertApplicationViewDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/alerts/agent/unread/{agentId}": {
      "get": {
        "operationId": "AlertsController_getAgentUnreadAlertsByAgentd",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertApplicationViewDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/alerts/mark-as-read/{alertEnvFiredId}": {
      "post": {
        "operationId": "AlertsController_markAlertAsReadByUser",
        "parameters": [
          {
            "name": "alertEnvFiredId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/alerts/user-environments/{status}": {
      "get": {
        "operationId": "AlertsController_getUserEnvironmentsAlertsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertApplicationViewDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/alerts/{status}": {
      "get": {
        "operationId": "AlertsController_getAlertsByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertApplicationViewDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules": {
      "get": {
        "operationId": "RulesController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "alertName",
                "environmentName",
                "updatedAt",
                "integrations",
                "description",
                "severity"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "RulesController_createAlert",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertInformationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertInformationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules/default/{agentId}": {
      "post": {
        "operationId": "RulesController_createAgentDefaultAlerts",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertInformation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules/{alertId}": {
      "get": {
        "operationId": "RulesController_getAlert",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertInformationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "RulesController_patchAlert",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertInformationPatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertInformationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "RulesController_deleteAlertById",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules/history/{alertId}": {
      "get": {
        "operationId": "RulesController_getAlertHistory",
        "parameters": [
          {
            "name": "alertId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules/application/{appId}": {
      "get": {
        "operationId": "RulesController_getAlertsByAppId",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "alertName",
                "createdAt",
                "alertName",
                "description",
                "severity",
                "channels"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/rules/pre-configured/{type}": {
      "get": {
        "operationId": "RulesController_getPreConfiguredAlerts",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreConfiguredAlertTemplateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "rules"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/eoc-grafana/dashboards": {
      "get": {
        "operationId": "GrafanaController_getDashboardsGrafana",
        "parameters": [
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardGrafanaDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "eoc-grafana"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users": {
      "get": {
        "operationId": "UserController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "firstName",
                "lastName",
                "email",
                "fullName",
                "active",
                "lastLogin",
                "mfaEnabled"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "UserController_postUser",
        "summary": "",
        "description": "Creates a new user if it does not exist or reactivates and updates soft deleted user. Will throw error if user exists and is not soft-deleted.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/self": {
      "get": {
        "operationId": "UserController_getUserSelf",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/self/password": {
      "patch": {
        "operationId": "UserController_changePasword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserPasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password was changed successfully."
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/self/layout": {
      "patch": {
        "operationId": "UserController_changeLayout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Layout was updated successfully."
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/self/2fa-reset": {
      "post": {
        "operationId": "UserController_resetMfa",
        "parameters": [],
        "responses": {
          "204": {
            "description": "MFA was reset successfully."
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/{userId}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "UserController_patchUserById",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUserById",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/users/{userId}/avatar": {
      "get": {
        "operationId": "UserController_getUserAvatarByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/s3bucket/{environmentName}/{filter}": {
      "get": {
        "operationId": "S3bucketController_getS3BucketFiles",
        "parameters": [
          {
            "name": "environmentName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SingleS3ObjectResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "s3bucket"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/s3bucket/{environmentName}": {
      "post": {
        "operationId": "S3bucketController_uploadLocalFileToS3Bucket",
        "parameters": [
          {
            "name": "environmentName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "s3bucket"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/s3bucket/{environmentName}/{fileName}": {
      "delete": {
        "operationId": "S3bucketController_deleteS3BucketFile",
        "parameters": [
          {
            "name": "environmentName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "s3bucket"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-environment-roles": {
      "post": {
        "operationId": "UserEnvironmentRoleController_postUserEnvironmentRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserEnvironmentRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-environment-roles/bulk": {
      "post": {
        "operationId": "UserEnvironmentRoleController_postUserEnvironmentRoleBulk",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserEnvironmentRolesBulkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-environment-roles/{userEnvironmentRoleId}": {
      "get": {
        "operationId": "UserEnvironmentRoleController_getUserEnvironmentRoleById",
        "parameters": [
          {
            "name": "userEnvironmentRoleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "UserEnvironmentRoleController_deleteUserEnvironmentRoleById",
        "parameters": [
          {
            "name": "userEnvironmentRoleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": "The resource was deleted successfully"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-environment-roles/user/{userId}": {
      "get": {
        "operationId": "UserEnvironmentRoleController_getUserEnvironmentRolesByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "UserEnvironmentRoleController_putUserEnvironmentRolesByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutUserEnvironmentRolesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-environment-roles/environment/{environmentId}": {
      "get": {
        "operationId": "UserEnvironmentRoleController_getUserEnvironmentRolesByEnvironmentId",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserEnvironmentRoleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-environment-roles"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-token": {
      "post": {
        "operationId": "UserTokenController_postTokenUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-token"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "operationId": "UserTokenController_getToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleUserTokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-token"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-token/{tokenId}": {
      "delete": {
        "operationId": "UserTokenController_deleteToken",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-token"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/dashboard/user-quick-links": {
      "get": {
        "operationId": "DashboardController_getUserQuickLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickLinksDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/dashboard/quick-links": {
      "get": {
        "operationId": "DashboardController_getQuickLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickLinksDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "DashboardController_updateQuickLinks",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertQuickLinksDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickLinksDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "DashboardController_addQuickLink",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuickLinkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickLinksDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/dashboard/quick-links/{id}": {
      "put": {
        "operationId": "DashboardController_updateQuickLink",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/dashboard/reset-quick-links": {
      "put": {
        "operationId": "DashboardController_resetQuickLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "dashboard"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/datasources/sdc-version": {
      "get": {
        "operationId": "AgentDataSourcesController_getSdcServerVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/datasources/{agentId}": {
      "get": {
        "operationId": "AgentDataSourcesController_getAgentConnectionsByAgentId",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents": {
      "get": {
        "operationId": "AgentController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "name"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "statusFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive",
                  "Paused",
                  "Error"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "AgentController_postAgent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAgentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/download-urls": {
      "get": {
        "operationId": "AgentController_getDownloadUrlsByAgentId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentBinariesDownloadUrlsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}": {
      "get": {
        "operationId": "AgentController_getAgentById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "AgentController_patchAgentById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAgentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "AgentController_deleteAgentById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource has been successfully deleted"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}/alerts/default/exists": {
      "get": {
        "operationId": "AgentController_checkDefaultAlertsExistForAgent",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}/setState": {
      "patch": {
        "operationId": "AgentController_setAgentStateById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAgentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}/hubtoken": {
      "get": {
        "operationId": "AgentController_getAgentHubTokenByAgentId",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exp",
            "required": false,
            "in": "query",
            "schema": {
              "example": "2025-06-16T13:00:53.839Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationTokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}/restart": {
      "post": {
        "operationId": "AgentController_postRestartAgentById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agents/{agentId}/stop": {
      "post": {
        "operationId": "AgentController_postStopAgentById",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agents"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agent-groups/search": {
      "get": {
        "operationId": "AgentGroupsController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "groupName"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "statusFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive",
                  "Paused",
                  "Error"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agent-groups/{groupId}": {
      "get": {
        "operationId": "AgentGroupsController_getGroup",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "AgentGroupsController_putGroup",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "AgentGroupsController_deleteGroup",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agent-groups": {
      "get": {
        "operationId": "AgentGroupsController_getAllGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "AgentGroupsController_postGroup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostGroupRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/agent-groups/{groupId}/agents": {
      "get": {
        "operationId": "AgentGroupsController_getGroupAgents",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "agent-groups"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/activity/all": {
      "get": {
        "operationId": "ActivityEnvironmentController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "activityDescription",
                "userEmail",
                "createdAt",
                "activityDescription",
                "userEmail",
                "environmentName",
                "entityType",
                "activityType",
                "updatedAt",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "entityType",
            "in": "query",
            "schema": {
              "enum": [
                "fid",
                "brainwave",
                "observability",
                "agent",
                "agent-group",
                "AlertInformation",
                "User",
                "Environment",
                "EnvironmentBackupEntry",
                "UserEnvironmentRole",
                "Environment-app",
                "Integrations",
                "System_settings",
                "tenants",
                "Other"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "activityType",
            "in": "query",
            "schema": {
              "enum": [
                "CREATE",
                "UPDATE",
                "DELETE",
                "LOGIN",
                "LOGOUT",
                "DOWNLOAD",
                "RESTORE"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "entityTypeFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fid",
                  "brainwave",
                  "observability",
                  "agent",
                  "agent-group",
                  "AlertInformation",
                  "User",
                  "Environment",
                  "EnvironmentBackupEntry",
                  "UserEnvironmentRole",
                  "Environment-app",
                  "Integrations",
                  "System_settings",
                  "tenants",
                  "Other"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "activityTypeFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CREATE",
                  "UPDATE",
                  "DELETE",
                  "LOGIN",
                  "LOGOUT",
                  "DOWNLOAD",
                  "RESTORE"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "statusFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "FAILED",
                  "COMPLETED",
                  "STARTED",
                  "IN PROGRESS",
                  "TIMEOUT",
                  "CANCELLED",
                  "CANCELING"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/activity/user-environments": {
      "get": {
        "operationId": "ActivityEnvironmentController_getLogsByUserEnvironments",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "activityDescription",
                "userEmail",
                "createdAt",
                "activityDescription",
                "userEmail",
                "environmentName",
                "entityType",
                "activityType",
                "updatedAt",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "fid",
                "brainwave",
                "observability",
                "agent",
                "agent-group",
                "AlertInformation",
                "User",
                "Environment",
                "EnvironmentBackupEntry",
                "UserEnvironmentRole",
                "Environment-app",
                "Integrations",
                "System_settings",
                "tenants",
                "Other"
              ],
              "type": "string"
            }
          },
          {
            "name": "activityType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "CREATE",
                "UPDATE",
                "DELETE",
                "LOGIN",
                "LOGOUT",
                "DOWNLOAD",
                "RESTORE"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityTypeFilters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fid",
                  "brainwave",
                  "observability",
                  "agent",
                  "agent-group",
                  "AlertInformation",
                  "User",
                  "Environment",
                  "EnvironmentBackupEntry",
                  "UserEnvironmentRole",
                  "Environment-app",
                  "Integrations",
                  "System_settings",
                  "tenants",
                  "Other"
                ]
              }
            }
          },
          {
            "name": "activityTypeFilters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CREATE",
                  "UPDATE",
                  "DELETE",
                  "LOGIN",
                  "LOGOUT",
                  "DOWNLOAD",
                  "RESTORE"
                ]
              }
            }
          },
          {
            "name": "statusFilters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "FAILED",
                  "COMPLETED",
                  "STARTED",
                  "IN PROGRESS",
                  "TIMEOUT",
                  "CANCELLED",
                  "CANCELING"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/activity/{environmentId}": {
      "get": {
        "operationId": "ActivityEnvironmentController_getLogsByEnvironmentId",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "activityDescription",
                "userEmail",
                "createdAt",
                "activityDescription",
                "userEmail",
                "environmentName",
                "entityType",
                "activityType",
                "updatedAt",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "fid",
                "brainwave"
              ],
              "type": "string"
            }
          },
          {
            "name": "activityType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "CREATE",
                "UPDATE",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityTypeFilters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fid",
                  "brainwave",
                  "observability",
                  "agent",
                  "agent-group",
                  "AlertInformation",
                  "User",
                  "Environment",
                  "EnvironmentBackupEntry",
                  "UserEnvironmentRole",
                  "Environment-app",
                  "Integrations",
                  "System_settings",
                  "tenants",
                  "Other"
                ]
              }
            }
          },
          {
            "name": "activityTypeFilters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CREATE",
                  "UPDATE",
                  "DELETE",
                  "LOGIN",
                  "LOGOUT",
                  "DOWNLOAD",
                  "RESTORE"
                ]
              }
            }
          },
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/summary": {
      "get": {
        "operationId": "EnvironmentSummaryController_getSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentsSummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/filter": {
      "get": {
        "operationId": "EnvironmentFilterController_filterEnvironment",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "default": "Inactive",
              "enum": [
                "Green",
                "Yellow",
                "Red",
                "Creating",
                "Deleting",
                "Failed",
                "Inactive",
                "Offline",
                "Stopping environment",
                "Starting environment",
                "Restarting environment",
                "Creating environment backup",
                "Restoring environment backup",
                "Deleting environment backup",
                "Changing environment endpoints",
                "Restarting Application Endpoints"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments": {
      "get": {
        "operationId": "EnvironmentController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "name",
                "type",
                "createdAt",
                "updatedAt"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "applicationFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "empty",
                  "ida",
                  "iddm",
                  "ido"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "environmentTypeFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NonProduction",
                  "Production"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "appStatusFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Operational",
                  "Warning",
                  "Critical",
                  "Creating",
                  "Deleting",
                  "Failed",
                  "Inactive",
                  "Offline",
                  "Stopping Application",
                  "Starting Application",
                  "Restarting Application",
                  "Creating Application Backup",
                  "Restoring Application Backup",
                  "Deleting Application Backup",
                  "Changing Application Endpoints",
                  "Restarting Application Endpoints",
                  "Enabling application REST endpoint",
                  "Enabling application LDAPS endpoint",
                  "Enabling application Control Panel endpoint",
                  "Enabling application Control Panel UI endpoint",
                  "Enabling application API endpoint",
                  "Deleting application REST endpoint",
                  "Deleting application LDAPS endpoint",
                  "Deleting application Control Panel endpoint",
                  "Deleting application Control Panel UI endpoint",
                  "Deleting application API endpoint",
                  "Updating application version",
                  "Updating application backup settings",
                  "Scaling application"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "envFavFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "favorites",
                  "nonFavorites"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "selectedUsers",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "array"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "EnvironmentController_postEnvironment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnvironmentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/tiers": {
      "get": {
        "operationId": "EnvironmentController_getEnvironmentTiers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentTierDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/tier": {
      "get": {
        "operationId": "EnvironmentController_getEnvironmentTier",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentTierDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/types": {
      "get": {
        "operationId": "EnvironmentController_getEnvironmentTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}": {
      "get": {
        "operationId": "EnvironmentController_getEnvironmentById",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentWithAppsViewDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "EnvironmentController_patchEnvironment",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEnvironmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "EnvironmentController_deleteEnvironmentById",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "403": {
            "description": "The authenticated user does not have the necessary permissions to delete the environment"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/status": {
      "get": {
        "operationId": "EnvironmentController_getEnvironmentStatus",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentStatusDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/statuses": {
      "post": {
        "operationId": "EnvironmentController_getEnvironmentsStatuses",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentIdStatusDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/job-status/{jobId}": {
      "get": {
        "operationId": "EnvironmentController_getJobStatus",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentJobDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/jobs": {
      "get": {
        "operationId": "EnvironmentController_getJobsByEnvironmentId",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentJob"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentAppId}/stop": {
      "post": {
        "operationId": "EnvironmentController_stopEnvironment",
        "parameters": [
          {
            "name": "environmentAppId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentAppId}/start": {
      "post": {
        "operationId": "EnvironmentController_startEnvironment",
        "parameters": [
          {
            "name": "environmentAppId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentAppId}/restart": {
      "post": {
        "operationId": "EnvironmentController_restartEnvironment",
        "parameters": [
          {
            "name": "environmentAppId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/start-all": {
      "post": {
        "operationId": "EnvironmentController_startAllApplications",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/stop-all": {
      "post": {
        "operationId": "EnvironmentController_stopAllApplications",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/{environmentId}/restart-all": {
      "post": {
        "operationId": "EnvironmentController_restartAllApplications",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/monitoringJwt/{environmentId}": {
      "get": {
        "operationId": "EnvironmentController_getGrafanaJwt",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/auth/oidc/{name}": {
      "get": {
        "operationId": "AuthController_oidcAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/oidc/{name}/callback": {
      "get": {
        "operationId": "AuthController_oidcAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/google": {
      "get": {
        "operationId": "AuthController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/github": {
      "get": {
        "operationId": "AuthController_githubAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/github/callback": {
      "get": {
        "operationId": "AuthController_githubAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/microsoft": {
      "get": {
        "operationId": "AuthController_microsoftAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/microsoft/callback": {
      "get": {
        "operationId": "AuthController_microsoftAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/local": {
      "post": {
        "operationId": "AuthController_localLogin",
        "parameters": [
          {
            "name": "return_url",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPasswordByUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendResetPassword"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/forgot-password/{sessionId}": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_url",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/2fa/{sessionId}": {
      "get": {
        "operationId": "AuthController_checkIfTOTPIsConfigured",
        "parameters": [
          {
            "name": "sessionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "returnUrl",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "returnUrlError",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rememberMfa",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/eoc-backend/auth/2fa/{userId}/reset": {
      "post": {
        "operationId": "AuthController_resetMFA",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/auth/logout": {
      "get": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers": {
      "get": {
        "operationId": "OidcProvidersController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "name"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ]
      },
      "post": {
        "operationId": "OidcProvidersController_createAsync",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OidcProviderCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidcProviderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/all": {
      "get": {
        "operationId": "OidcProvidersController_getAllAsync",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OidcProviderDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/enabled": {
      "get": {
        "operationId": "OidcProvidersController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OidcProviderDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ]
      }
    },
    "/eoc-backend/oidc-providers/id/{id}": {
      "get": {
        "operationId": "OidcProvidersController_getByIdAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidcProviderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/name/{name}": {
      "get": {
        "operationId": "OidcProvidersController_getByNameAsync",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidcProviderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/{id}": {
      "patch": {
        "operationId": "OidcProvidersController_updateAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OidcProviderUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OidcProviderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "OidcProvidersController_deleteByIdAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/discover/{url}": {
      "get": {
        "operationId": "OidcProvidersController_discover",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveredProviderDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/oidc-providers/templates": {
      "get": {
        "operationId": "OidcProvidersController_getTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OidcTemplateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "oidc-providers"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints/templates": {
      "get": {
        "operationId": "EndpointsController_getTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointTemplateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints": {
      "post": {
        "operationId": "EndpointsController_createEndpoint",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEndpointDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints/{environmentAppId}": {
      "get": {
        "operationId": "EndpointsController_getAllByEnvironmentAppId",
        "parameters": [
          {
            "name": "environmentAppId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints/{id}/status/{status}": {
      "post": {
        "operationId": "EndpointsController_setEndpointStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints/app/{id}/restart": {
      "post": {
        "operationId": "EndpointsController_restartEndpoints",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/endpoints/{id}/status": {
      "get": {
        "operationId": "EndpointsController_getEndpointsStatusByAppId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/app-templates": {
      "get": {
        "operationId": "EnvironmentAppTemplateController_getAllTemplatesAsync",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentAppTemplateDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ]
      }
    },
    "/eoc-backend/environments/app-templates/{name}": {
      "get": {
        "operationId": "EnvironmentAppTemplateController_getTemplateByNameAsync",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAppTemplateDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ]
      }
    },
    "/eoc-backend/environments/apps/nodeLimits": {
      "get": {
        "operationId": "EnvironmentAppController_getNodeLimitsAggregate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAppNodeLimitsAggregateDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/{environmentId}": {
      "get": {
        "operationId": "EnvironmentAppController_getEnvironmentAppsAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentAppDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "EnvironmentAppController_createEnvironmentAppAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnvironmentAppRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/{environmentId}/{appId}": {
      "patch": {
        "operationId": "EnvironmentAppController_patchEnvironmentAppAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEnvironmentAppRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAppDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "EnvironmentAppController_deleteEnvironmentAppAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": "The resource has been successfully deleted"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/{environmentId}/{appId}/scale": {
      "patch": {
        "operationId": "EnvironmentAppController_scaleEnvironmentAppAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleEnvironmentAppRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAppDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/{environmentId}/{appId}/change-password": {
      "post": {
        "operationId": "EnvironmentAppController_changeEnvironmentAppPasswordAsync",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEnvironmentAppPasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAppDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/{appId}/download-logs": {
      "get": {
        "operationId": "EnvironmentAppController_downloadLogs",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date in MM_dd_yyyy_HH_mm_ss format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date in MM_dd_yyyy_HH_mm_ss format",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/versionHistory/{appId}": {
      "get": {
        "operationId": "EnvironmentAppController_getVersionHistoryForAppAsync",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentAppVersionHistoryEntryDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/versionUpdates/{appId}": {
      "get": {
        "operationId": "EnvironmentAppController_getVersionUpdatesForAppAsync",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentAppVersionUpdate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/statuses/summary": {
      "get": {
        "operationId": "EnvironmentAppStatusController_getAppStatusesSummaryAsync",
        "parameters": [
          {
            "name": "env",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refresh",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentsSummaryDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/apps/ids/statuses": {
      "get": {
        "operationId": "EnvironmentAppStatusController_getAppStatuseseAsync",
        "parameters": [
          {
            "name": "appIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "refresh",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentAppIdStatusDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/convert-cron": {
      "get": {
        "operationId": "EnvironmentBackupController_convertScheduleToCron",
        "parameters": [
          {
            "name": "frequency",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ],
              "type": "string"
            }
          },
          {
            "name": "every",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "2 hours",
                "4 hours",
                "6 hours",
                "8 hours",
                "12 hours",
                "24 hours",
                "2 days",
                "3 days",
                "4 days",
                "5 days",
                "1 week"
              ],
              "type": "string"
            }
          },
          {
            "name": "startDay",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
              ],
              "type": "string"
            }
          },
          {
            "name": "startHours",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16",
                "17",
                "18",
                "19",
                "20",
                "21",
                "22",
                "23"
              ],
              "type": "string"
            }
          },
          {
            "name": "startMinutes",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "0",
                "15",
                "30",
                "45"
              ],
              "type": "string"
            }
          },
          {
            "name": "currentTimeZone",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertScheduleToCronResponse"
                }
              }
            }
          },
          "204": {
            "description": "The resource was deleted successfully"
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "403": {
            "description": "The authenticated user does not have the necessary permissions to backup the environment"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}": {
      "post": {
        "operationId": "EnvironmentBackupController_backupEnvironmentById",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentBackupRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "operationId": "EnvironmentBackupController_getEnvironmentBackupsByEnvironmentAppId",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "createdAt",
                "backupKey",
                "size",
                "version"
              ],
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}/{backupFileName}/restore": {
      "patch": {
        "operationId": "EnvironmentBackupController_backupRestoreEnvironmentById",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupFileName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}/{backupFileName}/fileName": {
      "get": {
        "operationId": "EnvironmentBackupController_getBackupFileNameAvailability",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupFileName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SingleS3ObjectResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}/{backupFileName}/download": {
      "get": {
        "operationId": "EnvironmentBackupController_getAppBackupByName",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupFileName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}/{backupFileName}": {
      "delete": {
        "operationId": "EnvironmentBackupController_deleteEnvironmentBackupByFileName",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupFileName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/environments/backups/{appId}/settings": {
      "post": {
        "operationId": "EnvironmentBackupController_updateEnvironmentBackupSettings",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnvironmentBackupSettingsRequestDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": ""
          },
          "400": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "environments"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations": {
      "get": {
        "operationId": "LogIntegrationController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "name",
                "templateName"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "LogIntegrationController_postIntegration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLogIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/{integrationId}": {
      "delete": {
        "operationId": "LogIntegrationController_deleteIntegrationById",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "LogIntegrationController_patchIntegrationById",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLogIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/{integrationName}/usage": {
      "get": {
        "operationId": "LogIntegrationController_getIntegrationUsage",
        "parameters": [
          {
            "name": "integrationName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/test-connection": {
      "post": {
        "operationId": "LogIntegrationController_testIntegrationConnection",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLogIntegrationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/user/{userId}": {
      "get": {
        "operationId": "LogIntegrationController_getIntegrationsByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogIntegrationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/templates": {
      "get": {
        "operationId": "LogIntegrationTemplateController_getIntegrationTemplates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogIntegrationTemplateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/log-integrations/templates/{templateId}": {
      "get": {
        "operationId": "LogIntegrationTemplateController_getIntegrationTemplateById",
        "parameters": [
          {
            "name": "templateId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogIntegrationTemplateDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "log-integrations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/clusters": {
      "get": {
        "operationId": "ClustersController_getAllAsync",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "clusters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "ClustersController_createAsync",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "clusters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/clusters/{id}": {
      "get": {
        "operationId": "ClustersController_getByIdAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "clusters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "ClustersController_updateAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchClusterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "clusters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "ClustersController_deleteByIdAsync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "clusters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          },
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status": {
      "get": {
        "operationId": "TaskStatusController_searchAllAsync",
        "parameters": [
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 50,
              "default": 50,
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderBy",
            "in": "query",
            "schema": {
              "enum": [
                "environmentName",
                "applicationName",
                "applicationType",
                "status",
                "startAt",
                "endAt"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "orderDirection",
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "applicationFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fid",
                  "brainwave",
                  "observability",
                  "empty"
                ]
              }
            }
          },
          {
            "required": false,
            "name": "statusFilters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "RUNNING",
                  "TIMEOUT",
                  "FAILED",
                  "FINISHED",
                  "CANCELLED",
                  "CANCELING"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/actions": {
      "get": {
        "operationId": "TaskStatusController_getTaskActionsById",
        "parameters": [
          {
            "name": "taskStatusId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatusActionsAggregateDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/environments": {
      "get": {
        "operationId": "TaskStatusController_getEnvironmentsStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatusDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/environment/{environmentId}": {
      "get": {
        "operationId": "TaskStatusController_getEnvironmentStatus",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/applications": {
      "get": {
        "operationId": "TaskStatusController_getApplicationsStatus",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatusDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/application/{applicationId}": {
      "get": {
        "operationId": "TaskStatusController_getApplicationStatus",
        "parameters": [
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/environment-apps/{environmentId}": {
      "get": {
        "operationId": "TaskStatusController_getEnvironmentAppsStatus",
        "parameters": [
          {
            "name": "environmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatusDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/restart-task/{taskId}": {
      "post": {
        "operationId": "TaskStatusController_restartTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/cancel-task/{taskId}": {
      "post": {
        "operationId": "TaskStatusController_cancelTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/view-logs/{taskId}": {
      "get": {
        "operationId": "TaskStatusController_viewLogs",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allLogs",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/task-status/progressing-tasks": {
      "get": {
        "operationId": "TaskStatusController_getProgressingTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatus"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "task-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/eoc-backend/health/servicesStatus": {
      "get": {
        "operationId": "HealthController_serviceHealthCheck",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/eoc-backend/name-availability/environments": {
      "get": {
        "operationId": "EnvironmentNameAvailabilityController_getIsEnvironmentNameAvailable",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameAvailabilityResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "name-availability"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/name-availability/environments/reserved-names": {
      "get": {
        "operationId": "EnvironmentNameAvailabilityController_getReservedEnvironmentNames",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "name-availability"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/scheduled-maintenance": {
      "get": {
        "operationId": "ScheduledMaintenanceController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduledMaintenanceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "ScheduledMaintenanceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledMaintenanceCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledMaintenanceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/scheduled-maintenance/{id}": {
      "get": {
        "operationId": "ScheduledMaintenanceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledMaintenanceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "ScheduledMaintenanceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledMaintenanceUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledMaintenanceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "ScheduledMaintenanceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/scheduled-maintenance/sync": {
      "post": {
        "operationId": "ScheduledMaintenanceController_sync",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "scheduled-maintenance"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/tenants": {
      "get": {
        "operationId": "TenantController_getTenants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "TenantController_postTenant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/tenants/testConnection": {
      "get": {
        "operationId": "TenantController_testTenantConnection",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/tenants/all": {
      "get": {
        "operationId": "TenantController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/tenants/{id}": {
      "get": {
        "operationId": "TenantController_getTenantById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "TenantController_deleteTenantById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource has been successfully deleted"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "404": {
            "description": "The resource was not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "TenantController_patchTenant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantDto"
                }
              }
            }
          },
          "201": {
            "description": "The resource has been successfully created"
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "tenants"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/eoc-kibana/index-patterns": {
      "get": {
        "operationId": "KibanaController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KibanaIndexPatternDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "eoc-kibana"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/version": {
      "get": {
        "operationId": "EocVersionController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "version"
        ]
      }
    },
    "/eoc-backend/widgets": {
      "get": {
        "operationId": "WidgetController_getWidgets",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "widgets"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/internal-services-status": {
      "get": {
        "operationId": "InternalServicesStatusController_getStatuses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceStatusDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "internal-services-status"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/services/logs": {
      "get": {
        "operationId": "ArgocdServicesManagementController_fetchLogs",
        "parameters": [
          {
            "name": "namespace",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "container",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "follow",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tailLines",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sinceSeconds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kind",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "untilTime",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/services/containers": {
      "get": {
        "operationId": "ArgocdServicesManagementController_fetchContainers",
        "parameters": [
          {
            "name": "namespace",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kind",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/services/restart": {
      "post": {
        "operationId": "ArgocdServicesManagementController_restartService",
        "parameters": [
          {
            "name": "namespace",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kind",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceName",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "services"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/ip-whitelist/app/{id}/sync": {
      "post": {
        "operationId": "IpWhitelistController_sync",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpWhitelistRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "ip-whitelist"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/ip-whitelist/app/{id}": {
      "get": {
        "operationId": "IpWhitelistController_findAll",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IpWhitelist"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "ip-whitelist"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/ip-whitelist/app/{id}/enable": {
      "patch": {
        "operationId": "IpWhitelistController_enableWhitelist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "ip-whitelist"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/ip-whitelist/app/{id}/disable": {
      "patch": {
        "operationId": "IpWhitelistController_disableWhitelist",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthenticated request (JWT was not present in the Authorization header)"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "ip-whitelist"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "api_key": []
          }
        ]
      }
    },
    "/eoc-backend/user-notifications": {
      "post": {
        "operationId": "UserNotificationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      },
      "get": {
        "operationId": "UserNotificationsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserNotificationDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      }
    },
    "/eoc-backend/user-notifications/{userId}/in_app/pending": {
      "get": {
        "operationId": "UserNotificationsController_getLatestInAppPendingNotification",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserNotificationDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      }
    },
    "/eoc-backend/user-notifications/{userId}": {
      "get": {
        "operationId": "UserNotificationsController_findByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserNotificationDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      },
      "patch": {
        "operationId": "UserNotificationsController_bulkAcknowledge",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAcknowledgmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      }
    },
    "/eoc-backend/user-notifications/{id}": {
      "delete": {
        "operationId": "UserNotificationsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      }
    },
    "/eoc-backend/user-notifications/sendNotification": {
      "post": {
        "operationId": "UserNotificationsController_sendNotification",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "You don't have the required role to perform this operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "user-notifications"
        ]
      }
    },
    "/eoc-backend/user-favorite-environment": {
      "get": {
        "operationId": "UserFavoriteEnvironmentController_isFavorited",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "Unique ID of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentId",
            "required": true,
            "in": "query",
            "description": "Unique ID of the environment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns true if the environment is favorited."
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "The resource was not found"
          }
        },
        "tags": [
          "User Favorite Environment"
        ]
      },
      "post": {
        "operationId": "UserFavoriteEnvironmentController_createFavorite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFavoriteEnvironmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Environment marked as favorite."
          },
          "400": {
            "description": "Invalid request data"
          }
        },
        "tags": [
          "User Favorite Environment"
        ]
      },
      "delete": {
        "operationId": "UserFavoriteEnvironmentController_removeFavorite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFavoriteEnvironmentDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Environment removed from favorites."
          },
          "400": {
            "description": "Invalid request data"
          }
        },
        "tags": [
          "User Favorite Environment"
        ]
      },
      "patch": {
        "operationId": "UserFavoriteEnvironmentController_updateFavorite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFavoriteEnvironmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Favorite Environments Updated."
          },
          "400": {
            "description": "Invalid request data"
          }
        },
        "tags": [
          "User Favorite Environment"
        ]
      }
    },
    "/eoc-backend/user-favorite-environment/{userId}": {
      "get": {
        "operationId": "UserFavoriteEnvironmentController_getFavoritesByUserId",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all favorite environments for a user."
          },
          "400": {
            "description": "Invalid request data"
          },
          "404": {
            "description": "The resource was not found"
          }
        },
        "tags": [
          "User Favorite Environment"
        ]
      }
    }
  },
  "info": {
    "title": "RadiantLogic CloudManager",
    "description": "",
    "version": "1.3.2",
    "contact": {}
  },
  "tags": [
    {
      "name": "version",
      "description": ""
    },
    {
      "name": "scheduled-maintenance",
      "description": ""
    },
    {
      "name": "users",
      "description": ""
    },
    {
      "name": "environments",
      "description": ""
    },
    {
      "name": "user-environment-roles",
      "description": ""
    },
    {
      "name": "app-images",
      "description": ""
    },
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "user-token",
      "description": ""
    },
    {
      "name": "user-notifications",
      "description": ""
    },
    {
      "name": "metrics",
      "description": "Used by prometheus for scraping"
    },
    {
      "name": "alerts",
      "description": "Used by grafana to post alerts"
    },
    {
      "name": "task-status",
      "description": ""
    },
    {
      "name": "ip-whitelist",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "jwt",
        "name": "jwt",
        "type": "http",
        "description": "Open a new window pointing to /auth/google or /auth/github, complete the OAuth flow, then paste the token in the field below"
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "api-key",
        "description": "Auth with an api key generated by user."
      },
      "cookie": {
        "type": "http",
        "in": "cookie",
        "name": "cookie",
        "scheme": "bearer",
        "bearerFormat": "jwt",
        "description": "Open a new window pointing to /auth/google or /auth/github, complete the OAuth flow, then the cookie will be set on the current domain, and the requests will be automatically authorized"
      }
    },
    "schemas": {
      "SystemSettingsDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "value"
        ]
      },
      "CronJobDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the cron job"
          },
          "cronTime": {
            "type": "string",
            "description": "Cron schedule expression for the job (e.g., \"0 * * * *\")"
          },
          "lastExecutionServerTime": {
            "type": "string",
            "nullable": true,
            "description": "Last execution time of the cron job in the server timezone"
          },
          "nextExecutionServerTime": {
            "type": "string",
            "description": "Next execution time of the cron job in the server timezone"
          },
          "isRunning": {
            "type": "boolean",
            "description": "Whether the cron job is currently running"
          }
        },
        "required": [
          "name",
          "cronTime",
          "lastExecutionServerTime",
          "nextExecutionServerTime",
          "isRunning"
        ]
      },
      "SchedulerDetailsDto": {
        "type": "object",
        "properties": {
          "cronJobs": {
            "description": "List of registered cron jobs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CronJobDto"
            }
          },
          "serverTimezone": {
            "type": "string",
            "description": "Server timezone in IANA format (e.g., \"Europe/London\")"
          }
        },
        "required": [
          "cronJobs",
          "serverTimezone"
        ]
      },
      "AutomaticUpdateCheckValue": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "at": {
            "type": "string",
            "pattern": "/^[0-9]{2,2}:[0-9]{2,2}$/",
            "default": "00:00"
          }
        },
        "required": [
          "enabled",
          "at"
        ]
      },
      "ScheduledMaintenanceAutoUpdate": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "everyHourNumber": {
            "type": "number",
            "default": 1
          }
        },
        "required": [
          "enabled",
          "everyHourNumber"
        ]
      },
      "UserNotificationAutoUpdate": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "everyHourNumber": {
            "type": "number",
            "default": 1
          }
        },
        "required": [
          "enabled",
          "everyHourNumber"
        ]
      },
      "UpdateSettingDto": {
        "type": "object",
        "properties": {
          "releaseChannels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scheduledMaintenanceEmailIntegrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "update": {
            "$ref": "#/components/schemas/AutomaticUpdateCheckValue"
          },
          "scheduledMaintenanceExecutionConfig": {
            "$ref": "#/components/schemas/ScheduledMaintenanceAutoUpdate"
          },
          "userNotificationExecutionConfig": {
            "$ref": "#/components/schemas/UserNotificationAutoUpdate"
          },
          "maintenancesActions": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "releaseChannels",
          "scheduledMaintenanceEmailIntegrations",
          "update",
          "scheduledMaintenanceExecutionConfig",
          "userNotificationExecutionConfig",
          "maintenancesActions"
        ]
      },
      "UpdateCronJobDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the cron job to update",
            "example": "syncAppImages"
          },
          "action": {
            "type": "string",
            "enum": [
              "start",
              "stop",
              "delete"
            ],
            "description": "The action to perform on the cron job (start, top or delete)",
            "example": "start"
          },
          "cronExpression": {
            "type": "string",
            "description": "The new cron expression (if updating the schedule)",
            "example": "0 12 * * *",
            "pattern": "Valid cron expression pattern"
          }
        },
        "required": [
          "name"
        ]
      },
      "ReleaseChannelDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "isDefault"
        ]
      },
      "AppImageDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ],
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "actualAppVersion": {
            "type": "string"
          },
          "helmChartVersion": {
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "releaseChannel": {
            "$ref": "#/components/schemas/ReleaseChannelDto"
          },
          "releaseChannelId": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "raw": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "appVersion",
          "helmChartVersion",
          "created",
          "releaseChannel",
          "releaseChannelId",
          "isEnabled",
          "raw"
        ]
      },
      "IntegrationFieldInstance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "CreateIntegrationRequestDto": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationFieldInstance"
            }
          }
        },
        "required": [
          "templateId",
          "name",
          "fieldInstances"
        ]
      },
      "PatchIntegrationRequestDto": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationFieldInstance"
            }
          }
        }
      },
      "IntegrationDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationFieldInstance"
            }
          },
          "createdById": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "templateId",
          "name",
          "fieldInstances",
          "createdById",
          "templateName",
          "isDefault"
        ]
      },
      "IntegrationTemplateFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isOptional": {
            "type": "boolean"
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "label",
          "type"
        ]
      },
      "IntegrationTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "fieldTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationTemplateFieldDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "icon",
          "fieldTemplates"
        ]
      },
      "AlertApplicationViewDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "alertName": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "alertPredicateId": {
            "type": "string"
          },
          "channel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "severity": {
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "resolved": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "statistic": {
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ],
            "type": "string"
          },
          "condition": {
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ],
            "type": "string"
          },
          "threshold": {
            "type": "number"
          },
          "duration": {
            "type": "string"
          },
          "alertInformationId": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "alertName",
          "environmentId",
          "applicationId",
          "alertPredicateId",
          "channel",
          "severity",
          "description",
          "resolved",
          "status",
          "metric",
          "statistic",
          "condition",
          "threshold",
          "duration",
          "alertInformationId"
        ]
      },
      "LabelDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "condition": {
            "type": "string",
            "enum": [
              "=",
              "!=",
              "=~",
              "!~"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "condition",
          "value"
        ]
      },
      "CreateAlertPredicateRequestDto": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "pattern": "/^[0-9]+[smh]$/",
            "example": "<number>{s/m/h}"
          },
          "metric": {
            "type": "string"
          },
          "statistic": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ]
          },
          "condition": {
            "type": "string",
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelDto"
            }
          }
        },
        "required": [
          "duration",
          "metric",
          "statistic",
          "condition",
          "threshold"
        ]
      },
      "AlertInformationRequestDto": {
        "type": "object",
        "properties": {
          "alertName": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "integrationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "alertMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateAlertPredicateRequestDto"
            }
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "alertName",
          "severity",
          "title",
          "description",
          "environmentId",
          "applicationId",
          "integrationIds",
          "alertMetrics",
          "serviceName",
          "serviceId"
        ]
      },
      "AlertPredicateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "statistic": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ]
          },
          "condition": {
            "type": "string",
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "duration": {
            "type": "string"
          },
          "alertInformationId": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "metric",
          "statistic",
          "condition",
          "threshold",
          "duration",
          "alertInformationId"
        ]
      },
      "AlertInformationDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "alertName": {
            "type": "string"
          },
          "severity": {
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "integrationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdById": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "alertMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertPredicateDto"
            }
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "alertName",
          "severity",
          "title",
          "description",
          "environmentId",
          "applicationId",
          "integrationIds",
          "createdById",
          "isDefault",
          "alertMetrics",
          "serviceName",
          "serviceId"
        ]
      },
      "UserEnvironmentRole": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "env:user",
              "env:admin"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "environmentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "role",
          "userId",
          "environmentId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UserToken": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "token",
          "creatorId",
          "creator",
          "expirationDate",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "IntegrationFieldTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "object"
          },
          "isOptional": {
            "type": "boolean"
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "name",
          "label",
          "type"
        ]
      },
      "IntegrationTemplateEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "fieldTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationFieldTemplate"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "fieldTemplates",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "IntegrationEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/IntegrationTemplateEntity"
          },
          "createdById": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "templateId": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationFieldInstance"
            }
          },
          "isDefault": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "template",
          "createdById",
          "templateId",
          "fieldInstances",
          "isDefault",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "LogIntegrationFieldTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "object"
          },
          "isOptional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "label",
          "type"
        ]
      },
      "LogIntegrationTemplateEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "fieldTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationFieldTemplate"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "type",
          "fieldTemplates",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "LogIntegrationFieldInstance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "LogIntegrationEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/LogIntegrationTemplateEntity"
          },
          "createdById": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "templateId": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationFieldInstance"
            }
          },
          "isDefault": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "template",
          "createdById",
          "templateId",
          "fieldInstances",
          "isDefault",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "EnvironmentAppTemplateDependency": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/EnvironmentAppTemplate"
          },
          "templateName": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          },
          "dependency": {
            "$ref": "#/components/schemas/EnvironmentAppTemplate"
          },
          "dependencyName": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          }
        },
        "required": [
          "templateName",
          "dependencyName"
        ]
      },
      "EnvironmentAppTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          },
          "label": {
            "type": "string"
          },
          "multiInstance": {
            "type": "boolean"
          },
          "fields": {
            "type": "object"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentAppTemplateDependency"
            }
          },
          "dependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentAppTemplateDependency"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "label",
          "multiInstance",
          "fields",
          "dependencies",
          "dependents",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "ReleaseChannel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "url",
          "isDefault",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AppImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          },
          "appVersion": {
            "type": "string"
          },
          "helmChartVersion": {
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "raw": {
            "type": "object"
          },
          "releaseChannelId": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "releaseChannel": {
            "$ref": "#/components/schemas/ReleaseChannel"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "appVersion",
          "helmChartVersion",
          "created",
          "releaseChannelId",
          "isEnabled",
          "releaseChannel",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "BackupSettings": {
        "type": "object",
        "properties": {}
      },
      "LogConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "aggregators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "retention_days": {
            "type": "number"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "path",
          "index",
          "enabled",
          "aggregators",
          "retention_days"
        ]
      },
      "EnvironmentApp": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          },
          "template": {
            "$ref": "#/components/schemas/EnvironmentAppTemplate"
          },
          "environmentId": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "appImageId": {
            "type": "string"
          },
          "appImage": {
            "$ref": "#/components/schemas/AppImage"
          },
          "fields": {
            "type": "object"
          },
          "meta": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "backupSettings": {
            "$ref": "#/components/schemas/BackupSettings"
          },
          "isWhitelistActive": {
            "type": "boolean"
          },
          "logsettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogConfig"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "templateName",
          "template",
          "environmentId",
          "environment",
          "appImageId",
          "appImage",
          "fields",
          "meta",
          "backupSettings",
          "isWhitelistActive",
          "logsettings",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AlertIntegrations": {
        "type": "object",
        "properties": {
          "integrationId": {
            "type": "string"
          },
          "alertId": {
            "type": "string"
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationEntity"
          },
          "alert": {
            "$ref": "#/components/schemas/AlertInformation"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "integrationId",
          "alertId",
          "integration",
          "alert",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AlertLabel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "alertPredicate": {
            "$ref": "#/components/schemas/AlertPredicate"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "key",
          "condition",
          "value",
          "alertPredicate",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AlertPredicate": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "statistic": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ]
          },
          "condition": {
            "type": "string",
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ]
          },
          "title": {
            "type": "string"
          },
          "threshold": {
            "type": "number"
          },
          "duration": {
            "type": "string"
          },
          "alertInformationId": {
            "type": "string"
          },
          "grafanaId": {
            "type": "string"
          },
          "alertInformation": {
            "$ref": "#/components/schemas/AlertInformation"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertLabel"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "metric",
          "statistic",
          "condition",
          "title",
          "threshold",
          "duration",
          "alertInformationId",
          "grafanaId",
          "labels",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AlertInformation": {
        "type": "object",
        "properties": {
          "alertName": {
            "type": "string"
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/EnvironmentApp"
          },
          "alertIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertIntegrations"
            }
          },
          "severity": {
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdById": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "alertMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertPredicate"
            }
          },
          "isDefault": {
            "type": "boolean"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "alertName",
          "environmentId",
          "applicationId",
          "alertIntegrations",
          "severity",
          "title",
          "description",
          "createdById",
          "isDefault",
          "serviceName",
          "serviceId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "QuickLinks": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "linkPath": {
            "type": "string"
          },
          "headerImageType": {
            "type": "string"
          },
          "textOverlay": {
            "type": "string"
          },
          "isLogoSelected": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "number"
          },
          "isSystemDefault": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "title",
          "description",
          "linkPath",
          "headerImageType",
          "textOverlay",
          "isLogoSelected",
          "isDefault",
          "isSystemDefault",
          "userId",
          "users",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UserFavoriteEnvironment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isFavorited": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "isFavorited",
          "user",
          "environment",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "UserNotifications": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "content": {
            "type": "object"
          },
          "deliveryMethod": {
            "type": "string",
            "enum": [
              "email",
              "sms",
              "push",
              "in_app"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "sent",
              "read",
              "failed"
            ]
          },
          "severity": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ]
          },
          "scheduleTime": {
            "format": "date-time",
            "type": "string"
          },
          "acknowledgedAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "internalId",
          "userId",
          "category",
          "content",
          "deliveryMethod",
          "status",
          "severity",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean"
          },
          "environmentCreator": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Environment"
            }
          },
          "userEnvironmentRoles": {
            "description": "The per-environment specific roles, applied only if the user is not an admin (e.g. a user with the {@link User.admin}\nwill always be able to read/write any environment, regardless of whether such a role is present in this array for\nthe environment in cause)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEnvironmentRole"
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserToken"
            }
          },
          "avatarId": {
            "type": "string",
            "nullable": true
          },
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationEntity"
            }
          },
          "logIntegrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationEntity"
            }
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertInformation"
            }
          },
          "mfaSecret": {
            "type": "string",
            "nullable": true
          },
          "notificationsEmail": {
            "type": "string",
            "nullable": true,
            "description": "If specified, send email notifications to this address instead of the {@link email} field."
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string",
            "description": "The timestamp of the user's last login"
          },
          "password_hash": {
            "type": "string",
            "nullable": true
          },
          "password_salt": {
            "type": "string",
            "nullable": true
          },
          "forceChangePassword": {
            "type": "boolean"
          },
          "receiveAllNotifications": {
            "type": "boolean"
          },
          "isLocal": {
            "type": "boolean"
          },
          "quickLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickLinks"
            }
          },
          "layout": {
            "type": "object"
          },
          "favoriteEnvironments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFavoriteEnvironment"
            }
          },
          "userNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNotifications"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "active",
          "admin",
          "environmentCreator",
          "readOnly",
          "avatarId",
          "mfaSecret",
          "notificationsEmail",
          "lastLogin",
          "password_hash",
          "password_salt",
          "forceChangePassword",
          "receiveAllNotifications",
          "isLocal",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Action": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "doneAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "attempt": {
            "type": "number"
          },
          "startAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "taskStatus": {
            "type": "string",
            "enum": [
              "PENDING",
              "RUNNING",
              "TIMEOUT",
              "FAILED",
              "FINISHED",
              "CANCELLED",
              "CANCELING"
            ]
          },
          "durationMs": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "progress",
          "status",
          "description",
          "doneAt",
          "attempt"
        ]
      },
      "TaskStatus": {
        "type": "object",
        "properties": {
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          },
          "environmentName": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "$ref": "#/components/schemas/EnvironmentApp"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "applicationType": {
            "nullable": true,
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ],
            "type": "string"
          },
          "job": {
            "$ref": "#/components/schemas/EnvironmentJob"
          },
          "jobId": {
            "type": "string"
          },
          "internalJobId": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "startAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "endAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "logs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "environment",
          "environmentId",
          "environmentName",
          "application",
          "applicationId",
          "applicationName",
          "applicationType",
          "job",
          "jobId",
          "internalJobId",
          "jobType",
          "status",
          "progress",
          "description",
          "startAt",
          "endAt",
          "actions",
          "logs",
          "data",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "EnvironmentJob": {
        "type": "object",
        "properties": {
          "creator": {
            "$ref": "#/components/schemas/Environment"
          },
          "environmentId": {
            "type": "string"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStatus"
            }
          },
          "jobType": {
            "enum": [
              "ENVIRONMENT_CREATION",
              "ENVIRONMENT_DELETE",
              "FID_BACKUP_CREATE",
              "FID_BACKUP_RESTORE",
              "FID_UPDATE",
              "FID_CREATION",
              "FID_DELETE",
              "FID_RESTART",
              "FID_START",
              "FID_STOP",
              "FID_ENDPOINTS",
              "FID_ENDPOINTS_RESTART",
              "BW_CREATION",
              "BW_DELETE",
              "BW_BACKUP_CREATE",
              "BW_BACKUP_RESTORE",
              "BW_BACKUP_DELETE",
              "BW_START",
              "BW_STOP",
              "BW_RESTART",
              "BW_UPDATE",
              "IDO_CREATION",
              "IDO_DELETE",
              "IDO_START",
              "IDO_STOP",
              "IDO_RESTART",
              "IDO_UPDATE"
            ],
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "jobConfig": {
            "type": "object"
          },
          "jobStatus": {
            "nullable": true,
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "environmentId",
          "jobType",
          "jobId",
          "jobConfig",
          "jobStatus",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Cluster": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "argocdClusterName": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "EnvironmentTier": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tierConfiguration": {
            "type": "object"
          },
          "isDefault": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "tierConfiguration",
          "isDefault",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "Environment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorUserId": {
            "type": "string"
          },
          "userEnvironmentRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEnvironmentRole"
            }
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentJob"
            }
          },
          "isStopped": {
            "type": "boolean"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentApp"
            }
          },
          "cluster": {
            "$ref": "#/components/schemas/Cluster"
          },
          "clusterId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tier": {
            "$ref": "#/components/schemas/EnvironmentTier"
          },
          "favoriteByUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserFavoriteEnvironment"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "creatorUserId",
          "isStopped",
          "cluster",
          "clusterId",
          "tier",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AlertPredicatePatchDto": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "pattern": "/^[0-9]+[smh]$/",
            "example": "<number>{s/m/h}"
          },
          "grafanaId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "statistic": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ]
          },
          "condition": {
            "type": "string",
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelDto"
            }
          }
        }
      },
      "AlertInformationPatchRequestDto": {
        "type": "object",
        "properties": {
          "alertMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertPredicatePatchDto"
            }
          },
          "alertName": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "integrationIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AlertMetricDto": {
        "type": "object",
        "properties": {
          "metric": {
            "type": "string"
          },
          "statistic": {
            "type": "string",
            "enum": [
              "min",
              "max",
              "sum",
              "mean",
              "last"
            ]
          },
          "condition": {
            "type": "string",
            "enum": [
              ">",
              "<",
              "!=",
              "++",
              "-"
            ]
          },
          "threshold": {
            "type": "number"
          },
          "duration": {
            "type": "string"
          }
        },
        "required": [
          "metric",
          "statistic",
          "condition",
          "threshold",
          "duration"
        ]
      },
      "PreConfiguredAlertTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alertName": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "Critical",
              "Warning",
              "Info"
            ]
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "alertMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertMetricDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "alertName",
          "severity",
          "description",
          "type",
          "alertMetrics"
        ]
      },
      "DashboardGrafanaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "uid": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isStarred": {
            "type": "boolean"
          },
          "sortMeta": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "uid",
          "title",
          "uri",
          "url",
          "slug",
          "type",
          "tags",
          "isStarred",
          "sortMeta"
        ]
      },
      "CommonLabelDto": {
        "type": "object",
        "properties": {
          "alertname": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "applicationId": {
            "type": "string"
          },
          "alertPredicateId": {
            "type": "string"
          },
          "alertInformationId": {
            "type": "string"
          }
        },
        "required": [
          "alertname",
          "instance",
          "job",
          "severity",
          "environmentId",
          "applicationId",
          "alertPredicateId",
          "alertInformationId"
        ]
      },
      "AlertCreateDto": {
        "type": "object",
        "properties": {
          "generatorURL": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "labels": {
            "$ref": "#/components/schemas/CommonLabelDto"
          },
          "annotations": {
            "type": "object"
          },
          "commonAnnotations": {
            "type": "object"
          },
          "startsAt": {
            "format": "date-time",
            "type": "string"
          },
          "endsAt": {
            "format": "date-time",
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          }
        },
        "required": [
          "generatorURL",
          "status",
          "labels",
          "annotations",
          "commonAnnotations",
          "startsAt",
          "endsAt",
          "fingerprint"
        ]
      },
      "AlertRequestDto": {
        "type": "object",
        "properties": {
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertCreateDto"
            }
          }
        },
        "required": [
          "alerts"
        ]
      },
      "CreateUserRequestDto": {
        "type": "object",
        "properties": {
          "notificationsEmail": {
            "type": "string"
          },
          "userAvatar": {
            "type": "file",
            "format": "binary"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "isLocal": {
            "type": "boolean"
          },
          "forceChangePassword": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean",
            "nullable": true
          },
          "environmentCreator": {
            "type": "boolean",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "active",
          "admin",
          "environmentCreator",
          "readOnly"
        ]
      },
      "UserEnvironmentRoleDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "role": {
            "enum": [
              "env:user",
              "env:admin"
            ],
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "userId",
          "environmentId",
          "role"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean"
          },
          "environmentCreator": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "userAvatar": {
            "type": "object"
          },
          "avatarId": {
            "type": "string",
            "nullable": true
          },
          "notificationsEmail": {
            "type": "string",
            "nullable": true
          },
          "mfaSecret": {
            "type": "string",
            "nullable": true
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "receiveAllNotifications": {
            "type": "boolean"
          },
          "isLocal": {
            "type": "boolean"
          },
          "userEnvironmentRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEnvironmentRoleDto"
            }
          },
          "layout": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "email",
          "firstName",
          "lastName",
          "active",
          "admin",
          "environmentCreator",
          "readOnly",
          "userAvatar",
          "avatarId",
          "mfaSecret",
          "lastLogin",
          "receiveAllNotifications",
          "isLocal"
        ]
      },
      "ChangeUserPasswordRequestDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "newPasswordConfirm": {
            "type": "string"
          }
        },
        "required": [
          "oldPassword",
          "newPassword",
          "newPasswordConfirm"
        ]
      },
      "PatchUserRequestDto": {
        "type": "object",
        "properties": {
          "notificationsEmail": {
            "type": "string"
          },
          "userAvatar": {
            "type": "file",
            "format": "binary"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "isLocal": {
            "type": "boolean"
          },
          "forceChangePassword": {
            "type": "boolean"
          },
          "receiveAllNotifications": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean",
            "nullable": true
          },
          "environmentCreator": {
            "type": "boolean",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SingleS3ObjectResponse": {
        "type": "object",
        "properties": {
          "checksumAlgorithm": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "eTag": {
            "type": "string"
          },
          "bucketName": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "lastModified": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "storageClass": {
            "type": "object"
          }
        },
        "required": [
          "checksumAlgorithm",
          "eTag",
          "bucketName",
          "key",
          "lastModified",
          "owner",
          "size",
          "storageClass"
        ]
      },
      "CreateUserEnvironmentRoleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "env:user",
              "env:admin"
            ]
          }
        },
        "required": [
          "userId",
          "environmentId",
          "role"
        ]
      },
      "CreateUserEnvironmentRolesBulkDto": {
        "type": "object",
        "properties": {
          "createUserEnvironmentRoleDtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateUserEnvironmentRoleDto"
            }
          }
        },
        "required": [
          "createUserEnvironmentRoleDtos"
        ]
      },
      "PutUserEnvironmentRoleDto": {
        "type": "object",
        "properties": {
          "environmentId": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "env:user",
              "env:admin"
            ]
          }
        },
        "required": [
          "environmentId",
          "role"
        ]
      },
      "PutUserEnvironmentRolesDto": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PutUserEnvironmentRoleDto"
            }
          }
        },
        "required": [
          "roles"
        ]
      },
      "UserTokenRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "expirationDate"
        ]
      },
      "UserTokenDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "token",
          "expirationDate"
        ]
      },
      "SimpleUserTokenDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "expirationDate"
        ]
      },
      "QuickLinksDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "textOverlay": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "linkPath": {
            "type": "string"
          },
          "isDefault": {
            "type": "number"
          },
          "headerImageType": {
            "type": "string"
          },
          "isSystemDefault": {
            "type": "number"
          },
          "isLogoSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "textOverlay",
          "title",
          "description",
          "linkPath",
          "isDefault",
          "headerImageType",
          "isLogoSelected"
        ]
      },
      "UpsertQuickLinkDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "textOverlay": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "linkPath": {
            "type": "string"
          },
          "isDefault": {
            "type": "number"
          },
          "headerImageType": {
            "type": "string"
          },
          "isSystemDefault": {
            "type": "number"
          },
          "isLogoSelected": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "textOverlay",
          "title",
          "description",
          "linkPath",
          "isDefault",
          "headerImageType"
        ]
      },
      "UpsertQuickLinksDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "selectedQuickLinks": {
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addedQuickLinks": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertQuickLinkDto"
            }
          },
          "editedQuickLinks": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertQuickLinkDto"
            }
          },
          "deletedQuickLinks": {
            "default": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertQuickLinkDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "selectedQuickLinks",
          "addedQuickLinks",
          "editedQuickLinks",
          "deletedQuickLinks"
        ]
      },
      "CreateQuickLinkDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "linkPath": {
            "type": "string"
          },
          "textOverlay": {
            "type": "string"
          },
          "headerImageType": {
            "type": "string"
          },
          "isDefault": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "description",
          "linkPath"
        ]
      },
      "AgentBinariesDownloadUrlsDto": {
        "type": "object",
        "properties": {
          "linux": {
            "type": "string"
          },
          "windows": {
            "type": "string"
          }
        },
        "required": [
          "linux",
          "windows"
        ]
      },
      "AgentDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "registered": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "state": {
            "enum": [
              "Active",
              "Inactive",
              "Paused",
              "Error"
            ],
            "type": "string"
          },
          "stateInformation": {
            "type": "string"
          },
          "portForwarders": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "version": {
            "type": "string"
          },
          "tokenExpirationTime": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "groupId",
          "name",
          "description",
          "registered",
          "enabled",
          "state",
          "stateInformation",
          "version",
          "tokenExpirationTime",
          "createdDate",
          "lastModifiedDate"
        ]
      },
      "PostAgentRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "groupId",
          "description"
        ]
      },
      "PatchAgentRequestDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "AuthenticationTokenDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "version"
        ]
      },
      "InletDto": {
        "type": "object",
        "properties": {
          "serverEndPoint": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "serverEndPoint",
          "serverName",
          "token"
        ]
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "inlet": {
            "$ref": "#/components/schemas/InletDto"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "portForwarders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "inlet",
          "environments",
          "portForwarders",
          "agents"
        ]
      },
      "PostGroupRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "environments"
        ]
      },
      "PutGroupRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "environments"
        ]
      },
      "EnvironmentsSummaryDto": {
        "type": "object",
        "properties": {
          "numCritical": {
            "type": "number"
          },
          "numWarning": {
            "type": "number"
          },
          "numOperational": {
            "type": "number"
          },
          "numNoStatus": {
            "type": "number",
            "description": "Number of environments whose status could not be retrieved"
          }
        },
        "required": [
          "numCritical",
          "numWarning",
          "numOperational",
          "numNoStatus"
        ]
      },
      "EnvironmentTierDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "tierName": {
            "type": "string"
          },
          "tierConfiguration": {
            "type": "object"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "tierName",
          "tierConfiguration",
          "isDefault"
        ]
      },
      "CreateEnvironmentRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15
          },
          "tierName": {
            "type": "string"
          },
          "clusterId": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "enum": [
              "NonProduction",
              "Production"
            ]
          }
        },
        "required": [
          "name",
          "clusterId",
          "type"
        ]
      },
      "EnvironmentWithAppsViewDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15
          },
          "type": {
            "enum": [
              "NonProduction",
              "Production"
            ],
            "type": "string"
          },
          "tier": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "string"
          },
          "controlPanelEndpoint": {
            "type": "string"
          },
          "restEndpoint": {
            "type": "string"
          },
          "ldapsEndpoint": {
            "type": "string"
          },
          "isStopped": {
            "type": "boolean"
          },
          "clusterId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "type",
          "tier",
          "creatorUserId",
          "controlPanelEndpoint",
          "restEndpoint",
          "ldapsEndpoint",
          "isStopped",
          "clusterId",
          "description"
        ]
      },
      "PatchEnvironmentDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        },
        "required": [
          "description"
        ]
      },
      "EnvironmentDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15
          },
          "type": {
            "type": "string",
            "enum": [
              "NonProduction",
              "Production"
            ]
          },
          "tier": {
            "type": "string"
          },
          "creatorUserId": {
            "type": "string"
          },
          "controlPanelEndpoint": {
            "type": "string"
          },
          "restEndpoint": {
            "type": "string"
          },
          "ldapsEndpoint": {
            "type": "string"
          },
          "isStopped": {
            "type": "boolean"
          },
          "clusterId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "type",
          "tier",
          "creatorUserId",
          "controlPanelEndpoint",
          "restEndpoint",
          "ldapsEndpoint",
          "isStopped",
          "clusterId",
          "description"
        ]
      },
      "EnvironmentStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object"
          },
          "jobStatus": {
            "type": "object",
            "nullable": true
          },
          "isReady": {
            "type": "boolean"
          }
        },
        "required": [
          "status",
          "jobStatus",
          "isReady"
        ]
      },
      "EnvironmentIdStatusDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "object"
          },
          "jobStatus": {
            "type": "object",
            "nullable": true
          },
          "isReady": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "status",
          "jobStatus",
          "isReady"
        ]
      },
      "EnvironmentJobDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "jobType": {
            "type": "string",
            "enum": [
              "ENVIRONMENT_CREATION",
              "ENVIRONMENT_DELETE",
              "FID_BACKUP_CREATE",
              "FID_BACKUP_RESTORE",
              "FID_UPDATE",
              "FID_CREATION",
              "FID_DELETE",
              "FID_RESTART",
              "FID_START",
              "FID_STOP",
              "FID_ENDPOINTS",
              "FID_ENDPOINTS_RESTART",
              "BW_CREATION",
              "BW_DELETE",
              "BW_BACKUP_CREATE",
              "BW_BACKUP_RESTORE",
              "BW_BACKUP_DELETE",
              "BW_START",
              "BW_STOP",
              "BW_RESTART",
              "BW_UPDATE",
              "IDO_CREATION",
              "IDO_DELETE",
              "IDO_START",
              "IDO_STOP",
              "IDO_RESTART",
              "IDO_UPDATE"
            ]
          },
          "environmentId": {
            "type": "string"
          },
          "jobStatus": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "jobId",
          "jobType",
          "environmentId",
          "jobStatus"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SendResetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "OidcSettingsDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "discoveryUrl": {
            "type": "string"
          },
          "authorizationEndpointUrl": {
            "type": "string"
          },
          "tokenEndpointUrl": {
            "type": "string"
          },
          "emailScope": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "discoveryUrl",
          "authorizationEndpointUrl",
          "tokenEndpointUrl",
          "emailScope"
        ]
      },
      "OidcProviderDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isMfaEnabled": {
            "type": "boolean"
          },
          "oidcSettings": {
            "$ref": "#/components/schemas/OidcSettingsDto"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "isEnabled",
          "isMfaEnabled",
          "oidcSettings"
        ]
      },
      "OidcSettingsCreateDto": {
        "type": "object",
        "properties": {
          "discoveryUrl": {
            "type": "string"
          },
          "emailScope": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          }
        }
      },
      "OidcProviderCreateDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Flag to indicate whether the provider is enabled or not. Defaults to true if not provided."
          },
          "isMfaEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "oidcSettings": {
            "$ref": "#/components/schemas/OidcSettingsCreateDto"
          }
        },
        "required": [
          "isMfaEnabled",
          "name",
          "clientId",
          "clientSecret",
          "oidcSettings"
        ]
      },
      "OidcSettingsUpdateDto": {
        "type": "object",
        "properties": {
          "discoveryUrl": {
            "type": "string"
          },
          "emailScope": {
            "type": "string"
          }
        },
        "required": [
          "discoveryUrl"
        ]
      },
      "OidcProviderUpdateDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "default": true,
            "description": "Flag to indicate whether the provider is enabled or not. Defaults to true if not provided."
          },
          "isMfaEnabled": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "oidcSettings": {
            "$ref": "#/components/schemas/OidcSettingsUpdateDto"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "isMfaEnabled",
          "oidcSettings",
          "name"
        ]
      },
      "DiscoveredProviderDto": {
        "type": "object",
        "properties": {
          "authorizationEndpointUrl": {
            "type": "string"
          },
          "tokenEndpointUrl": {
            "type": "string"
          },
          "supportedScopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TemplateOidcSettings": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string"
          },
          "discoveryUrl": {
            "type": "string"
          },
          "authorizationEndpointUrl": {
            "type": "string"
          },
          "tokenEndpointUrl": {
            "type": "string"
          },
          "emailScope": {
            "type": "string"
          }
        },
        "required": [
          "templateName"
        ]
      },
      "OidcTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "oidcSettings": {
            "$ref": "#/components/schemas/TemplateOidcSettings"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "templateName",
          "oidcSettings"
        ]
      },
      "EndpointTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "templateLabel": {
            "type": "string"
          },
          "templatePrefix": {
            "type": "string"
          },
          "templateSuffix": {
            "type": "string"
          },
          "templateProtocol": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "templateName",
          "templateLabel",
          "templatePrefix",
          "templateSuffix",
          "templateProtocol"
        ]
      },
      "CreateEndpointDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "appId",
          "templateId",
          "enabled"
        ]
      },
      "EndpointDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "endpointTemplateName": {
            "type": "string"
          },
          "endpointTemplateLabel": {
            "type": "string"
          },
          "endpointTemplateApp": {
            "type": "string"
          },
          "endpointLink": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "appId",
          "templateId",
          "endpointTemplateName",
          "endpointTemplateLabel",
          "endpointTemplateApp",
          "endpointLink",
          "enabled"
        ]
      },
      "EnvironmentAppTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "name": {
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ],
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "multiInstance": {
            "type": "boolean"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "fid",
                "brainwave",
                "observability"
              ]
            }
          },
          "dependents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "name",
          "label",
          "multiInstance",
          "dependencies",
          "dependents",
          "fields"
        ]
      },
      "EnvironmentAppNodeLimitsAggregateDto": {
        "type": "object",
        "properties": {
          "limits": {
            "type": "object"
          }
        },
        "required": [
          "limits"
        ]
      },
      "EnvironmentAppDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "templateName": {
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ],
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "appImageId": {
            "type": "string"
          },
          "isUpdateAvailable": {
            "type": "boolean"
          },
          "meta": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "backupSettings": {
            "$ref": "#/components/schemas/BackupSettings"
          },
          "isWhitelistActive": {
            "type": "boolean"
          },
          "logsettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogConfig"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "templateName",
          "environmentId",
          "appImageId",
          "isUpdateAvailable",
          "meta",
          "backupSettings",
          "isWhitelistActive",
          "logsettings"
        ]
      },
      "CreateEnvironmentAppRequestDto": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ]
          },
          "appImageId": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "description": {
            "type": "string",
            "maxLength": 255
          },
          "meta": {
            "type": "object"
          },
          "logsettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogConfig"
            }
          }
        },
        "required": [
          "templateName",
          "appImageId",
          "fields",
          "meta",
          "logsettings"
        ]
      },
      "PatchEnvironmentAppRequestDto": {
        "type": "object",
        "properties": {
          "appImageId": {
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "description": {
            "type": "string",
            "maxLength": 255
          },
          "meta": {
            "type": "object"
          },
          "logsettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogConfig"
            }
          }
        }
      },
      "ScaleEnvironmentAppRequestDto": {
        "type": "object",
        "properties": {
          "newScale": {
            "type": "number",
            "minimum": 0,
            "maximum": 5
          }
        },
        "required": [
          "newScale"
        ]
      },
      "ChangeEnvironmentAppPasswordRequestDto": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "newPassword"
        ]
      },
      "AppVersionHistoryAppImageDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "releaseChannel": {
            "$ref": "#/components/schemas/ReleaseChannelDto"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "appVersion",
          "releaseChannel"
        ]
      },
      "EnvironmentAppVersionHistoryEntryDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "appImage": {
            "$ref": "#/components/schemas/AppVersionHistoryAppImageDto"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "required": false,
                "type": "string"
              }
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "appImage",
          "user"
        ]
      },
      "EnvironmentAppVersionUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "label",
          "isDisabled",
          "description"
        ]
      },
      "EnvironmentAppIdStatusDto": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string"
          },
          "appStatus": {
            "type": "object"
          },
          "nodes": {
            "type": "object"
          },
          "jobStatus": {
            "type": "object",
            "nullable": true
          },
          "isReady": {
            "type": "boolean"
          },
          "isStopped": {
            "type": "boolean"
          },
          "endpointId": {
            "type": "string",
            "nullable": true,
            "description": "the endpoint that is affected by a job, if any"
          }
        },
        "required": [
          "appId",
          "appStatus",
          "nodes",
          "jobStatus",
          "isReady",
          "isStopped",
          "endpointId"
        ]
      },
      "ConvertScheduleToCronResponse": {
        "type": "object",
        "properties": {
          "cron": {
            "type": "string"
          },
          "readableCron": {
            "type": "string"
          },
          "nextExecution": {
            "type": "string"
          }
        },
        "required": [
          "cron",
          "readableCron",
          "nextExecution"
        ]
      },
      "EnvironmentBackupRequestDto": {
        "type": "object",
        "properties": {
          "backupName": {
            "type": "string"
          }
        },
        "required": [
          "backupName"
        ]
      },
      "BackupSettingsSchedule": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly"
            ]
          },
          "every": {
            "type": "string",
            "enum": [
              "2 hours",
              "4 hours",
              "6 hours",
              "8 hours",
              "12 hours",
              "24 hours",
              "2 days",
              "3 days",
              "4 days",
              "5 days",
              "1 week"
            ]
          },
          "startDay": {
            "type": "string",
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday"
            ]
          },
          "startHours": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20",
              "21",
              "22",
              "23"
            ]
          },
          "startMinutes": {
            "type": "string",
            "enum": [
              "0",
              "15",
              "30",
              "45"
            ]
          },
          "currentTimeZone": {
            "type": "string"
          }
        },
        "required": [
          "frequency",
          "every",
          "startHours",
          "startMinutes"
        ]
      },
      "UpdateEnvironmentBackupSettingsRequestDto": {
        "type": "object",
        "properties": {
          "timeZone": {
            "type": "string",
            "example": "America/Los_Angeles",
            "description": "Valid IANA timezone"
          },
          "retentionPeriod": {
            "type": "number",
            "minimum": 1
          },
          "schedule": {
            "$ref": "#/components/schemas/BackupSettingsSchedule"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "timeZone",
          "retentionPeriod",
          "schedule",
          "enabled"
        ]
      },
      "CreateLogIntegrationRequestDto": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationFieldInstance"
            }
          }
        },
        "required": [
          "templateId",
          "name",
          "fieldInstances"
        ]
      },
      "PatchLogIntegrationRequestDto": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationFieldInstance"
            }
          }
        }
      },
      "LogIntegrationDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationFieldInstance"
            }
          },
          "createdById": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "templateId",
          "name",
          "fieldInstances",
          "createdById",
          "templateName",
          "isDefault"
        ]
      },
      "LogIntegrationTemplateFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isOptional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "label",
          "type"
        ]
      },
      "LogIntegrationTemplateDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "fieldTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogIntegrationTemplateFieldDto"
            }
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "type",
          "icon",
          "fieldTemplates"
        ]
      },
      "ClusterDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "argocdClusterName": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "isDefault"
        ]
      },
      "CreateClusterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "argocdClusterName": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "argocdClusterName"
        ]
      },
      "PatchClusterDto": {
        "type": "object",
        "properties": {
          "argocdClusterName": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "ActionDto": {
        "type": "object",
        "properties": {
          "progress": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "doneAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "attempt": {
            "type": "number"
          }
        },
        "required": [
          "progress",
          "status",
          "description",
          "doneAt",
          "attempt"
        ]
      },
      "TaskStatusActionsAggregateDto": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionDto"
            }
          },
          "taskId": {
            "type": "string"
          }
        },
        "required": [
          "actions",
          "taskId"
        ]
      },
      "TaskStatusDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "environmentName": {
            "type": "string"
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "applicationType": {
            "enum": [
              "fid",
              "brainwave",
              "observability"
            ],
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "internalJobId": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "startAt": {
            "format": "date-time",
            "type": "string"
          },
          "endAt": {
            "format": "date-time",
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionDto"
            }
          },
          "logs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "environmentId",
          "environmentName",
          "applicationId",
          "applicationName",
          "applicationType",
          "jobId",
          "internalJobId",
          "jobType",
          "status",
          "progress",
          "description",
          "actions",
          "logs",
          "data"
        ]
      },
      "NameAvailabilityResponseDto": {
        "type": "object",
        "properties": {
          "isNameAvailable": {
            "type": "boolean"
          }
        },
        "required": [
          "isNameAvailable"
        ]
      },
      "ScheduledMaintenanceCreateDto": {
        "type": "object",
        "properties": {
          "startAt": {
            "format": "date-time",
            "type": "string"
          },
          "endAt": {
            "format": "date-time",
            "type": "string"
          },
          "notified": {
            "type": "boolean"
          },
          "jsonConfig": {
            "type": "object"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "severity": {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4,
              5
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Scheduled",
              "In Progress",
              "Completed",
              "Canceled",
              "Postponed",
              "Inactive",
              "Failed",
              "Awaiting Verification",
              "Rolling Back"
            ]
          }
        },
        "required": [
          "startAt",
          "endAt",
          "notified",
          "jsonConfig",
          "title",
          "description",
          "severity",
          "status"
        ]
      },
      "JsonConfigDto": {
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "providerName",
          "internalId",
          "tags",
          "services"
        ]
      },
      "ScheduledMaintenanceDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "startAt": {
            "format": "date-time",
            "type": "string"
          },
          "endAt": {
            "format": "date-time",
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "notified": {
            "type": "boolean"
          },
          "jsonConfig": {
            "$ref": "#/components/schemas/JsonConfigDto"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "severity": {
            "enum": [
              1,
              2,
              3,
              4,
              5
            ],
            "type": "number"
          },
          "status": {
            "enum": [
              "Scheduled",
              "In Progress",
              "Completed",
              "Canceled",
              "Postponed",
              "Inactive",
              "Failed",
              "Awaiting Verification",
              "Rolling Back"
            ],
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "startAt",
          "endAt",
          "active",
          "notified",
          "jsonConfig",
          "title",
          "description",
          "duration",
          "severity",
          "status"
        ]
      },
      "ScheduledMaintenanceUpdateDto": {
        "type": "object",
        "properties": {}
      },
      "TenantDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "name",
          "description",
          "url",
          "apiKey"
        ]
      },
      "CreateTenantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "url",
          "apiKey"
        ]
      },
      "KibanaIndexPatternDto": {
        "type": "object",
        "properties": {
          "kibanaIndexId": {
            "type": "string"
          },
          "kibanaIndexName": {
            "type": "string"
          }
        },
        "required": [
          "kibanaIndexId",
          "kibanaIndexName"
        ]
      },
      "WidgetDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "attributes"
        ]
      },
      "ServiceStatusDTO": {
        "type": "object",
        "properties": {}
      },
      "IpWhitelistRequestDto": {
        "type": "object",
        "properties": {
          "ipCidr": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ipCidr"
        ]
      },
      "IpWhitelist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "application": {
            "$ref": "#/components/schemas/EnvironmentApp"
          },
          "applicationId": {
            "type": "string"
          },
          "applicationName": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "environmentId": {
            "type": "string"
          },
          "environmentName": {
            "type": "string"
          },
          "ipCidr": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "application",
          "applicationId",
          "applicationName",
          "environment",
          "environmentId",
          "environmentName",
          "ipCidr",
          "description",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "MaintenanceDetailsDto": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string"
          },
          "Time": {
            "type": "string"
          },
          "Duration": {
            "type": "string"
          }
        },
        "required": [
          "Date",
          "Time",
          "Duration"
        ]
      },
      "ContentDto": {
        "type": "object",
        "properties": {
          "maintenanceDetails": {
            "$ref": "#/components/schemas/MaintenanceDetailsDto"
          },
          "affectedServices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "maintenanceDetails",
          "affectedServices",
          "message"
        ]
      },
      "CreateUserNotificationDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/ContentDto"
          },
          "deliveryMethod": {
            "type": "string",
            "enum": [
              "email",
              "sms",
              "push",
              "in_app"
            ]
          },
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "pending",
              "sent",
              "read",
              "failed"
            ]
          },
          "severity": {
            "type": "string",
            "default": "low",
            "enum": [
              "low",
              "medium",
              "high"
            ]
          },
          "scheduleTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "userId",
          "category",
          "content",
          "deliveryMethod",
          "status",
          "severity"
        ]
      },
      "UserNotificationDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "internalId": {
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/ContentDto"
          },
          "deliveryMethod": {
            "enum": [
              "email",
              "sms",
              "push",
              "in_app"
            ],
            "type": "string"
          },
          "status": {
            "default": "pending",
            "enum": [
              "pending",
              "sent",
              "read",
              "failed"
            ],
            "type": "string"
          },
          "severity": {
            "default": "low",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "type": "string"
          },
          "scheduleTime": {
            "format": "date-time",
            "type": "string"
          },
          "acknowledgedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "userId",
          "category",
          "content",
          "deliveryMethod",
          "status",
          "severity"
        ]
      },
      "BulkAcknowledgmentDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "acknowledgedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "sent",
              "read",
              "failed"
            ]
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "deletedAt",
          "id",
          "ids",
          "acknowledgedAt",
          "status"
        ]
      },
      "UserFavoriteEnvironmentDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Unique ID of the user"
          },
          "environmentId": {
            "type": "string",
            "description": "Unique ID of the environment"
          }
        },
        "required": [
          "userId",
          "environmentId"
        ]
      }
    }
  }
}
